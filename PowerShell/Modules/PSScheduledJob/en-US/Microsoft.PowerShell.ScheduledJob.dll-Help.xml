<?xml version="1.0" encoding="utf-8"?>
<helpItems schema="maml">

<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
<command:details><command:name>Add-JobTrigger</command:name>
<command:verb>Add</command:verb>
<command:noun>JobTrigger</command:noun>
<maml:description><maml:para>Adds job triggers to scheduled jobs.
</maml:para>
</maml:description>
</command:details>
<maml:description><maml:para>The Add-JobTrigger cmdlet adds job triggers to scheduled jobs. You can use it to add multiple triggers to multiple scheduled jobs.
</maml:para>
<maml:para>A job trigger starts a scheduled job on a one-time or recurring schedule or when an event occurs.
</maml:para>
<maml:para>Use the Trigger parameter of Add-JobTrigger to identify the job triggers to add. Use the Name , ID , or InputObject parameters of Add-JobTrigger to identify the scheduled job to which the triggers are added.
</maml:para>
<maml:para>To create job triggers for the value of the Trigger parameter, use the New-JobTrigger cmdlet or use a hash table to specify the job trigger. Add-JobTrigger is one of a collection of job scheduling cmdlets in the PSScheduledJob module that is included in Windows PowerShell.
</maml:para>
<maml:para>For more information about Scheduled Jobs, see the About topics in the PSScheduledJob module. Import the PSScheduledJob module and then type: `Get-Help about_Scheduled*` or see about_Scheduled_Jobs.
</maml:para>
<maml:para>This cmdlet was introduced in Windows PowerShell 3.0.
</maml:para>
</maml:description>
<command:syntax><command:syntaxItem><maml:name>Add-JobTrigger</maml:name>
<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="0" aliases="none"><maml:name>Id</maml:name>
<maml:Description><maml:para>Specifies the identification numbers of the scheduled jobs. Add-JobTrigger adds the job trigger to the specified scheduled jobs.
</maml:para>
<maml:para>To get the identification number of scheduled jobs on the local computer or a remote computer, use the Get-ScheduledJob cmdlet.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">Int32[]</command:parameterValue>
<dev:type><maml:name>Int32[]</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByValue)" position="1" aliases="none"><maml:name>Trigger</maml:name>
<maml:Description><maml:para>Specifies the job triggers to add. Enter a hash table that specifies job triggers or a variable that contains ScheduledJobTrigger objects, or type a command or expression that gets ScheduledJobTrigger objects, such as a Get-JobTrigger command. You can also pipe ScheduledJobTrigger objects to Add-JobTrigger .
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">ScheduledJobTrigger[]</command:parameterValue>
<dev:type><maml:name>ScheduledJobTrigger[]</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
</command:syntaxItem>
<command:syntaxItem><maml:name>Add-JobTrigger</maml:name>
<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByValue)" position="0" aliases="none"><maml:name>InputObject</maml:name>
<maml:Description><maml:para>Specifies the scheduled jobs. Enter a variable that contains ScheduledJob objects or type a command or expression that gets ScheduledJob objects, such as a Get-ScheduledJob command. You can also pipe ScheduledJob objects to Add-JobTrigger .
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">ScheduledJobDefinition[]</command:parameterValue>
<dev:type><maml:name>ScheduledJobDefinition[]</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByValue)" position="1" aliases="none"><maml:name>Trigger</maml:name>
<maml:Description><maml:para>Specifies the job triggers to add. Enter a hash table that specifies job triggers or a variable that contains ScheduledJobTrigger objects, or type a command or expression that gets ScheduledJobTrigger objects, such as a Get-JobTrigger command. You can also pipe ScheduledJobTrigger objects to Add-JobTrigger .
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">ScheduledJobTrigger[]</command:parameterValue>
<dev:type><maml:name>ScheduledJobTrigger[]</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
</command:syntaxItem>
<command:syntaxItem><maml:name>Add-JobTrigger</maml:name>
<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="0" aliases="none"><maml:name>Name</maml:name>
<maml:Description><maml:para>Specifies the names of the scheduled jobs. Add-JobTrigger adds the job triggers to the specified scheduled jobs. Wildcards are supported.
</maml:para>
<maml:para>To get the names of scheduled jobs on the local computer or a remote computer, use the Get-ScheduledJob cmdlet.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
<dev:type><maml:name>String[]</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByValue)" position="1" aliases="none"><maml:name>Trigger</maml:name>
<maml:Description><maml:para>Specifies the job triggers to add. Enter a hash table that specifies job triggers or a variable that contains ScheduledJobTrigger objects, or type a command or expression that gets ScheduledJobTrigger objects, such as a Get-JobTrigger command. You can also pipe ScheduledJobTrigger objects to Add-JobTrigger .
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">ScheduledJobTrigger[]</command:parameterValue>
<dev:type><maml:name>ScheduledJobTrigger[]</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
</command:syntaxItem>
</command:syntax>
<command:parameters><command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="0" aliases="none"><maml:name>Id</maml:name>
<maml:Description><maml:para>Specifies the identification numbers of the scheduled jobs. Add-JobTrigger adds the job trigger to the specified scheduled jobs.
</maml:para>
<maml:para>To get the identification number of scheduled jobs on the local computer or a remote computer, use the Get-ScheduledJob cmdlet.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">Int32[]</command:parameterValue>
<dev:type><maml:name>Int32[]</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByValue)" position="0" aliases="none"><maml:name>InputObject</maml:name>
<maml:Description><maml:para>Specifies the scheduled jobs. Enter a variable that contains ScheduledJob objects or type a command or expression that gets ScheduledJob objects, such as a Get-ScheduledJob command. You can also pipe ScheduledJob objects to Add-JobTrigger .
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">ScheduledJobDefinition[]</command:parameterValue>
<dev:type><maml:name>ScheduledJobDefinition[]</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="0" aliases="none"><maml:name>Name</maml:name>
<maml:Description><maml:para>Specifies the names of the scheduled jobs. Add-JobTrigger adds the job triggers to the specified scheduled jobs. Wildcards are supported.
</maml:para>
<maml:para>To get the names of scheduled jobs on the local computer or a remote computer, use the Get-ScheduledJob cmdlet.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
<dev:type><maml:name>String[]</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByValue)" position="1" aliases="none"><maml:name>Trigger</maml:name>
<maml:Description><maml:para>Specifies the job triggers to add. Enter a hash table that specifies job triggers or a variable that contains ScheduledJobTrigger objects, or type a command or expression that gets ScheduledJobTrigger objects, such as a Get-JobTrigger command. You can also pipe ScheduledJobTrigger objects to Add-JobTrigger .
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">ScheduledJobTrigger[]</command:parameterValue>
<dev:type><maml:name>ScheduledJobTrigger[]</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
</command:parameters>
<command:inputTypes><command:inputType><dev:type><maml:name>Microsoft.PowerShell.ScheduledJob.ScheduledJobTrigger, Microsoft.PowerShell.ScheduledJob.ScheduledJobDefinition</maml:name>
</dev:type>
<maml:description><maml:para>You can pipe job triggers or scheduled jobs to Add-JobTrigger .
</maml:para>
</maml:description>
</command:inputType>
</command:inputTypes>
<command:returnValues><command:returnValue><dev:type><maml:name>None</maml:name>
</dev:type>
<maml:description><maml:para>This cmdlet does not return any output.
</maml:para>
</maml:description>
</command:returnValue>
</command:returnValues>
<maml:alertSet><maml:alert><maml:para>
</maml:para>
</maml:alert>
</maml:alertSet>
<command:examples><command:example><maml:title>Example 1: Add a job trigger to a scheduled job</maml:title>
<dev:code>PS C:\&gt;$Daily = New-JobTrigger -Daily -At 3AMPS 
PS C:\&gt;Add-JobTrigger -Trigger $Daily -Name "TestJob"</dev:code>
<dev:remarks><maml:para>These commands add the Daily job trigger to the TestJob scheduled job.
</maml:para>
<maml:para>The first command uses the New-JobTrigger cmdlet to create a job trigger that starts a scheduled job every day at 3:00 a.m. The command saves the job trigger in the $Daily variable.
</maml:para>
<maml:para>The second command uses the Add-JobTrigger cmdlet to add the job trigger in the $Startup variable to the TestJob scheduled job.
</maml:para>
</dev:remarks>
</command:example>
<command:example><maml:title>Example 2: Add a job trigger to several scheduled jobs</maml:title>
<dev:code>PS C:\&gt;Get-ScheduledJob | Add-JobTrigger -Trigger (New-JobTrigger -AtStartup)</dev:code>
<dev:remarks><maml:para>This command adds an AtStartup job trigger to all scheduled jobs on the local computer. It uses the Get-ScheduledJob to get all of the scheduled jobs on the computer. It uses a pipeline operator (|) to send the jobs to the Add-JobTrigger cmdlet, which adds the job trigger to each of the scheduled jobs. The value of the Trigger parameter is a New-JobTrigger command that creates the AtStartup job trigger.
</maml:para>
</dev:remarks>
</command:example>
<command:example><maml:title>Example 3: Copy a job trigger</maml:title>
<dev:code>PS C:\&gt;$T = Get-JobTrigger -Name "BackupArchives"
PS C:\&gt;Add-JobTrigger -Name "TestBackup,BackupLogs" -Trigger $T</dev:code>
<dev:remarks><maml:para>These commands copy the job trigger from the BackupArchives scheduled job and add it to the TestBackup and BackupLogs scheduled jobs.
</maml:para>
<maml:para>The first command uses the Get-JobTrigger cmdlet to get the job trigger of the BackupArchives scheduled job. The command saves the trigger in the $t variable.
</maml:para>
<maml:para>The second command uses the Add-JobTrigger cmdlet to add the job trigger in $t to the TestBackup and BackupLogs scheduled jobs.
</maml:para>
</dev:remarks>
</command:example>
</command:examples>
<command:relatedLinks><maml:navigationLink><maml:linkText>Online Version:</maml:linkText>
<maml:uri>http://go.microsoft.com/fwlink/?LinkId=821680</maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Add-JobTrigger</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Disable-JobTrigger</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Disable-ScheduledJob</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Enable-JobTrigger</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Enable-ScheduledJob</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Get-JobTrigger</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Get-ScheduledJob</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Get-ScheduledJobOption</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>New-JobTrigger</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>New-ScheduledJobOption</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Register-ScheduledJob</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Remove-JobTrigger</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Set-JobTrigger</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Set-ScheduledJob</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Set-ScheduledJobOption</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Unregister-ScheduledJob</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
</command:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
<command:details><command:name>Disable-JobTrigger</command:name>
<command:verb>Disable</command:verb>
<command:noun>JobTrigger</command:noun>
<maml:description><maml:para>Disables the job triggers of scheduled jobs.
</maml:para>
</maml:description>
</command:details>
<maml:description><maml:para>The Disable-JobTrigger cmdlet temporarily disables the job triggers of scheduled jobs. Disabling preserves all job trigger properties, but it prevents the job trigger from starting the scheduled job.
</maml:para>
<maml:para>To use this cmdlet, use the Get-JobTrigger cmdlet to get the job triggers. Then pipe the job triggers to Disable-JobTrigger or use its InputObject parameter.
</maml:para>
<maml:para>To disable a job trigger, the Disable-JobTrigger cmdlet sets the Enabled property of the job trigger to $False. To re-enable the job trigger, use the Enable-JobTrigger cmdlet, which sets the Enabled property of the job trigger to $True. Disabling a job trigger does not disable the scheduled job, such as is done by the Disable-ScheduledJob cmdlet, but if you disable all job triggers, the effect is the same as disabling the scheduled job.
</maml:para>
<maml:para>If you disable a scheduled job or disable all job triggers of a scheduled job, you can still start the job by using the Start-Job cmdlet or use the disabled scheduled job as a template. Disable-ScheduledJob is one of a collection of job scheduling cmdlets in the PSScheduledJob module that is included in Windows PowerShell.
</maml:para>
<maml:para>For more information about Scheduled Jobs, see the About topics in the PSScheduledJob module. Import the PSScheduledJob module and then type: `Get-Help about_Scheduled*` or see about_Scheduled_Jobs.
</maml:para>
<maml:para>This cmdlet was introduced in Windows PowerShell 3.0.
</maml:para>
</maml:description>
<command:syntax><command:syntaxItem><maml:name>Disable-JobTrigger</maml:name>
<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByValue)" position="0" aliases="none"><maml:name>InputObject</maml:name>
<maml:Description><maml:para>Specifies the job trigger to be disabled. Enter a variable that contains ScheduledJobTrigger objects or type a command or expression that gets ScheduledJobTriger objects, such as a Get-JobTrigger command. You can also pipe a ScheduledJobTrigger object to Disable-JobTrigger .
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">ScheduledJobTrigger[]</command:parameterValue>
<dev:type><maml:name>ScheduledJobTrigger[]</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="cf"><maml:name>Confirm</maml:name>
<maml:Description><maml:para>Prompts you for confirmation before running the cmdlet.
</maml:para>
</maml:Description>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>PassThru</maml:name>
<maml:Description><maml:para>Returns an object representing the item with which you are working. By default, this cmdlet does not generate any output.
</maml:para>
</maml:Description>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="wi"><maml:name>WhatIf</maml:name>
<maml:Description><maml:para>Shows what would happen if the cmdlet runs. The cmdlet is not run.
</maml:para>
</maml:Description>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
</command:syntaxItem>
</command:syntax>
<command:parameters><command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="cf"><maml:name>Confirm</maml:name>
<maml:Description><maml:para>Prompts you for confirmation before running the cmdlet.
</maml:para>
</maml:Description>
<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByValue)" position="0" aliases="none"><maml:name>InputObject</maml:name>
<maml:Description><maml:para>Specifies the job trigger to be disabled. Enter a variable that contains ScheduledJobTrigger objects or type a command or expression that gets ScheduledJobTriger objects, such as a Get-JobTrigger command. You can also pipe a ScheduledJobTrigger object to Disable-JobTrigger .
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">ScheduledJobTrigger[]</command:parameterValue>
<dev:type><maml:name>ScheduledJobTrigger[]</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>PassThru</maml:name>
<maml:Description><maml:para>Returns an object representing the item with which you are working. By default, this cmdlet does not generate any output.
</maml:para>
</maml:Description>
<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="wi"><maml:name>WhatIf</maml:name>
<maml:Description><maml:para>Shows what would happen if the cmdlet runs. The cmdlet is not run.
</maml:para>
</maml:Description>
<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
</command:parameters>
<command:inputTypes><command:inputType><dev:type><maml:name>Microsoft.PowerShell.ScheduledJob.ScheduledJobTrigger</maml:name>
</dev:type>
<maml:description><maml:para>You can pipe job triggers to Disable-JobTrigger .
</maml:para>
</maml:description>
</command:inputType>
</command:inputTypes>
<command:returnValues><command:returnValue><dev:type><maml:name>None</maml:name>
</dev:type>
<maml:description><maml:para>This cmdlet does not generate any output.
</maml:para>
</maml:description>
</command:returnValue>
</command:returnValues>
<maml:alertSet><maml:alert><maml:para> Disable-JobTrigger * does not generate errors or warnings if you disable a job trigger that is already disabled.
</maml:para>
</maml:alert>
</maml:alertSet>
<command:examples><command:example><maml:title>Example 1: Disable a job trigger</maml:title>
<dev:code>PS C:\&gt;Get-JobTrigger -Name "Backup-Archives" -TriggerID 1 | Disable-JobTrigger</dev:code>
<dev:remarks><maml:para>This command disables the first trigger (ID=1) of the Backup-Archives scheduled job on the local computer.
</maml:para>
<maml:para>The command uses the Get-JobTrigger cmdlet to get the job trigger. A pipeline operator sends the job trigger to the Disable-JobTrigger cmdlet, which disables it.
</maml:para>
</dev:remarks>
</command:example>
<command:example><maml:title>Example 2: Disable all job triggers</maml:title>
<dev:code>The first command uses the Get-ScheduledJob cmdlet to get the Backup-Archives and Inventory scheduled jobs. A pipeline operator (|) sends the scheduled jobs to the Get-JobTrigger cmdlet, which gets all job triggers of the scheduled jobs. Another pipeline operator sends the job triggers to the **Disable-JobTrigger** cmdlet, which disables them.The first command uses the **Get-ScheduledJob** cmdlet to get the jobs, because its *Name* parameter takes multiple names.
PS C:\&gt;Get-ScheduledJob -Name "Backup-Archives,Inventory" | Get-JobTrigger | Disable-JobTrigger

The second command displays the results. The command repeats the **Get-ScheduledJob** and **Get-JobTrigger** command. A pipeline operator sends the job triggers to the Format-Table cmdlet, which displays the job triggers in a table. The **Format-Table** command adds a JobName property that displays the value of the Name property of the scheduled job in the JobDefinition property of the job trigger object. 
PS C:\&gt;Get-ScheduledJob -Name "Backup-Archives,Inventory" | Get-JobTrigger | Format-Table -Property ID, Frequency, At, DaysOfWeek, Enabled, @{Label="JobName";Expression={$_.JobDefinition.Name}} -AutoSize
Id Frequency At                     DaysOfWeek Enabled JobName
-- --------- --                     ---------- ------- ------- 
1  Weekly    9/28/2011 3:00:00 AM   {Monday}   False   Backup-Archive
2  Daily     9/29/2011 1:00:00 AM              False   Backup-Archive
1  Weekly    10/20/2011 11:00:00 PM {Friday}   False   Inventory
1  Weekly    11/2/2011 2:00:00 PM   {Monday}   False   Inventory</dev:code>
<dev:remarks><maml:para>These commands disable all job triggers on two scheduled jobs and display the results.
</maml:para>
</dev:remarks>
</command:example>
<command:example><maml:title>Example 3: Disable job trigger of a scheduled job on a remote computer</maml:title>
<dev:code>PS C:\&gt;Invoke-Command -ComputerName Server01 {Get-JobTrigger -Name DeployPackage | Where-Object {$_.Frequency -eq "Daily"} | Disable-JobTrigger}</dev:code>
<dev:remarks><maml:para>This command disables the daily job triggers on the DeployPackage scheduled job on the Server01 remote computer.
</maml:para>
<maml:para>The command uses the Invoke-Command cmdlet to run the commands on the Server01 computer. The remote command uses the Get-JobTrigger cmdlet to get the job triggers of the DeployPackage scheduled job. A pipeline operator sends the job triggers to the Where-Object cmdlet, which returns only daily job triggers. A pipeline operator sends the daily job triggers to the Disable-JobTrigger cmdlet, which disables them.
</maml:para>
</dev:remarks>
</command:example>
</command:examples>
<command:relatedLinks><maml:navigationLink><maml:linkText>Online Version:</maml:linkText>
<maml:uri>http://go.microsoft.com/fwlink/?LinkId=821681</maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Add-JobTrigger</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Disable-JobTrigger</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Disable-ScheduledJob</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Enable-JobTrigger</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Enable-ScheduledJob</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Get-JobTrigger</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Get-ScheduledJob</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Get-ScheduledJobOption</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>New-JobTrigger</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>New-ScheduledJobOption</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Register-ScheduledJob</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Remove-JobTrigger</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Set-JobTrigger</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Set-ScheduledJob</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Set-ScheduledJobOption</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Unregister-ScheduledJob</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
</command:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
<command:details><command:name>Disable-ScheduledJob</command:name>
<command:verb>Disable</command:verb>
<command:noun>ScheduledJob</command:noun>
<maml:description><maml:para>Disables a scheduled job.
</maml:para>
</maml:description>
</command:details>
<maml:description><maml:para>The Disable-ScheduledJob cmdlet temporarily disables scheduled jobs. Disabling preserves all job properties and does not disable the job triggers, but it prevents the scheduled jobs from starting automatically when triggered. You can start a disabled scheduled job by using the Start-Job cmdlet or use a disabled scheduled job as a template.
</maml:para>
<maml:para>To disable a scheduled job, the Disable-ScheduledJob cmdlet sets the Enabled property of the scheduled job to False ($false). To re-enable the scheduled job, use the Enable-ScheduledJob cmdlet. Disable-ScheduledJob is one of a collection of job scheduling cmdlets in the PSScheduledJob module that is included in Windows PowerShell.
</maml:para>
<maml:para>For more information about Scheduled Jobs, see the About topics in the PSScheduledJob module. Import the PSScheduledJob module and then type: `Get-Help about_Scheduled*` or see about_Scheduled_Jobs.
</maml:para>
<maml:para>This cmdlet was introduced in Windows PowerShell 3.0.
</maml:para>
</maml:description>
<command:syntax><command:syntaxItem><maml:name>Disable-ScheduledJob</maml:name>
<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="0" aliases="none"><maml:name>Id</maml:name>
<maml:Description><maml:para>Disables the scheduled job with the specified identification number (ID). Enter the ID of a scheduled job.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
<dev:type><maml:name>Int32</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="cf"><maml:name>Confirm</maml:name>
<maml:Description><maml:para>Prompts you for confirmation before running the cmdlet.
</maml:para>
</maml:Description>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>PassThru</maml:name>
<maml:Description><maml:para>Returns an object representing the item with which you are working. By default, this cmdlet does not generate any output.
</maml:para>
</maml:Description>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="wi"><maml:name>WhatIf</maml:name>
<maml:Description><maml:para>Shows what would happen if the cmdlet runs. The cmdlet is not run.
</maml:para>
</maml:Description>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
</command:syntaxItem>
<command:syntaxItem><maml:name>Disable-ScheduledJob</maml:name>
<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByValue)" position="0" aliases="none"><maml:name>InputObject</maml:name>
<maml:Description><maml:para>Specifies the scheduled job to be disabled. Enter a variable that contains ScheduledJobDefinition objects or type a command or expression that gets ScheduledJobDefinition objects, such as a Get-ScheduledJob command. You can also pipe a ScheduledJobDefinition object to Disable-ScheduledJob .
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">ScheduledJobDefinition</command:parameterValue>
<dev:type><maml:name>ScheduledJobDefinition</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="cf"><maml:name>Confirm</maml:name>
<maml:Description><maml:para>Prompts you for confirmation before running the cmdlet.
</maml:para>
</maml:Description>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>PassThru</maml:name>
<maml:Description><maml:para>Returns an object representing the item with which you are working. By default, this cmdlet does not generate any output.
</maml:para>
</maml:Description>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="wi"><maml:name>WhatIf</maml:name>
<maml:Description><maml:para>Shows what would happen if the cmdlet runs. The cmdlet is not run.
</maml:para>
</maml:Description>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
</command:syntaxItem>
<command:syntaxItem><maml:name>Disable-ScheduledJob</maml:name>
<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="0" aliases="none"><maml:name>Name</maml:name>
<maml:Description><maml:para>Disables the scheduled jobs with the specified names. Enter the name of a scheduled job. Wildcards are supported.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
<dev:type><maml:name>String</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="cf"><maml:name>Confirm</maml:name>
<maml:Description><maml:para>Prompts you for confirmation before running the cmdlet.
</maml:para>
</maml:Description>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>PassThru</maml:name>
<maml:Description><maml:para>Returns an object representing the item with which you are working. By default, this cmdlet does not generate any output.
</maml:para>
</maml:Description>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="wi"><maml:name>WhatIf</maml:name>
<maml:Description><maml:para>Shows what would happen if the cmdlet runs. The cmdlet is not run.
</maml:para>
</maml:Description>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
</command:syntaxItem>
</command:syntax>
<command:parameters><command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="cf"><maml:name>Confirm</maml:name>
<maml:Description><maml:para>Prompts you for confirmation before running the cmdlet.
</maml:para>
</maml:Description>
<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="0" aliases="none"><maml:name>Id</maml:name>
<maml:Description><maml:para>Disables the scheduled job with the specified identification number (ID). Enter the ID of a scheduled job.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
<dev:type><maml:name>Int32</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByValue)" position="0" aliases="none"><maml:name>InputObject</maml:name>
<maml:Description><maml:para>Specifies the scheduled job to be disabled. Enter a variable that contains ScheduledJobDefinition objects or type a command or expression that gets ScheduledJobDefinition objects, such as a Get-ScheduledJob command. You can also pipe a ScheduledJobDefinition object to Disable-ScheduledJob .
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">ScheduledJobDefinition</command:parameterValue>
<dev:type><maml:name>ScheduledJobDefinition</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="0" aliases="none"><maml:name>Name</maml:name>
<maml:Description><maml:para>Disables the scheduled jobs with the specified names. Enter the name of a scheduled job. Wildcards are supported.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
<dev:type><maml:name>String</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>PassThru</maml:name>
<maml:Description><maml:para>Returns an object representing the item with which you are working. By default, this cmdlet does not generate any output.
</maml:para>
</maml:Description>
<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="wi"><maml:name>WhatIf</maml:name>
<maml:Description><maml:para>Shows what would happen if the cmdlet runs. The cmdlet is not run.
</maml:para>
</maml:Description>
<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
</command:parameters>
<command:inputTypes><command:inputType><dev:type><maml:name>Microsoft.PowerShell.ScheduledJob.ScheduledJobDefinition</maml:name>
</dev:type>
<maml:description><maml:para>You can pipe a scheduled job to Disable-ScheduledJob .
</maml:para>
</maml:description>
</command:inputType>
</command:inputTypes>
<command:returnValues><command:returnValue><dev:type><maml:name>None or Microsoft.PowerShell.ScheduledJob.ScheduledJobDefinition</maml:name>
</dev:type>
<maml:description><maml:para>If you use the Passthru parameter, Disable-ScheduledJob returns the scheduled job that was disabled. Otherwise, this cmdlet does not generate any output.
</maml:para>
</maml:description>
</command:returnValue>
</command:returnValues>
<maml:alertSet><maml:alert><maml:para> Disable-ScheduledJob * does not generate warnings or errors if you use it to disable a scheduled job that is already disabled.
</maml:para>
</maml:alert>
</maml:alertSet>
<command:examples><command:example><maml:title>Example 1: Disable a scheduled job</maml:title>
<dev:code>PS C:\&gt;Disable-ScheduledJob -ID 2 -Passthru
Id         Name            Triggers        Command                                  Enabled
--         ----            --------        -------                                  -------
2          Inventory       {1, 2}          \\Srv01\Scripts\Get-FullInventory.ps1    False</dev:code>
<dev:remarks><maml:para>This command disables the scheduled job with ID 2 on the local computer. The output shows the effect of the command.
</maml:para>
</dev:remarks>
</command:example>
<command:example><maml:title>Example 2: Disable all scheduled jobs</maml:title>
<dev:code>PS C:\&gt;Get-ScheduledJob | Disable-ScheduledJob -Passthru
Id         Name            Triggers        Command                                  Enabled
--         ----            --------        -------                                  -------
1          ArchiveProje... {}              C:\Scripts\Archive-DxProjects.ps1        False
2          Inventory       {1, 2}          \\Srv01\Scripts\Get-FullInventory.ps1    False
4          Test-HelpFiles  {1}             .\Test-HelpFiles.ps1                     False
5          TestJob         {1, 2}          .\Run-AllTests.ps1                       False</dev:code>
<dev:remarks><maml:para>This command disables all scheduled jobs on the local computer. It uses the Get-ScheduledJob cmdlet to get all scheduled job and the Disable-ScheduledJob cmdlet to disable them.
</maml:para>
<maml:para>You can re-enable scheduled job by using the Enable-ScheduledJob cmdlet and run a disabled scheduled job by using the Start-Job cmdlet. Disable-ScheduledJob does not generate warnings or errors if you disable a scheduled job that is already disabled, so you can disable all scheduled jobs without conditions.
</maml:para>
</dev:remarks>
</command:example>
<command:example><maml:title>Example 3: Disable selected scheduled jobs</maml:title>
<dev:code>PS C:\&gt;Get-ScheduledJob | Where-Object {!$_.Credential} | Disable-ScheduledJob</dev:code>
<dev:remarks><maml:para>This command disables scheduled job do not include a credential. Jobs without credentials run with the permission of the user who created them.
</maml:para>
<maml:para>The command uses the Get-ScheduledJob cmdlet to get all scheduled jobs on the computer. A pipeline operator sends the scheduled jobs to the Where-Object cmdlet, which selects scheduled jobs that do not have credentials. The command uses the not (!) operator and references the Credential property of the scheduled job. Another pipeline operator sends the selected scheduled jobs to the Disable-ScheduledJob cmdlet, which disables them.
</maml:para>
</dev:remarks>
</command:example>
<command:example><maml:title>Example 4: Disable scheduled jobs on a remote computer</maml:title>
<dev:code>PS C:\&gt;Invoke-Command -ComputerName Srv01, Srv10 -ScriptBlock {Disable-ScheduledJob -Name TestJob}</dev:code>
<dev:remarks><maml:para>This command disables the TestJob scheduled job on two remote computers, Srv01 and Srv10.
</maml:para>
<maml:para>The command uses the Invoke-Command cmdlet to run a Disable-ScheduledJob command on the Srv01 and Srv10 computers. The command uses the Name parameter of Disable-ScheduledJob to select the TestJob scheduled job on each computer.
</maml:para>
</dev:remarks>
</command:example>
<command:example><maml:title>Example 5: Disable a scheduled job by its global ID</maml:title>
<dev:code>The first command demonstrates one way of finding the GlobalID of a scheduled job. The command uses the Get-ScheduledJob cmdlet to get the scheduled jobs on the computer. A pipeline operator (|) sends the scheduled jobs to the Format-Table cmdlet, which displays the Name, GlobalID, and Command properties of each job in a table.
PS C:\&gt;Get-ScheduledJob | Format-Table -Property Name, GlobalID, Command -Autosize
Name             GlobalId                             Command
----             --------                             -------
ArchiveProjects1 a26a0b3d-b4e6-44d3-8b95-8706ef621f7c C:\Scripts\Archive-DxProjects.ps1
Inventory        3ac37e5d-84c0-4a8f-9661-7e88ebb8f914 \\Srv01\Scripts\Get-FullInventory.ps1
Backup-Scripts   4d0cc6be-c082-48d1-baec-1bd8278f3c81  Copy-Item C:\CurrentScripts\*.ps1 -Destination C:\BackupScripts
Test-HelpFiles   d77020ca-f20d-42be-86c8-fc64df97db90 .\Test-HelpFiles.ps1
Test-HelpFiles   2f1606d2-c6cf-4bef-8b1c-ae36a9cc9934 .\Test-DomainHelpFiles.ps1

The second command uses the  Get-ScheduledJob cmdlet to get the scheduled jobs on the computer. A pipeline operator (|) sends the scheduled jobs to the Where-Object cmdlet, which selects the scheduled job with the specified global ID. Another pipeline operator sends the job to the **Disable-ScheduledJob** cmdlet, which disables it.
PS C:\&gt;Get-ScheduledJob | Where-Object {$_.GlobalID = d77020ca-f20d-42be-86c8-fc64df97db90} | Disable-ScheduledJob</dev:code>
<dev:remarks><maml:para>This examples shows how to disable a scheduled job by using its global identifier. The value of the GlobalID property of a scheduled job is a unique identifier (GUID). Use the GlobalID value when precision is required, such as when you are disabling scheduled jobs on multiple computers.
</maml:para>
</dev:remarks>
</command:example>
</command:examples>
<command:relatedLinks><maml:navigationLink><maml:linkText>Online Version:</maml:linkText>
<maml:uri>http://go.microsoft.com/fwlink/?LinkId=821682</maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Add-JobTrigger</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Disable-JobTrigger</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Disable-ScheduledJob</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Enable-JobTrigger</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Enable-ScheduledJob</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Get-JobTrigger</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Get-ScheduledJob</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Get-ScheduledJobOption</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>New-JobTrigger</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>New-ScheduledJobOption</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Register-ScheduledJob</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Remove-JobTrigger</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Set-JobTrigger</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Set-ScheduledJob</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Set-ScheduledJobOption</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Unregister-ScheduledJob</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
</command:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
<command:details><command:name>Enable-JobTrigger</command:name>
<command:verb>Enable</command:verb>
<command:noun>JobTrigger</command:noun>
<maml:description><maml:para>Enables the job triggers of scheduled jobs.
</maml:para>
</maml:description>
</command:details>
<maml:description><maml:para>The Enable-JobTrigger cmdlet re-enables job triggers of scheduled jobs, such as those that were disabled by using the Disable-JobTrigger cmdlet. Enabled and re-enabled job triggers can start scheduled jobs immediately; there is no need to restart Windows or Windows PowerShell.
</maml:para>
<maml:para>To use this cmdlet, use the  Get-JobTrigger cmdlet to get the job triggers. Then pipe the job triggers to Enable-JobTrigger or use its InputObject parameter.
</maml:para>
<maml:para>To enable a job trigger, the Enable-JobTrigger cmdlet sets the Enabled property of the job trigger to $True. Enable-ScheduledJob is one of a collection of job scheduling cmdlets in the PSScheduledJob module that is included in Windows PowerShell.
</maml:para>
<maml:para>For more information about Scheduled Jobs, see the About topics in the PSScheduledJob module. Import the PSScheduledJob module and then type: `Get-Help about_Scheduled*` or see about_Scheduled_Jobs.
</maml:para>
<maml:para>This cmdlet was introduced in Windows PowerShell 3.0.
</maml:para>
</maml:description>
<command:syntax><command:syntaxItem><maml:name>Enable-JobTrigger</maml:name>
<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByValue)" position="0" aliases="none"><maml:name>InputObject</maml:name>
<maml:Description><maml:para>Specifies the job trigger to enable. Enter a variable that contains ScheduledJobTrigger objects or type a command or expression that gets ScheduledJobTriger objects, such as a Get-JobTrigger command. You can also pipe a ScheduledJobTrigger object to Enable-JobTrigger .
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">ScheduledJobTrigger[]</command:parameterValue>
<dev:type><maml:name>ScheduledJobTrigger[]</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="cf"><maml:name>Confirm</maml:name>
<maml:Description><maml:para>Prompts you for confirmation before running the cmdlet.
</maml:para>
</maml:Description>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>PassThru</maml:name>
<maml:Description><maml:para>Returns an object representing the item with which you are working. By default, this cmdlet does not generate any output.
</maml:para>
</maml:Description>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="wi"><maml:name>WhatIf</maml:name>
<maml:Description><maml:para>Shows what would happen if the cmdlet runs. The cmdlet is not run.
</maml:para>
</maml:Description>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
</command:syntaxItem>
</command:syntax>
<command:parameters><command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="cf"><maml:name>Confirm</maml:name>
<maml:Description><maml:para>Prompts you for confirmation before running the cmdlet.
</maml:para>
</maml:Description>
<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByValue)" position="0" aliases="none"><maml:name>InputObject</maml:name>
<maml:Description><maml:para>Specifies the job trigger to enable. Enter a variable that contains ScheduledJobTrigger objects or type a command or expression that gets ScheduledJobTriger objects, such as a Get-JobTrigger command. You can also pipe a ScheduledJobTrigger object to Enable-JobTrigger .
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">ScheduledJobTrigger[]</command:parameterValue>
<dev:type><maml:name>ScheduledJobTrigger[]</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>PassThru</maml:name>
<maml:Description><maml:para>Returns an object representing the item with which you are working. By default, this cmdlet does not generate any output.
</maml:para>
</maml:Description>
<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="wi"><maml:name>WhatIf</maml:name>
<maml:Description><maml:para>Shows what would happen if the cmdlet runs. The cmdlet is not run.
</maml:para>
</maml:Description>
<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
</command:parameters>
<command:inputTypes><command:inputType><dev:type><maml:name>Microsoft.PowerShell.ScheduledJob.ScheduledJobTrigger</maml:name>
</dev:type>
<maml:description><maml:para>You can pipe job triggers to Enable-JobTrigger .
</maml:para>
</maml:description>
</command:inputType>
</command:inputTypes>
<command:returnValues><command:returnValue><dev:type><maml:name>None</maml:name>
</dev:type>
<maml:description><maml:para>This cmdlet does not generate any output.
</maml:para>
</maml:description>
</command:returnValue>
</command:returnValues>
<maml:alertSet><maml:alert><maml:para> Enable-JobTrigger * does not generate errors or warnings if you enable a job trigger that is already enabled.
</maml:para>
</maml:alert>
</maml:alertSet>
<command:examples><command:example><maml:title>Example 1: Enable a job trigger</maml:title>
<dev:code>PS C:\&gt;Get-JobTrigger -Name Backup-Archives -TriggerID 1 | Enable-JobTrigger</dev:code>
<dev:remarks><maml:para>This command enables the first trigger (ID=1) of the Backup-Archives scheduled job on the local computer.
</maml:para>
<maml:para>The command uses the Get-JobTrigger cmdlet to get the job trigger. A pipeline operator sends the job trigger to the Enable-JobTrigger cmdlet, which enables it.
</maml:para>
</dev:remarks>
</command:example>
<command:example><maml:title>Example 2: Enable all job triggers</maml:title>
<dev:code>PS C:\&gt;Get-ScheduledJob | Get-JobTrigger | Enable-JobTrigger</dev:code>
<dev:remarks><maml:para>The command uses the Get-ScheduledJob cmdlet to get  the scheduled jobs on the local computer. A pipeline operator (|) sends the scheduled jobs to the Get-JobTrigger cmdlet, which gets all job triggers of the scheduled jobs. Another pipeline operator sends the job triggers to the Enable-JobTrigger cmdlet, which enables them.
</maml:para>
</dev:remarks>
</command:example>
<command:example><maml:title>Example 3: Enable the job trigger of a scheduled job on a remote computer</maml:title>
<dev:code>PS C:\&gt;Invoke-Command -ComputerName Server01 {Get-JobTrigger -Name DeployPackage | Where-Object {$_.Frequency -eq "AtLogon"} | Enable-JobTrigger}</dev:code>
<dev:remarks><maml:para>This command re-enables the AtLogon job triggers on the DeployPackage scheduled job on the Server01 remote computer.
</maml:para>
<maml:para>The command uses the Invoke-Command cmdlet to run the commands on the Server01 computer. The remote command uses the Get-JobTrigger cmdlet to get the job triggers of the DeployPackage scheduled job. A pipeline operator sends the job triggers to the Where-Object cmdlet which returns only AtLogon job triggers. A pipeline operator sends the AtLogon job triggers to the Enable-JobTrigger cmdlet, which enables them.
</maml:para>
</dev:remarks>
</command:example>
<command:example><maml:title>Example 4: Display disabled job triggers</maml:title>
<dev:code>PS C:\&gt;Get-ScheduledJob | Get-JobTrigger | where {!$_.Enabled} | Format-Table Id, Frequency, At, DaysOfWeek, Enabled, @{Label="JobName";Expression={$_.JobDefinition.Name}}
Id Frequency At                     DaysOfWeek Enabled JobName
-- --------- --                     ---------- ------- -------
 1    Weekly 9/28/2011 3:00:00 AM   {Monday}   False   Backup-Archive
 2    Daily  9/29/2011 1:00:00 AM              False   Backup-Archive
 1    Weekly 10/20/2011 11:00:00 PM {Friday}   False   Inventory
 1    Weekly 11/2/2011 2:00:00 PM   {Monday}   False   Inventory</dev:code>
<dev:remarks><maml:para>This command displays all disabled job triggers of all scheduled jobs in a table. You can use a command like this one to discover job triggers that might need to be enabled.
</maml:para>
<maml:para>The command uses the Get-ScheduledJob cmdlet to get the scheduled jobs on the local computer. A pipeline operator (|) sends the scheduled jobs to the Get-JobTrigger cmdlet, which gets all job triggers of the scheduled jobs. Another pipeline operator sends the job triggers to the Where-Object cmdlet, which returns only job triggers that are disabled, that is, where the value of the Enabled property of the job trigger is not (!) true.
</maml:para>
<maml:para>Another pipeline operator sends the disabled job triggers to the Format-Table cmdlet, which displays the selected properties of the job triggers in a table. The properties include a new JobName property that displays the name of the scheduled job in the JobDefinition property of the job trigger.
</maml:para>
</dev:remarks>
</command:example>
</command:examples>
<command:relatedLinks><maml:navigationLink><maml:linkText>Online Version:</maml:linkText>
<maml:uri>http://go.microsoft.com/fwlink/?LinkId=821683</maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Add-JobTrigger</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Disable-JobTrigger</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Disable-ScheduledJob</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Enable-JobTrigger</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Enable-ScheduledJob</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Get-JobTrigger</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Get-ScheduledJob</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Get-ScheduledJobOption</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>New-JobTrigger</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>New-ScheduledJobOption</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Register-ScheduledJob</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Remove-JobTrigger</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Set-JobTrigger</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Set-ScheduledJob</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Set-ScheduledJobOption</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Unregister-ScheduledJob</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
</command:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
<command:details><command:name>Enable-ScheduledJob</command:name>
<command:verb>Enable</command:verb>
<command:noun>ScheduledJob</command:noun>
<maml:description><maml:para>Enables a scheduled job.
</maml:para>
</maml:description>
</command:details>
<maml:description><maml:para>The Enable-ScheduledJob cmdlet re-enables scheduled jobs that are disabled, such as those that are disabled by using the Disable-ScheduledJob cmdlet. Enabled jobs run automatically when triggered.
</maml:para>
<maml:para>To enable a scheduled job, the Enable-ScheduledJob cmdlet sets the Enabled property of the scheduled job to $True. Enabled-ScheduledJob is one of a collection of job scheduling cmdlets in the PSScheduledJob module that is included in Windows PowerShell.
</maml:para>
<maml:para>For more information about Scheduled Jobs, see the About topics in the PSScheduledJob module. Import the PSScheduledJob module and then type: `Get-Help about_Scheduled*` or see about_Scheduled_Jobs.
</maml:para>
<maml:para>This cmdlet was introduced in Windows PowerShell 3.0.
</maml:para>
</maml:description>
<command:syntax><command:syntaxItem><maml:name>Enable-ScheduledJob</maml:name>
<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="0" aliases="none"><maml:name>Id</maml:name>
<maml:Description><maml:para>Enables the scheduled job with the specified identification number (ID). Enter the ID of a scheduled job.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
<dev:type><maml:name>Int32</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="cf"><maml:name>Confirm</maml:name>
<maml:Description><maml:para>Prompts you for confirmation before running the cmdlet.
</maml:para>
</maml:Description>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>PassThru</maml:name>
<maml:Description><maml:para>Returns an object representing the item with which you are working. By default, this cmdlet does not generate any output.
</maml:para>
</maml:Description>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="wi"><maml:name>WhatIf</maml:name>
<maml:Description><maml:para>Shows what would happen if the cmdlet runs. The cmdlet is not run.
</maml:para>
</maml:Description>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
</command:syntaxItem>
<command:syntaxItem><maml:name>Enable-ScheduledJob</maml:name>
<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByValue)" position="0" aliases="none"><maml:name>InputObject</maml:name>
<maml:Description><maml:para>Specifies the scheduled job to enable. Enter a variable that contains ScheduledJobDefinition objects or type a command or expression that gets ScheduledJobDefinition objects, such as a Get-ScheduledJob command. You can also pipe a ScheduledJobDefinition object to Enable-ScheduledJob .
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">ScheduledJobDefinition</command:parameterValue>
<dev:type><maml:name>ScheduledJobDefinition</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="cf"><maml:name>Confirm</maml:name>
<maml:Description><maml:para>Prompts you for confirmation before running the cmdlet.
</maml:para>
</maml:Description>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>PassThru</maml:name>
<maml:Description><maml:para>Returns an object representing the item with which you are working. By default, this cmdlet does not generate any output.
</maml:para>
</maml:Description>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="wi"><maml:name>WhatIf</maml:name>
<maml:Description><maml:para>Shows what would happen if the cmdlet runs. The cmdlet is not run.
</maml:para>
</maml:Description>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
</command:syntaxItem>
<command:syntaxItem><maml:name>Enable-ScheduledJob</maml:name>
<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="0" aliases="none"><maml:name>Name</maml:name>
<maml:Description><maml:para>Enables the scheduled jobs with the specified names. Enter the name of a scheduled job. Wildcards are supported.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
<dev:type><maml:name>String</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="cf"><maml:name>Confirm</maml:name>
<maml:Description><maml:para>Prompts you for confirmation before running the cmdlet.
</maml:para>
</maml:Description>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>PassThru</maml:name>
<maml:Description><maml:para>Returns an object representing the item with which you are working. By default, this cmdlet does not generate any output.
</maml:para>
</maml:Description>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="wi"><maml:name>WhatIf</maml:name>
<maml:Description><maml:para>Shows what would happen if the cmdlet runs. The cmdlet is not run.
</maml:para>
</maml:Description>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
</command:syntaxItem>
</command:syntax>
<command:parameters><command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="cf"><maml:name>Confirm</maml:name>
<maml:Description><maml:para>Prompts you for confirmation before running the cmdlet.
</maml:para>
</maml:Description>
<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="0" aliases="none"><maml:name>Id</maml:name>
<maml:Description><maml:para>Enables the scheduled job with the specified identification number (ID). Enter the ID of a scheduled job.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
<dev:type><maml:name>Int32</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByValue)" position="0" aliases="none"><maml:name>InputObject</maml:name>
<maml:Description><maml:para>Specifies the scheduled job to enable. Enter a variable that contains ScheduledJobDefinition objects or type a command or expression that gets ScheduledJobDefinition objects, such as a Get-ScheduledJob command. You can also pipe a ScheduledJobDefinition object to Enable-ScheduledJob .
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">ScheduledJobDefinition</command:parameterValue>
<dev:type><maml:name>ScheduledJobDefinition</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="0" aliases="none"><maml:name>Name</maml:name>
<maml:Description><maml:para>Enables the scheduled jobs with the specified names. Enter the name of a scheduled job. Wildcards are supported.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
<dev:type><maml:name>String</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>PassThru</maml:name>
<maml:Description><maml:para>Returns an object representing the item with which you are working. By default, this cmdlet does not generate any output.
</maml:para>
</maml:Description>
<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="wi"><maml:name>WhatIf</maml:name>
<maml:Description><maml:para>Shows what would happen if the cmdlet runs. The cmdlet is not run.
</maml:para>
</maml:Description>
<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
</command:parameters>
<command:inputTypes><command:inputType><dev:type><maml:name>Microsoft.PowerShell.ScheduledJob.ScheduledJobDefinition</maml:name>
</dev:type>
<maml:description><maml:para>You can pipe a scheduled job to Enable-ScheduledJob .
</maml:para>
</maml:description>
</command:inputType>
</command:inputTypes>
<command:returnValues><command:returnValue><dev:type><maml:name>None or Microsoft.PowerShell.ScheduledJob.ScheduledJobDefinition</maml:name>
</dev:type>
<maml:description><maml:para>If you use the Passthru parameter, Enable-ScheduledJob returns the scheduled job that was enabled. Otherwise, this cmdlet does not generate any output.
</maml:para>
</maml:description>
</command:returnValue>
</command:returnValues>
<maml:alertSet><maml:alert><maml:para> Enable-ScheduledJob * does not generate warnings or errors if you use it to enable a scheduled job that is already enabled.
</maml:para>
</maml:alert>
</maml:alertSet>
<command:examples><command:example><maml:title>Example 1: Enable a scheduled job</maml:title>
<dev:code>PS C:\&gt;Enable-ScheduledJob -ID 2 -Passthru
Id         Name            Triggers        Command                                  Enabled
--         ----            --------        -------                                  -------
2          Inventory       {1, 2}          \\Srv01\Scripts\Get-FullInventory.ps1    True</dev:code>
<dev:remarks><maml:para>This command enables the scheduled job with ID 2 on the local computer. The output shows the effect of the command.
</maml:para>
</dev:remarks>
</command:example>
<command:example><maml:title>Example 2: Enable all scheduled jobs</maml:title>
<dev:code>PS C:\&gt;Get-ScheduledJob | Enable-ScheduledJob -Passthru
Id         Name            Triggers        Command                                  Enabled
--         ----            --------        -------                                  -------
1          ArchiveProje... {}              C:\Scripts\Archive-DxProjects.ps1        True
2          Inventory       {1, 2}          \\Srv01\Scripts\Get-FullInventory.ps1    True
4          Test-HelpFiles  {1}             .\Test-HelpFiles.ps1                     True
5          TestJob         {1, 2}          .\Run-AllTests.ps1                       True</dev:code>
<dev:remarks><maml:para>This command enables all scheduled jobs on the local computer. It uses the Get-ScheduledJob cmdlet to get all scheduled job and the Enable-ScheduledJob cmdlet to enable them. Enable-ScheduledJob does not generate warnings or errors if you enable a scheduled job that is already enabled, so you can enable all scheduled jobs without conditions.
</maml:para>
</dev:remarks>
</command:example>
<command:example><maml:title>Example 3: Enable selected scheduled jobs</maml:title>
<dev:code>PS C:\&gt;Get-ScheduledJob | Get-ScheduledJobOption | Where-Object {$_.RunWithoutNetwork} | ForEach-Object {Enable-ScheduledJob -InputObject $_.JobDefinition}</dev:code>
<dev:remarks><maml:para>This command enables scheduled jobs that do not require a network connection.
</maml:para>
<maml:para>The command uses the Get-ScheduledJob cmdlet to get all scheduled jobs on the computer. A pipeline operator sends the scheduled jobs to the Get-ScheduledJobOption cmdlet, which gets the job options of each scheduled job. Each job options object has a JobDefinition property that contains the associated scheduled job. The JobDefinition property is used to complete the command.
</maml:para>
<maml:para>The command uses a pipeline operator (|) to send the job options to the Where-Object cmdlet, which selects scheduled job option objects in which the RunWithoutNetwork property has a value of True ($true). Another pipeline operator sends the selected scheduled job options objects to the ForEach-Object cmdlet which runs an Enable-ScheduledJob command on the scheduled job in the value of the JobDefinition property of each job options object.
</maml:para>
</dev:remarks>
</command:example>
<command:example><maml:title>Example 4: Enable scheduled jobs on a remote computer</maml:title>
<dev:code>PS C:\&gt;Invoke-Command -ComputerName "Srv01,Srv10" -ScriptBlock {Enable-ScheduledJob -Name "Inventory"}</dev:code>
<dev:remarks><maml:para>This command enables scheduled jobs that have "test" in their names on two remote computers, Srv01 and Srv10.
</maml:para>
<maml:para>The command uses the Invoke-Command cmdlet to run an Enable-ScheduledJob command on the Srv01 and Srv10 computers. The command uses the Name parameter of Enable-ScheduledJob to enable the Inventory scheduled job on each computer.
</maml:para>
</dev:remarks>
</command:example>
</command:examples>
<command:relatedLinks><maml:navigationLink><maml:linkText>Online Version:</maml:linkText>
<maml:uri>http://go.microsoft.com/fwlink/?LinkId=821684</maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Add-JobTrigger</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Disable-JobTrigger</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Disable-ScheduledJob</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Enable-JobTrigger</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Enable-ScheduledJob</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Get-JobTrigger</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Get-ScheduledJob</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Get-ScheduledJobOption</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>New-JobTrigger</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>New-ScheduledJobOption</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Register-ScheduledJob</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Remove-JobTrigger</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Set-JobTrigger</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Set-ScheduledJob</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Set-ScheduledJobOption</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Unregister-ScheduledJob</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
</command:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
<command:details><command:name>Get-JobTrigger</command:name>
<command:verb>Get</command:verb>
<command:noun>JobTrigger</command:noun>
<maml:description><maml:para>Gets the job triggers of scheduled jobs.
</maml:para>
</maml:description>
</command:details>
<maml:description><maml:para>The Get-JobTrigger cmdlet gets the job triggers of scheduled jobs. You can use this command to examine the job triggers or to pipe the job triggers to other cmdlets.
</maml:para>
<maml:para>A job trigger defines a recurring schedule or conditions for starting a scheduled job. Job triggers are not saved to disk independently; they are part of a scheduled job. To get a job trigger, specify the scheduled job that the trigger starts.
</maml:para>
<maml:para>Use the parameters of the Get-JobTrigger cmdlet to identify the scheduled jobs. You can identify the scheduled jobs by their names or identification numbers, or by entering or piping ScheduledJob objects, such as those that are returned by the Get-ScheduledJob cmdlet, to Get-JobTrigger . Get-JobTrigger is one of a collection of job scheduling cmdlets in the PSScheduledJob module that is included in Windows PowerShell.
</maml:para>
<maml:para>For more information about Scheduled Jobs, see the About topics in the PSScheduledJob module. Import the PSScheduledJob module and then type: `Get-Help about_Scheduled*` or see about_Scheduled_Jobs.
</maml:para>
<maml:para>This cmdlet was introduced in Windows PowerShell 3.0.
</maml:para>
</maml:description>
<command:syntax><command:syntaxItem><maml:name>Get-JobTrigger</maml:name>
<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="0" aliases="none"><maml:name>Id</maml:name>
<maml:Description><maml:para>Specifies the identification number of a scheduled job. Get-JobTrigger gets the job trigger of the specified scheduled job.
</maml:para>
<maml:para>To get the identification number of scheduled jobs on the local computer or a remote computer, use the Get-ScheduledJob cmdlet.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
<dev:type><maml:name>Int32</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="1" aliases="none"><maml:name>TriggerId</maml:name>
<maml:Description><maml:para>Gets the specified job triggers. Enter the trigger IDs of one or more job triggers of a scheduled job. Use this parameter when the scheduled job that is specified by the Name , ID , or InputObject parameters has multiple job triggers.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">Int32[]</command:parameterValue>
<dev:type><maml:name>Int32[]</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
</command:syntaxItem>
<command:syntaxItem><maml:name>Get-JobTrigger</maml:name>
<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByValue)" position="0" aliases="none"><maml:name>InputObject</maml:name>
<maml:Description><maml:para>Specifies a scheduled job. Enter a variable that contains ScheduledJob objects or type a command or expression that gets ScheduledJob objects, such as a Get-ScheduledJob command. You can also pipe ScheduledJob objects to Get-JobTrigger .
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">ScheduledJobDefinition</command:parameterValue>
<dev:type><maml:name>ScheduledJobDefinition</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="1" aliases="none"><maml:name>TriggerId</maml:name>
<maml:Description><maml:para>Gets the specified job triggers. Enter the trigger IDs of one or more job triggers of a scheduled job. Use this parameter when the scheduled job that is specified by the Name , ID , or InputObject parameters has multiple job triggers.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">Int32[]</command:parameterValue>
<dev:type><maml:name>Int32[]</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
</command:syntaxItem>
<command:syntaxItem><maml:name>Get-JobTrigger</maml:name>
<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="0" aliases="none"><maml:name>Name</maml:name>
<maml:Description><maml:para>Specifies the name of a scheduled job. Get-JobTrigger gets the job trigger of the specified scheduled job. Wildcards are supported.
</maml:para>
<maml:para>To get the names of scheduled jobs on the local computer or a remote computer, use the Get-ScheduledJob cmdlet.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
<dev:type><maml:name>String</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="1" aliases="none"><maml:name>TriggerId</maml:name>
<maml:Description><maml:para>Gets the specified job triggers. Enter the trigger IDs of one or more job triggers of a scheduled job. Use this parameter when the scheduled job that is specified by the Name , ID , or InputObject parameters has multiple job triggers.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">Int32[]</command:parameterValue>
<dev:type><maml:name>Int32[]</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
</command:syntaxItem>
</command:syntax>
<command:parameters><command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="0" aliases="none"><maml:name>Id</maml:name>
<maml:Description><maml:para>Specifies the identification number of a scheduled job. Get-JobTrigger gets the job trigger of the specified scheduled job.
</maml:para>
<maml:para>To get the identification number of scheduled jobs on the local computer or a remote computer, use the Get-ScheduledJob cmdlet.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
<dev:type><maml:name>Int32</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByValue)" position="0" aliases="none"><maml:name>InputObject</maml:name>
<maml:Description><maml:para>Specifies a scheduled job. Enter a variable that contains ScheduledJob objects or type a command or expression that gets ScheduledJob objects, such as a Get-ScheduledJob command. You can also pipe ScheduledJob objects to Get-JobTrigger .
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">ScheduledJobDefinition</command:parameterValue>
<dev:type><maml:name>ScheduledJobDefinition</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="0" aliases="none"><maml:name>Name</maml:name>
<maml:Description><maml:para>Specifies the name of a scheduled job. Get-JobTrigger gets the job trigger of the specified scheduled job. Wildcards are supported.
</maml:para>
<maml:para>To get the names of scheduled jobs on the local computer or a remote computer, use the Get-ScheduledJob cmdlet.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
<dev:type><maml:name>String</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="1" aliases="none"><maml:name>TriggerId</maml:name>
<maml:Description><maml:para>Gets the specified job triggers. Enter the trigger IDs of one or more job triggers of a scheduled job. Use this parameter when the scheduled job that is specified by the Name , ID , or InputObject parameters has multiple job triggers.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">Int32[]</command:parameterValue>
<dev:type><maml:name>Int32[]</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
</command:parameters>
<command:inputTypes><command:inputType><dev:type><maml:name>Microsoft.PowerShell.ScheduledJob.ScheduledJobDefinition</maml:name>
</dev:type>
<maml:description><maml:para>You can pipe a scheduled job from Get-ScheduledJob to Get-JobTrigger .
</maml:para>
</maml:description>
</command:inputType>
</command:inputTypes>
<command:returnValues><command:returnValue><dev:type><maml:name>Microsoft.PowerShell.ScheduledJob.ScheduledJobTrigger</maml:name>
</dev:type>
<maml:description><maml:para>
</maml:para>
</maml:description>
</command:returnValue>
</command:returnValues>
<maml:alertSet><maml:alert><maml:para>
</maml:para>
</maml:alert>
</maml:alertSet>
<command:examples><command:example><maml:title>Example 1: Get a job trigger by scheduled job name</maml:title>
<dev:code>PS C:\&gt;Get-JobTrigger -Name "BackupJob"</dev:code>
<dev:remarks><maml:para>The command uses the Name parameter of Get-JobTrigger to get the job triggers of the BackupJob scheduled job.
</maml:para>
</dev:remarks>
</command:example>
<command:example><maml:title>Example 2: Get a job trigger by ID</maml:title>
<dev:code>The first command uses the Get-ScheduledJob cmdlet to display the scheduled jobs on the local computer. The display includes the IDs of the scheduled jobs.
PS C:\&gt;Get-ScheduledJob
Id         Name            Triggers        Command                                  Enabled
--         ----            --------        -------                                  -------
1          ArchiveProjects {1}             \\Server\Share\Archive-Projects.ps1      True
2          Backup          {1,2}           \\Server\Share\Run-Backup.ps1            True
3          Test-HelpFiles  {1}             \\Server\Share\Test-HelpFiles.ps1        True
4          TestJob         {}              \\Server\Share\Run-AllTests.ps1          True

The second command uses the **Get-JobTrigger** cmdlet to get the job trigger for the Test-HelpFiles job (ID = 3)
PS C:\&gt;Get-JobTrigger -ID 3</dev:code>
<dev:remarks><maml:para>The example uses the ID parameter of Get-JobTrigger to get the job triggers of a scheduled job.
</maml:para>
</dev:remarks>
</command:example>
<command:example><maml:title>Example 3: Get job triggers by piping a job</maml:title>
<dev:code>PS C:\&gt;Get-ScheduledJob -Name *Backup*, *Archive* | Get-JobTrigger</dev:code>
<dev:remarks><maml:para>This command gets the job triggers of all jobs that have Backup or Archive in their names.
</maml:para>
</dev:remarks>
</command:example>
<command:example><maml:title>Example 4: Get the job trigger of a job on a remote computer</maml:title>
<dev:code>PS C:\&gt;Invoke-Command -ComputerName Server01 { Get-ScheduledJob Backup | Get-JobTrigger -TriggerID 2 }</dev:code>
<dev:remarks><maml:para>This command gets one of the two job triggers of a scheduled job on a remote computer.
</maml:para>
<maml:para>The command uses the Invoke-Command cmdlet to run a command on the Server01 computer. It uses the Get-ScheduledJob cmdlet to get the Backup scheduled job, which it pipes to the Get-JobTrigger cmdlet. It uses the TriggerID parameter to get only the second trigger.
</maml:para>
</dev:remarks>
</command:example>
<command:example><maml:title>Example 5: Get all job triggers</maml:title>
<dev:code>PS C:\&gt;Get-ScheduledJob | Get-JobTrigger | Format-Table -Property ID, Frequency, At, DaysOfWeek, Enabled, @{Label="ScheduledJob";Expression={$_.JobDefinition.Name}} -AutoSize
Id Frequency At                    DaysOfWeek Enabled ScheduledJob
-- --------- --                    ---------- ------- ------------
1    Weekly  9/28/2011 3:00:00 AM  {Monday}   True    Backup 
1    Daily   9/27/2011 11:00:00 PM            True    Test-HelpFiles</dev:code>
<dev:remarks><maml:para>This command gets all job triggers of all scheduled jobs on the local computer.
</maml:para>
<maml:para>The command uses the Get-ScheduledJob to get the scheduled jobs on the local computer and pipes them to Get-JobTrigger , which gets the job trigger of each scheduled job (if any).
</maml:para>
<maml:para>To add the name of the scheduled job to the job trigger display, the command uses the calculated property feature of the Format-Table cmdlet. In addition to the job trigger properties that are displayed by default, the command creates a new ScheduledJob property that displays the name of the scheduled job.
</maml:para>
</dev:remarks>
</command:example>
<command:example><maml:title>Example 6: Get the job trigger property of a scheduled job</maml:title>
<dev:code>The command uses the Get-ScheduledJob cmdlet to get the Test-HelpFiles scheduled job. Then it uses the dot method (.) to get the JobTriggers property of the Test-HelpFiles scheduled job.
PS C:\&gt;(Get-ScheduledJob Test-HelpFiles).JobTriggers

The second command uses the Get-ScheduledJob cmdlet to get all scheduled jobs on the local computer. It uses the ForEach-Object cmdlet to get the value of the JobTrigger property of each scheduled job.
PS C:\&gt;Get-ScheduledJob | foreach {$_.JobTriggers}</dev:code>
<dev:remarks><maml:para>The job triggers of a scheduled job are stored in the JobTriggers property of the job. This example shows alternatives to using the Get-JobTrigger cmdlet to get job triggers. The results are identical to using the Get-JobTrigger cmdlet and the techniques can be used interchangeably.
</maml:para>
</dev:remarks>
</command:example>
<command:example><maml:title>Example 7: Compare job triggers</maml:title>
<dev:code>The first command gets the job trigger of the ArchiveProjects scheduled job. The command pipes the job trigger to the Tee-Object cmdlet, which saves the job trigger in the $T1 variable and displays it at the command line.
PS C:\&gt;Get-ScheduledJob -Name ArchiveProjects | Get-JobTrigger | Tee-Object -Variable T1
Id         Frequency       Time                   DaysOfWeek              Enabled
--         ---------       ----                   ----------              -------
0          Daily           9/26/2011 3:00:00 AM                           True

The second command gets the job trigger of the Test-HelpFiles scheduled job. The command pipes the job trigger to the Tee-Object cmdlet, which saves the job trigger in the $T2 variable and displays it at the command line.
PS C:\&gt;Get-ScheduledJob -Name "Test-HelpFiles" | Get-JobTrigger | Tee-Object -Variable T2
Id         Frequency       Time                   DaysOfWeek              Enabled
--         ---------       ----                   ----------              -------
0          Daily           9/26/2011 3:00:00 AM                           True

The third command compares the job triggers in the $t1 and $t2 variables. It uses the Get-Member cmdlet to get the properties of the job trigger in the $t1 variable. It pipes the properties to the ForEach-Object cmdlet, which compares each property to the properties of the job trigger in the $t2 variable by name. The command then pipes the differing properties to the Format-List cmdlet, which displays them in a list.The output indicates that, although the job triggers appear to be the same, the HelpFiles job trigger includes a random delay of three (3) minutes.
PS C:\&gt;$T1 | Get-Member -Type Property | ForEach-Object { Compare-Object $T1 $T2 -Property $_.Name}
RandomDelay                                                 SideIndicator
-----------                                                 -------------
00:00:00                                                    =&gt;
00:03:00                                                    &lt;=</dev:code>
<dev:remarks><maml:para>This example shows how to compare the job triggers of two scheduled jobs.
</maml:para>
</dev:remarks>
</command:example>
</command:examples>
<command:relatedLinks><maml:navigationLink><maml:linkText>Online Version:</maml:linkText>
<maml:uri>http://go.microsoft.com/fwlink/?LinkId=821685</maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Add-JobTrigger</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Disable-JobTrigger</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Disable-ScheduledJob</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Enable-JobTrigger</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Enable-ScheduledJob</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Get-JobTrigger</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Get-ScheduledJob</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Get-ScheduledJobOption</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>New-JobTrigger</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>New-ScheduledJobOption</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Register-ScheduledJob</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Remove-JobTrigger</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Set-JobTrigger</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Set-ScheduledJob</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Set-ScheduledJobOption</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Unregister-ScheduledJob</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
</command:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
<command:details><command:name>Get-ScheduledJob</command:name>
<command:verb>Get</command:verb>
<command:noun>ScheduledJob</command:noun>
<maml:description><maml:para>Gets scheduled jobs on the local computer.
</maml:para>
</maml:description>
</command:details>
<maml:description><maml:para>The Get-ScheduledJob cmdlet gets scheduled jobs on the local computer. Get-ScheduledJob gets only scheduled jobs that are created by the current user using the Register-ScheduledJob cmdlet.
</maml:para>
<maml:para>Although jobs that are created by using the Register-ScheduledJob cmdlet appear in Task Scheduler, Get-ScheduledJob gets only scheduled jobs. It does not get scheduled tasks created in Task Scheduler.
</maml:para>
<maml:para>Without parameters, Get-ScheduledJob gets all scheduled jobs on the computer. You can use the parameters of Get-ScheduledJob to get scheduled jobs by ID or name and examine them or pipe them to other cmdlets. Get-ScheduledJob is one of a collection of job scheduling cmdlets in the PSScheduledJob module that is included in Windows PowerShell.
</maml:para>
<maml:para>For more information about Scheduled Jobs, see the About topics in the PSScheduledJob module. Import the PSScheduledJob module and then type: `Get-Help about_Scheduled*` or see about_Scheduled_Jobs.
</maml:para>
<maml:para>This cmdlet was introduced in Windows PowerShell 3.0.
</maml:para>
</maml:description>
<command:syntax><command:syntaxItem><maml:name>Get-ScheduledJob</maml:name>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="0" aliases="none"><maml:name>Id</maml:name>
<maml:Description><maml:para>Gets only the scheduled jobs with the specified identification number (ID). Enter one or more IDs of scheduled jobs on the computer. By default, Get-ScheduledJob gets all scheduled jobs on the computer.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">Int32[]</command:parameterValue>
<dev:type><maml:name>Int32[]</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
</command:syntaxItem>
<command:syntaxItem><maml:name>Get-ScheduledJob</maml:name>
<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="0" aliases="none"><maml:name>Name</maml:name>
<maml:Description><maml:para>Gets only the scheduled jobs with the specified names. Enter one or more names of scheduled jobs on the computer. Wildcards are supported. By default, Get-ScheduledJob gets all scheduled jobs on the computer.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
<dev:type><maml:name>String[]</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
</command:syntaxItem>
</command:syntax>
<command:parameters><command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="0" aliases="none"><maml:name>Id</maml:name>
<maml:Description><maml:para>Gets only the scheduled jobs with the specified identification number (ID). Enter one or more IDs of scheduled jobs on the computer. By default, Get-ScheduledJob gets all scheduled jobs on the computer.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">Int32[]</command:parameterValue>
<dev:type><maml:name>Int32[]</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="0" aliases="none"><maml:name>Name</maml:name>
<maml:Description><maml:para>Gets only the scheduled jobs with the specified names. Enter one or more names of scheduled jobs on the computer. Wildcards are supported. By default, Get-ScheduledJob gets all scheduled jobs on the computer.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
<dev:type><maml:name>String[]</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
</command:parameters>
<command:inputTypes><command:inputType><dev:type><maml:name>None</maml:name>
</dev:type>
<maml:description><maml:para>You cannot pipe input to Get-ScheduledJob .
</maml:para>
</maml:description>
</command:inputType>
</command:inputTypes>
<command:returnValues><command:returnValue><dev:type><maml:name>Microsoft.PowerShell.ScheduledJob.ScheduledJobDefinition</maml:name>
</dev:type>
<maml:description><maml:para>
</maml:para>
</maml:description>
</command:returnValue>
</command:returnValues>
<maml:alertSet><maml:alert><maml:para>* Each scheduled job is saved in a subdirectory of the $home\AppData\Local\Microsoft\Windows\PowerShell\ScheduledJobs directory on the local computer. The subdirectory is named for the scheduled job and contains the XML file for the scheduled job and records of its execution history. For more information about scheduled jobs on disk, see about_Scheduled_Jobs_Advanced.
</maml:para>
<maml:para>* Scheduled jobs that you create in Windows PowerShell appear in Task Scheduler in the Task Scheduler Library\Microsoft\Windows\PowerShell\ScheduledJobs folder. You can use Task Scheduler to view and edit the scheduled job.
</maml:para>
<maml:para>* You can use Task Scheduler, the SchTasks.exe command-line tool, and the Task Scheduler cmdlets to manage scheduled jobs that you create with the Scheduled Job cmdlets. However, you cannot use the Scheduled Job cmdlets to manage tasks that you create in Task Scheduler.
</maml:para>
</maml:alert>
</maml:alertSet>
<command:examples><command:example><maml:title>Example 1: Get all scheduled jobs</maml:title>
<dev:code>PS C:\&gt;Get-ScheduledJob</dev:code>
<dev:remarks><maml:para>This command gets all scheduled jobs on the local computer.
</maml:para>
</dev:remarks>
</command:example>
<command:example><maml:title>Example 2: Get scheduled jobs by name</maml:title>
<dev:code>PS C:\&gt;Get-ScheduledJob -Name *Backup*, *Archive*</dev:code>
<dev:remarks><maml:para>This command gets all scheduled jobs on the computer that have names that include Backup or Archive. This command format lets you search for particular jobs.
</maml:para>
</dev:remarks>
</command:example>
<command:example><maml:title>Example 3: Get scheduled jobs on remote computers</maml:title>
<dev:code>PS C:\&gt;Invoke-Command -ComputerName (Get-Content Servers.txt) {Get-ScheduledJob}</dev:code>
<dev:remarks><maml:para>This command gets all scheduled jobs on the computers that are listed in the Servers.txt file. The command uses the Invoke-Command cmdlet to run a Get-ScheduleJob command on each computer.
</maml:para>
</dev:remarks>
</command:example>
<command:example><maml:title>Example 4: Pipe scheduled jobs to other cmdlets</maml:title>
<dev:code>PS C:\&gt;Get-ScheduledJob DailyBackup, WeeklyBackup | Get-JobTrigger</dev:code>
<dev:remarks><maml:para>This command gets the job triggers of the DailyBackup and WeeklyBackup scheduled jobs. It uses the Get-ScheduledJob cmdlet to get the scheduled jobs and the Get-JobTrigger cmdlet to get the job triggers of the scheduled jobs.
</maml:para>
</dev:remarks>
</command:example>
</command:examples>
<command:relatedLinks><maml:navigationLink><maml:linkText>Online Version:</maml:linkText>
<maml:uri>http://go.microsoft.com/fwlink/?LinkId=821686</maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Add-JobTrigger</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Disable-JobTrigger</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Disable-ScheduledJob</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Enable-JobTrigger</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Enable-ScheduledJob</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Get-JobTrigger</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Get-ScheduledJob</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Get-ScheduledJobOption</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>New-JobTrigger</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>New-ScheduledJobOption</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Register-ScheduledJob</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Remove-JobTrigger</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Set-JobTrigger</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Set-ScheduledJob</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Set-ScheduledJobOption</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Unregister-ScheduledJob</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
</command:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
<command:details><command:name>Get-ScheduledJobOption</command:name>
<command:verb>Get</command:verb>
<command:noun>ScheduledJobOption</command:noun>
<maml:description><maml:para>Gets the job options of scheduled jobs.
</maml:para>
</maml:description>
</command:details>
<maml:description><maml:para>The Get-ScheduledJobOption cmdlet gets the job options of scheduled jobs. You can use this command to examine the job options or to pipe the job options to other cmdlets.
</maml:para>
<maml:para>Job options are not saved to disk independently; they are part of a scheduled job. To get the job options of a scheduled job, specify the scheduled job.
</maml:para>
<maml:para>Use the parameters of the Get-ScheduledJobOption cmdlet to identify the scheduled job. You can identify scheduled jobs by their names or identification numbers, or by entering or piping ScheduledJob objects, such as those that are returned by the Get-ScheduledJob cmdlet, to Get-ScheduledJobOption . Get-ScheduledJobOption is one of a collection of job scheduling cmdlets in the PSScheduledJob module that is included in Windows PowerShell.
</maml:para>
<maml:para>For more information about Scheduled Jobs, see the About topics in the PSScheduledJob module. Import the PSScheduledJob module and then type: `Get-Help about_Scheduled*` or see about_Scheduled_Jobs.
</maml:para>
<maml:para>This cmdlet was introduced in Windows PowerShell 3.0.
</maml:para>
</maml:description>
<command:syntax><command:syntaxItem><maml:name>Get-ScheduledJobOption</maml:name>
<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="0" aliases="none"><maml:name>Id</maml:name>
<maml:Description><maml:para>Specifies the identification number of a scheduled job. Get-ScheduledJobOption gets the job options of the specified scheduled job.
</maml:para>
<maml:para>To get the identification numbers of scheduled jobs on the local computer or a remote computer, use the Get-ScheduledJob cmdlet.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
<dev:type><maml:name>Int32</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
</command:syntaxItem>
<command:syntaxItem><maml:name>Get-ScheduledJobOption</maml:name>
<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByValue)" position="0" aliases="none"><maml:name>InputObject</maml:name>
<maml:Description><maml:para>Specifies a scheduled job. Enter a variable that contains a ScheduledJob object or type a command or expression that gets a ScheduledJob object, such as a Get-ScheduledJob command. You can also pipe a ScheduledJob object to Get-ScheduledJobOption .
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">ScheduledJobDefinition</command:parameterValue>
<dev:type><maml:name>ScheduledJobDefinition</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
</command:syntaxItem>
<command:syntaxItem><maml:name>Get-ScheduledJobOption</maml:name>
<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="0" aliases="none"><maml:name>Name</maml:name>
<maml:Description><maml:para>Specifies the names of scheduled jobs. Get-ScheduledJobOption gets the job options of the specified scheduled job. Wildcards are supported.
</maml:para>
<maml:para>To get the names of scheduled jobs on the local computer or a remote computer, use the Get-ScheduledJob cmdlet.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
<dev:type><maml:name>String</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
</command:syntaxItem>
</command:syntax>
<command:parameters><command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="0" aliases="none"><maml:name>Id</maml:name>
<maml:Description><maml:para>Specifies the identification number of a scheduled job. Get-ScheduledJobOption gets the job options of the specified scheduled job.
</maml:para>
<maml:para>To get the identification numbers of scheduled jobs on the local computer or a remote computer, use the Get-ScheduledJob cmdlet.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
<dev:type><maml:name>Int32</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByValue)" position="0" aliases="none"><maml:name>InputObject</maml:name>
<maml:Description><maml:para>Specifies a scheduled job. Enter a variable that contains a ScheduledJob object or type a command or expression that gets a ScheduledJob object, such as a Get-ScheduledJob command. You can also pipe a ScheduledJob object to Get-ScheduledJobOption .
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">ScheduledJobDefinition</command:parameterValue>
<dev:type><maml:name>ScheduledJobDefinition</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="0" aliases="none"><maml:name>Name</maml:name>
<maml:Description><maml:para>Specifies the names of scheduled jobs. Get-ScheduledJobOption gets the job options of the specified scheduled job. Wildcards are supported.
</maml:para>
<maml:para>To get the names of scheduled jobs on the local computer or a remote computer, use the Get-ScheduledJob cmdlet.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
<dev:type><maml:name>String</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
</command:parameters>
<command:inputTypes><command:inputType><dev:type><maml:name>Microsoft.PowerShell.ScheduledJob.ScheduledJobDefinition</maml:name>
</dev:type>
<maml:description><maml:para>You can pipe a scheduled job from Get-ScheduledJob to Get-ScheduledJobOption .
</maml:para>
</maml:description>
</command:inputType>
</command:inputTypes>
<command:returnValues><command:returnValue><dev:type><maml:name>Microsoft.PowerShell.ScheduledJob.ScheduledJobOptions</maml:name>
</dev:type>
<maml:description><maml:para>
</maml:para>
</maml:description>
</command:returnValue>
</command:returnValues>
<maml:alertSet><maml:alert><maml:para>
</maml:para>
</maml:alert>
</maml:alertSet>
<command:examples><command:example><maml:title>Example 1: Get job options</maml:title>
<dev:code>PS C:\&gt;Get-ScheduledJobOption -Name "*Backup*"
StartIfOnBatteries     : False

StopIfGoingOnBatteries : True

WakeToRun              : False

StartIfNotIdle         : True

StopIfGoingOffIdle     : False

RestartOnIdleResume    : False

IdleDuration           : 00:10:00

IdleTimeout            : 01:00:00

ShowInTaskScheduler    : True

RunElevated            : True

RunWithoutNetwork      : True

DoNotAllowDemandStart  : False

MultipleInstancePolicy : Ignore

NewJobDefinition       : Microsoft.PowerShell.ScheduledJob.ScheduledJobDefinition</dev:code>
<dev:remarks><maml:para>This command gets the job options of scheduled jobs that have BackUp in their names. The results show the job options object that Get-ScheduledJobOption returned.
</maml:para>
</dev:remarks>
</command:example>
<command:example><maml:title>Example 2: Get all job options</maml:title>
<dev:code>PS C:\&gt;Get-ScheduledJob | Get-ScheduledJobOptions</dev:code>
<dev:remarks><maml:para>This command gets the job options of all scheduled jobs on the local computer.
</maml:para>
<maml:para>It uses the Get-ScheduledJob cmdlet to get the scheduled jobs on the local computer. A pipeline operator (|) sends the scheduled jobs to the Get-ScheduledJobOptions cmdlet, which gets the job options of each scheduled job.
</maml:para>
</dev:remarks>
</command:example>
<command:example><maml:title>Example 3: Get selected job options</maml:title>
<dev:code>PS C:\&gt;Get-ScheduledJob | Get-ScheduledJobOption | Where {$_.RunElevated -and !$_.WaketoRun}
StartIfOnBatteries     : False

StopIfGoingOnBatteries : True

WakeToRun              : True

StartIfNotIdle         : True

StopIfGoingOffIdle     : False

RestartOnIdleResume    : False

IdleDuration           : 00:10:00

IdleTimeout            : 01:00:00

ShowInTaskScheduler    : True

RunElevated            : True

RunWithoutNetwork      : True

DoNotAllowDemandStart  : False

MultipleInstancePolicy : Ignore

NewJobDefinition       : Microsoft.PowerShell.ScheduledJob.ScheduledJobDefinition

The second command shows how to find to which scheduled job the job options belong. This command uses a pipeline operator (|) to send the selected job options to the ForEach-Object cmdlet, which gets the JobDefinition property of each options object. The JobDefinition property contains the originating job object. The results show that the selected options came from the DeployPkg scheduled job.
PS C:\&gt;Get-ScheduledJob | Get-ScheduledJobOption | Where {$_.RunElevated -and !$_.WaketoRun} | ForEach-Object {$_.JobDefinition}
Id         Name            Triggers        Command                                  Enabled

--         ----            --------        -------                                  -------

2          DeployPkg         {1, 2}        DeployPackage.ps1                        True</dev:code>
<dev:remarks><maml:para>This example shows how to find job options object with particular values.
</maml:para>
<maml:para>The first command gets job options in which the RunElevated property has a value of $True and the RunWithoutNetwork property has a value of $False. The output shows the JobOptions object that was selected.
</maml:para>
</dev:remarks>
</command:example>
<command:example><maml:title>Example 4: Use job options to create a new job</maml:title>
<dev:code>PS C:\&gt;$Opts = Get-ScheduledJobOption -Name "BackupTestLogs"
PS C:\&gt;Register-ScheduledJob -Name "Archive-Scripts" -FilePath "\\Srv01\Scripts\ArchiveScripts.ps1" -ScheduledJobOption $Opts</dev:code>
<dev:remarks><maml:para>This example shows how to use the job options that Get-ScheduledJobOptions gets in a new scheduled job.
</maml:para>
<maml:para>The first command uses Get-ScheduledJobOptions to get the jobs options of the BackupTestLogs scheduled job. The command saves the options in the $Opts variable.
</maml:para>
<maml:para>The second command uses Register-ScheduledJob cmdlet to create a new scheduled job. The value of the ScheduledJobOption parameter is the options object in the $Opts variable.
</maml:para>
</dev:remarks>
</command:example>
<command:example><maml:title>Example 5: Get job options from a remote computer</maml:title>
<dev:code>PS C:\&gt;$O = Invoke-Command -ComputerName "Srv01" -ScriptBlock {Get-ScheduledJob -Name "DataDemon" }</dev:code>
<dev:remarks><maml:para>This command uses the Invoke-Command cmdlet to get the scheduled job options of the DataDemon job on the Srv01 computer. The command saves the options in the $O variable.
</maml:para>
</dev:remarks>
</command:example>
</command:examples>
<command:relatedLinks><maml:navigationLink><maml:linkText>Online Version:</maml:linkText>
<maml:uri>http://go.microsoft.com/fwlink/?LinkId=821687</maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Add-JobTrigger</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Disable-JobTrigger</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Disable-ScheduledJob</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Enable-JobTrigger</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Enable-ScheduledJob</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Get-JobTrigger</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Get-ScheduledJob</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Get-ScheduledJobOption</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>New-JobTrigger</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>New-ScheduledJobOption</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Register-ScheduledJob</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Remove-JobTrigger</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Set-JobTrigger</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Set-ScheduledJob</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Set-ScheduledJobOption</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Unregister-ScheduledJob</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
</command:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
<command:details><command:name>New-JobTrigger</command:name>
<command:verb>New</command:verb>
<command:noun>JobTrigger</command:noun>
<maml:description><maml:para>Creates a job trigger for a scheduled job.
</maml:para>
</maml:description>
</command:details>
<maml:description><maml:para>The New-JobTrigger cmdlet creates a job trigger that starts a scheduled job on a one-time or recurring schedule, or when an event occurs.
</maml:para>
<maml:para>You can use the ScheduledJobTrigger object that New-JobTrigger returns to set a job trigger for a new or existing scheduled job.  You can also create a job trigger by using the Get-JobTrigger cmdlet to get the job trigger of an existing scheduled job, or by using a hash table value to represent a job trigger.
</maml:para>
<maml:para>When creating a job trigger, review the default values of the options specified by the New-ScheduledJobOption cmdlet. These options, which have the same valid and default values as the corresponding options in Task Scheduler , affect the scheduling and timing of scheduled jobs. New-JobTrigger is one of a collection of job scheduling cmdlets in the PSScheduledJob module that is included in Windows PowerShell.
</maml:para>
<maml:para>For more information about Scheduled Jobs, see the About topics in the PSScheduledJob module. Import the PSScheduledJob module and then type: `Get-Help about_Scheduled*` or see about_Scheduled_Jobs.
</maml:para>
<maml:para>This cmdlet was introduced in Windows PowerShell 3.0.
</maml:para>
</maml:description>
<command:syntax><command:syntaxItem><maml:name>New-JobTrigger</maml:name>
<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="0" aliases="none"><maml:name>Once</maml:name>
<maml:Description><maml:para>Specifies a non-recurring (one time) or custom repeating schedule. To create a repeating schedule, use the Once parameter with the RepetitionDuration and RepetitionInterval parameters.
</maml:para>
</maml:Description>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>At</maml:name>
<maml:Description><maml:para>Starts the job at the specified date and time. Enter a DateTime object, such as one that the Get-Date cmdlet returns, or a string that can be converted to a date and time, such as "April 19, 2012 15:00", "12/31", or "3am". If you don't specify an element of the date, such as the year, the date in the trigger has the corresponding element from the current date.
</maml:para>
<maml:para>When using the Once parameter, set the value of the At parameter to a future date and time. Because the default date in a DateTime object is the current date, if you specify a time before the current time without an explicit date, the job trigger is created for a time in the past. DateTime objects, and strings that are converted to DateTime objects, are automatically adjusted to be compatible with the date and time formats selected for the local computer in Region and Language in Control Panel.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">DateTime</command:parameterValue>
<dev:type><maml:name>DateTime</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>RandomDelay</maml:name>
<maml:Description><maml:para>Enables a random delay that begins at the scheduled start time, and sets the maximum delay value. The length of the delay is set pseudo-randomly for each start and varies from no delay to the time specified by the value of this parameter. The default value, zero (00:00:00), disables the random delay.
</maml:para>
<maml:para>Enter a timespan object, such as one returned by the New-TimeSpan cmdlet, or enter a value in &lt;hours&gt;:&lt;minutes&gt;:&lt;seconds&gt; format, which is automatically converted to a TimeSpan object.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">TimeSpan</command:parameterValue>
<dev:type><maml:name>TimeSpan</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>RepeatIndefinitely</maml:name>
<maml:Description><maml:para>This parameter, available starting in Windows PowerShell 4.0, eliminates the necessity of specifying a TimeSpan.MaxValue value for the RepetitionDuration parameter to run a scheduled job repeatedly, for an indefinite period.
</maml:para>
</maml:Description>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>RepetitionDuration</maml:name>
<maml:Description><maml:para>Repeats the job until the specified time expires. The repetition frequency is determined by the value of the RepetitionInterval parameter. For example, if the value of RepetitionInterval is 5 minutes and the value of RepetitionDuration is 2 hours, the job is triggered every five minutes for two hours.
</maml:para>
<maml:para>Enter a timespan object, such as one that the New-TimeSpan cmdlet returns or a string that can be converted to a timespan object, such as "1:05:30".
</maml:para>
<maml:para>To run a job indefinitely, add the RepeatIndefinitely parameter instead.
</maml:para>
<maml:para>To stop a job before the job trigger repetition duration expires, use the Set-JobTrigger cmdlet to set the RepetitionDuration value to zero (0).
</maml:para>
<maml:para>This parameter is valid only when the Once , At and RepetitionInterval parameters are used in the command.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">TimeSpan</command:parameterValue>
<dev:type><maml:name>TimeSpan</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>RepetitionInterval</maml:name>
<maml:Description><maml:para>Repeats the job at the specified time interval. For example, if the value of this parameter is 2 hours, the job is triggered every two hours. The default value, 0, does not repeat the job.
</maml:para>
<maml:para>Enter a timespan object, such as one that the New-TimeSpan cmdlet returns or a string that can be converted to a timespan object, such as "1:05:30".
</maml:para>
<maml:para>This parameter is valid only when the Once , At , and RepetitionDuration parameters are used in the command.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">TimeSpan</command:parameterValue>
<dev:type><maml:name>TimeSpan</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
</command:syntaxItem>
<command:syntaxItem><maml:name>New-JobTrigger</maml:name>
<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="0" aliases="none"><maml:name>Daily</maml:name>
<maml:Description><maml:para>Specifies a recurring daily job schedule. Use the other parameters in the Daily parameter set to specify the schedule details.
</maml:para>
</maml:Description>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>At</maml:name>
<maml:Description><maml:para>Starts the job at the specified date and time. Enter a DateTime object, such as one that the Get-Date cmdlet returns, or a string that can be converted to a date and time, such as "April 19, 2012 15:00", "12/31", or "3am". If you don't specify an element of the date, such as the year, the date in the trigger has the corresponding element from the current date.
</maml:para>
<maml:para>When using the Once parameter, set the value of the At parameter to a future date and time. Because the default date in a DateTime object is the current date, if you specify a time before the current time without an explicit date, the job trigger is created for a time in the past. DateTime objects, and strings that are converted to DateTime objects, are automatically adjusted to be compatible with the date and time formats selected for the local computer in Region and Language in Control Panel.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">DateTime</command:parameterValue>
<dev:type><maml:name>DateTime</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>DaysInterval</maml:name>
<maml:Description><maml:para>Specifies the number of days between occurrences on a daily schedule. For example, a value of 3 starts the scheduled job on days 1, 4, 7 and so on. The default value is 1.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
<dev:type><maml:name>Int32</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>RandomDelay</maml:name>
<maml:Description><maml:para>Enables a random delay that begins at the scheduled start time, and sets the maximum delay value. The length of the delay is set pseudo-randomly for each start and varies from no delay to the time specified by the value of this parameter. The default value, zero (00:00:00), disables the random delay.
</maml:para>
<maml:para>Enter a timespan object, such as one returned by the New-TimeSpan cmdlet, or enter a value in &lt;hours&gt;:&lt;minutes&gt;:&lt;seconds&gt; format, which is automatically converted to a TimeSpan object.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">TimeSpan</command:parameterValue>
<dev:type><maml:name>TimeSpan</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
</command:syntaxItem>
<command:syntaxItem><maml:name>New-JobTrigger</maml:name>
<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="0" aliases="none"><maml:name>Weekly</maml:name>
<maml:Description><maml:para>Specifies a recurring weekly job schedule. Use the other parameters in the Weekly parameter set to specify the schedule details.
</maml:para>
</maml:Description>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>At</maml:name>
<maml:Description><maml:para>Starts the job at the specified date and time. Enter a DateTime object, such as one that the Get-Date cmdlet returns, or a string that can be converted to a date and time, such as "April 19, 2012 15:00", "12/31", or "3am". If you don't specify an element of the date, such as the year, the date in the trigger has the corresponding element from the current date.
</maml:para>
<maml:para>When using the Once parameter, set the value of the At parameter to a future date and time. Because the default date in a DateTime object is the current date, if you specify a time before the current time without an explicit date, the job trigger is created for a time in the past. DateTime objects, and strings that are converted to DateTime objects, are automatically adjusted to be compatible with the date and time formats selected for the local computer in Region and Language in Control Panel.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">DateTime</command:parameterValue>
<dev:type><maml:name>DateTime</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>DaysOfWeek</maml:name>
<maml:Description><maml:para>Specifies the days of the week on which a weekly scheduled job runs. Enter day names, such as "Monday" or integers 0-6, where 0 represents Sunday. This parameter is required in the Weekly parameter set.
</maml:para>
<maml:para>Day names are converted to their integer values in the job trigger. When you enclose day names in quotation marks in a command, enclose each day name in separate quotation marks, such as "Monday", "Tuesday". If you enclose multiple day names in a single quotation mark pair, the corresponding integer values are summed. For example, "Monday, Tuesday" (1, 2) results in a value of "Wednesday" (3).
</maml:para>
</maml:Description>
<command:parameterValueGroup><command:parameterValue required="false" variableLength="false">Sunday</command:parameterValue>
<command:parameterValue required="false" variableLength="false">Monday</command:parameterValue>
<command:parameterValue required="false" variableLength="false">Tuesday</command:parameterValue>
<command:parameterValue required="false" variableLength="false">Wednesday</command:parameterValue>
<command:parameterValue required="false" variableLength="false">Thursday</command:parameterValue>
<command:parameterValue required="false" variableLength="false">Friday</command:parameterValue>
<command:parameterValue required="false" variableLength="false">Saturday</command:parameterValue>
</command:parameterValueGroup>
<command:parameterValue required="true" variableLength="false">DayOfWeek[]</command:parameterValue>
<dev:type><maml:name>DayOfWeek[]</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>RandomDelay</maml:name>
<maml:Description><maml:para>Enables a random delay that begins at the scheduled start time, and sets the maximum delay value. The length of the delay is set pseudo-randomly for each start and varies from no delay to the time specified by the value of this parameter. The default value, zero (00:00:00), disables the random delay.
</maml:para>
<maml:para>Enter a timespan object, such as one returned by the New-TimeSpan cmdlet, or enter a value in &lt;hours&gt;:&lt;minutes&gt;:&lt;seconds&gt; format, which is automatically converted to a TimeSpan object.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">TimeSpan</command:parameterValue>
<dev:type><maml:name>TimeSpan</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>WeeksInterval</maml:name>
<maml:Description><maml:para>Specifies the number of weeks between occurrences on a weekly job schedule. For example, a value of 3 starts the scheduled job on weeks 1, 4, 7 and so on. The default value is 1.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
<dev:type><maml:name>Int32</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
</command:syntaxItem>
<command:syntaxItem><maml:name>New-JobTrigger</maml:name>
<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="0" aliases="none"><maml:name>AtLogOn</maml:name>
<maml:Description><maml:para>Starts the scheduled job when the specified users log on to the computer. To specify a user, use the User parameter.
</maml:para>
</maml:Description>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>RandomDelay</maml:name>
<maml:Description><maml:para>Enables a random delay that begins at the scheduled start time, and sets the maximum delay value. The length of the delay is set pseudo-randomly for each start and varies from no delay to the time specified by the value of this parameter. The default value, zero (00:00:00), disables the random delay.
</maml:para>
<maml:para>Enter a timespan object, such as one returned by the New-TimeSpan cmdlet, or enter a value in &lt;hours&gt;:&lt;minutes&gt;:&lt;seconds&gt; format, which is automatically converted to a TimeSpan object.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">TimeSpan</command:parameterValue>
<dev:type><maml:name>TimeSpan</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>User</maml:name>
<maml:Description><maml:para>Specifies the users who trigger an AtLogon start of a scheduled job. Enter the name of a user in &lt;UserName&gt; or &lt;Domain\Username&gt; format or enter an asterisk (*) to represent all users. The default value is all users.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
<dev:type><maml:name>String</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
</command:syntaxItem>
<command:syntaxItem><maml:name>New-JobTrigger</maml:name>
<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="0" aliases="none"><maml:name>AtStartup</maml:name>
<maml:Description><maml:para>Starts the scheduled job when Windows starts.
</maml:para>
</maml:Description>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>RandomDelay</maml:name>
<maml:Description><maml:para>Enables a random delay that begins at the scheduled start time, and sets the maximum delay value. The length of the delay is set pseudo-randomly for each start and varies from no delay to the time specified by the value of this parameter. The default value, zero (00:00:00), disables the random delay.
</maml:para>
<maml:para>Enter a timespan object, such as one returned by the New-TimeSpan cmdlet, or enter a value in &lt;hours&gt;:&lt;minutes&gt;:&lt;seconds&gt; format, which is automatically converted to a TimeSpan object.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">TimeSpan</command:parameterValue>
<dev:type><maml:name>TimeSpan</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
</command:syntaxItem>
</command:syntax>
<command:parameters><command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>At</maml:name>
<maml:Description><maml:para>Starts the job at the specified date and time. Enter a DateTime object, such as one that the Get-Date cmdlet returns, or a string that can be converted to a date and time, such as "April 19, 2012 15:00", "12/31", or "3am". If you don't specify an element of the date, such as the year, the date in the trigger has the corresponding element from the current date.
</maml:para>
<maml:para>When using the Once parameter, set the value of the At parameter to a future date and time. Because the default date in a DateTime object is the current date, if you specify a time before the current time without an explicit date, the job trigger is created for a time in the past. DateTime objects, and strings that are converted to DateTime objects, are automatically adjusted to be compatible with the date and time formats selected for the local computer in Region and Language in Control Panel.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">DateTime</command:parameterValue>
<dev:type><maml:name>DateTime</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="0" aliases="none"><maml:name>AtLogOn</maml:name>
<maml:Description><maml:para>Starts the scheduled job when the specified users log on to the computer. To specify a user, use the User parameter.
</maml:para>
</maml:Description>
<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="0" aliases="none"><maml:name>AtStartup</maml:name>
<maml:Description><maml:para>Starts the scheduled job when Windows starts.
</maml:para>
</maml:Description>
<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="0" aliases="none"><maml:name>Daily</maml:name>
<maml:Description><maml:para>Specifies a recurring daily job schedule. Use the other parameters in the Daily parameter set to specify the schedule details.
</maml:para>
</maml:Description>
<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>DaysInterval</maml:name>
<maml:Description><maml:para>Specifies the number of days between occurrences on a daily schedule. For example, a value of 3 starts the scheduled job on days 1, 4, 7 and so on. The default value is 1.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
<dev:type><maml:name>Int32</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>DaysOfWeek</maml:name>
<maml:Description><maml:para>Specifies the days of the week on which a weekly scheduled job runs. Enter day names, such as "Monday" or integers 0-6, where 0 represents Sunday. This parameter is required in the Weekly parameter set.
</maml:para>
<maml:para>Day names are converted to their integer values in the job trigger. When you enclose day names in quotation marks in a command, enclose each day name in separate quotation marks, such as "Monday", "Tuesday". If you enclose multiple day names in a single quotation mark pair, the corresponding integer values are summed. For example, "Monday, Tuesday" (1, 2) results in a value of "Wednesday" (3).
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">DayOfWeek[]</command:parameterValue>
<dev:type><maml:name>DayOfWeek[]</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="0" aliases="none"><maml:name>Once</maml:name>
<maml:Description><maml:para>Specifies a non-recurring (one time) or custom repeating schedule. To create a repeating schedule, use the Once parameter with the RepetitionDuration and RepetitionInterval parameters.
</maml:para>
</maml:Description>
<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>RandomDelay</maml:name>
<maml:Description><maml:para>Enables a random delay that begins at the scheduled start time, and sets the maximum delay value. The length of the delay is set pseudo-randomly for each start and varies from no delay to the time specified by the value of this parameter. The default value, zero (00:00:00), disables the random delay.
</maml:para>
<maml:para>Enter a timespan object, such as one returned by the New-TimeSpan cmdlet, or enter a value in &lt;hours&gt;:&lt;minutes&gt;:&lt;seconds&gt; format, which is automatically converted to a TimeSpan object.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">TimeSpan</command:parameterValue>
<dev:type><maml:name>TimeSpan</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>RepeatIndefinitely</maml:name>
<maml:Description><maml:para>This parameter, available starting in Windows PowerShell 4.0, eliminates the necessity of specifying a TimeSpan.MaxValue value for the RepetitionDuration parameter to run a scheduled job repeatedly, for an indefinite period.
</maml:para>
</maml:Description>
<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>RepetitionDuration</maml:name>
<maml:Description><maml:para>Repeats the job until the specified time expires. The repetition frequency is determined by the value of the RepetitionInterval parameter. For example, if the value of RepetitionInterval is 5 minutes and the value of RepetitionDuration is 2 hours, the job is triggered every five minutes for two hours.
</maml:para>
<maml:para>Enter a timespan object, such as one that the New-TimeSpan cmdlet returns or a string that can be converted to a timespan object, such as "1:05:30".
</maml:para>
<maml:para>To run a job indefinitely, add the RepeatIndefinitely parameter instead.
</maml:para>
<maml:para>To stop a job before the job trigger repetition duration expires, use the Set-JobTrigger cmdlet to set the RepetitionDuration value to zero (0).
</maml:para>
<maml:para>This parameter is valid only when the Once , At and RepetitionInterval parameters are used in the command.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">TimeSpan</command:parameterValue>
<dev:type><maml:name>TimeSpan</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>RepetitionInterval</maml:name>
<maml:Description><maml:para>Repeats the job at the specified time interval. For example, if the value of this parameter is 2 hours, the job is triggered every two hours. The default value, 0, does not repeat the job.
</maml:para>
<maml:para>Enter a timespan object, such as one that the New-TimeSpan cmdlet returns or a string that can be converted to a timespan object, such as "1:05:30".
</maml:para>
<maml:para>This parameter is valid only when the Once , At , and RepetitionDuration parameters are used in the command.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">TimeSpan</command:parameterValue>
<dev:type><maml:name>TimeSpan</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>User</maml:name>
<maml:Description><maml:para>Specifies the users who trigger an AtLogon start of a scheduled job. Enter the name of a user in &lt;UserName&gt; or &lt;Domain\Username&gt; format or enter an asterisk (*) to represent all users. The default value is all users.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
<dev:type><maml:name>String</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="0" aliases="none"><maml:name>Weekly</maml:name>
<maml:Description><maml:para>Specifies a recurring weekly job schedule. Use the other parameters in the Weekly parameter set to specify the schedule details.
</maml:para>
</maml:Description>
<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>WeeksInterval</maml:name>
<maml:Description><maml:para>Specifies the number of weeks between occurrences on a weekly job schedule. For example, a value of 3 starts the scheduled job on weeks 1, 4, 7 and so on. The default value is 1.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
<dev:type><maml:name>Int32</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
</command:parameters>
<command:inputTypes><command:inputType><dev:type><maml:name>None</maml:name>
</dev:type>
<maml:description><maml:para>You cannot pipe input to this cmdlet.
</maml:para>
</maml:description>
</command:inputType>
</command:inputTypes>
<command:returnValues><command:returnValue><dev:type><maml:name>Microsoft.PowerShell.ScheduledJob.ScheduledJobTrigger</maml:name>
</dev:type>
<maml:description><maml:para>
</maml:para>
</maml:description>
</command:returnValue>
</command:returnValues>
<maml:alertSet><maml:alert><maml:para>* Job triggers are not saved to disk. However, scheduled jobs are saved to disk, and you can use the Get-JobTrigger to get the job trigger of any scheduled job.  New-JobTrigger * does not prevent you from creating a job trigger that will not run a scheduled job, such as one-time trigger for a date in the past. The Register-ScheduledJob cmdlet accepts a ScheduledJobTrigger object, such as one returned by the New-JobTrigger * or Get-JobTrigger cmdlets, or a hash table with trigger values.
</maml:para>
<maml:para>  To submit a hash table, use the following keys.
</maml:para>
<maml:para>  `@{Frequency="Once" (or Daily, Weekly, AtStartup, AtLogon);At="3am"` (or any valid time string); `DaysOfWeek="Monday", "Wednesday"` (or any combination of day names); `Interval=2` (or any valid frequency interval); `RandomDelay="30minutes"` (or any valid timespan string); `User="Domain1\User01` (or any valid user; used only with the AtLogon frequency value) }
</maml:para>
</maml:alert>
</maml:alertSet>
<command:examples><command:example><maml:title>Example 1: Once Schedule</maml:title>
<dev:code>PS C:\&gt;New-JobTrigger -Once -At "1/20/2012 3:00 AM"</dev:code>
<dev:remarks><maml:para>This command uses the New-JobTrigger cmdlet to create a job trigger that starts a scheduled job only one time. The value of the At parameter is a string that Windows PowerShell converts into a DateTime object. The At parameter value includes an explicit date, not just a time. If the date were omitted, the trigger would be created with the current date and 3:00 AM time, which is likely to represent a time in the past.
</maml:para>
</dev:remarks>
</command:example>
<command:example><maml:title>Example 2: Daily Schedule</maml:title>
<dev:code>PS C:\&gt;New-JobTrigger -Daily -At "4:15 AM" -DaysInterval 3
Id         Frequency       Time                   DaysOfWeek              Enabled
--         ---------       ----                   ----------              -------
0          Daily           9/21/2012 4:15:00 AM                           True</dev:code>
<dev:remarks><maml:para>This command creates a job trigger that starts a scheduled job every 3 days at 4:15 a.m.
</maml:para>
<maml:para>Because the value of the At parameter does not include a date, the current date is used as the date value in the DateTime object. If the date and time is in the past, the scheduled job is started at the next occurrence, which is 3 days later from the At parameter value.
</maml:para>
</dev:remarks>
</command:example>
<command:example><maml:title>Example 3: Weekly Schedule</maml:title>
<dev:code>PS C:\&gt;New-JobTrigger -Weekly -DaysOfWeek Monday, Wednesday, Friday -At "23:00" -WeeksInterval 4
Id Frequency Time                  DaysOfWeek                  Enabled
-- --------- ----                  ----------                  -------
0  Weekly    9/21/2012 11:00:00 PM {Monday, Wednesday, Friday} True</dev:code>
<dev:remarks><maml:para>This command creates a job trigger that starts a scheduled job every 4 weeks on Monday, Wednesday, and Friday at 2300 hours (11:00 PM).
</maml:para>
<maml:para>You can also enter the DaysOfWeek parameter value in integers, such as `-DaysOfWeek 1, 5`.
</maml:para>
</dev:remarks>
</command:example>
<command:example><maml:title>Example 4: Logon Schedule</maml:title>
<dev:code>PS C:\&gt;New-JobTrigger -AtLogOn -User Domain01\Admin01</dev:code>
<dev:remarks><maml:para>This command creates a job trigger that starts a scheduled job whenever the domain administrator logs onto the computer.
</maml:para>
</dev:remarks>
</command:example>
<command:example><maml:title>Example 5: Using a Random Delay</maml:title>
<dev:code>PS C:\&gt;New-JobTrigger -Daily -At 1:00 -RandomDelay 00:20:00</dev:code>
<dev:remarks><maml:para>This command creates a job trigger that starts a scheduled job every day at 1:00 in the morning. The command uses the RandomDelay parameter to set the maximum delay to 20 minutes. As a result, the job runs every day between 1:00 AM and 1:20 AM, with the interval varying pseudo-randomly.
</maml:para>
<maml:para>You can use a random delay for sampling, load balancing, and other administrative tasks. When setting the delay value, review the effective and default values of the New-ScheduledJobOption cmdlet and coordinate the delay with the option settings.
</maml:para>
</dev:remarks>
</command:example>
<command:example><maml:title>Example 6: Create a Job Trigger for a New Scheduled Job</maml:title>
<dev:code>The first command uses the **New-JobTrigger** cmdlet to create a job trigger that starts a job every Monday, Wednesday, and Friday at 12:01 AM. The command saves the job trigger in the $T variable.
PS C:\&gt;$T = New-JobTrigger -Weekly -DaysOfWeek 1,3,5 -At 12:01AM


The second command uses the Register-ScheduledJob cmdlet to create a scheduled job that starts a job every Monday, Wednesday, and Friday at 12:01 AM. The value of the *Trigger* parameter is the trigger that is stored in the $T variable.
PS C:\&gt;Register-ScheduledJob -Name Test-HelpFiles -FilePath C:\Scripts\Test-HelpFiles.ps1 -Trigger $T</dev:code>
<dev:remarks><maml:para>These commands use a job trigger to create a new scheduled job.
</maml:para>
</dev:remarks>
</command:example>
<command:example><maml:title>Example 7: Add a Job Trigger to a Scheduled Job</maml:title>
<dev:code>PS C:\&gt;Add-JobTrigger -Name SynchronizeApps -Trigger (New-JobTrigger -Daily -At 3:10AM)</dev:code>
<dev:remarks><maml:para>This example shows how to add a job trigger to an existing scheduled job. You can add multiple job triggers to any scheduled job.
</maml:para>
<maml:para>The command uses the Add-JobTrigger cmdlet to add the job trigger to the SynchronizeApps scheduled job. The value of the Trigger parameter is a New-JobTrigger command that runs the job every day at 3:10 AM.
</maml:para>
<maml:para>When the command completes, SynchronizeApps is a scheduled job that runs at the times specified by the job trigger.
</maml:para>
</dev:remarks>
</command:example>
<command:example><maml:title>Example 8: Create a repeating job trigger</maml:title>
<dev:code>PS C:\&gt;New-JobTrigger -Once -At "09/12/2013 1:00:00" -RepetitionInterval (New-TimeSpan -Hours 1) -RepetitionDuration (New-Timespan -Hours 48)</dev:code>
<dev:remarks><maml:para>This command creates a job trigger that runs a job every 60 minutes for 48 hours beginning on September 12, 2013 at 1:00 AM.
</maml:para>
</dev:remarks>
</command:example>
<command:example><maml:title>Example 9: Stop a repeating job trigger</maml:title>
<dev:code>PS C:\&gt;Get-JobTrigger -Name SecurityCheck | Set-JobTrigger -RepetitionInterval 0:00 -RepetitionDuration 0:00</dev:code>
<dev:remarks><maml:para>This command forcibly stops the SecurityCheck job, which is triggered to run every 60 minutes until its job trigger expires.
</maml:para>
<maml:para>To prevent the job from repeating, the command uses the Get-JobTrigger to get the job trigger of the SecurityCheck job and the Set-JobTrigger cmdlet to change the repetition interval and repetition duration of the job trigger to zero (0).
</maml:para>
</dev:remarks>
</command:example>
<command:example><maml:title>Example 10: Create an hourly job trigger</maml:title>
<dev:code>PS C:\&gt;New-JobTrigger -Once -At "9/21/2012 0am" -RepetitionInterval (New-TimeSpan -Hour 12) -RepetitionDuration ([TimeSpan]::MaxValue)</dev:code>
<dev:remarks><maml:para>The following command creates a job trigger that runs a scheduled job once every 12 hours for an indefinite period of time. The schedule begins tomorrow (9/21/2012) at midnight (0:00 AM).
</maml:para>
</dev:remarks>
</command:example>
</command:examples>
<command:relatedLinks><maml:navigationLink><maml:linkText>Online Version:</maml:linkText>
<maml:uri>http://go.microsoft.com/fwlink/?LinkId=821688</maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Add-JobTrigger</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Disable-JobTrigger</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Disable-ScheduledJob</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Enable-JobTrigger</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Enable-ScheduledJob</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Get-JobTrigger</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Get-ScheduledJob</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Get-ScheduledJobOption</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>New-JobTrigger</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>New-ScheduledJobOption</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Register-ScheduledJob</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Remove-JobTrigger</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Set-JobTrigger</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Set-ScheduledJob</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Set-ScheduledJobOption</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Unregister-ScheduledJob</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
</command:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
<command:details><command:name>New-ScheduledJobOption</command:name>
<command:verb>New</command:verb>
<command:noun>ScheduledJobOption</command:noun>
<maml:description><maml:para>Creates an object that contains advanced options for a scheduled job.
</maml:para>
</maml:description>
</command:details>
<maml:description><maml:para>The New-ScheduledJobOption cmdlet creates an object that contains advanced options for a scheduled job.
</maml:para>
<maml:para>You can use the ScheduledJobOptions object that New-ScheduledJobOption returns to set job options for a new or existing scheduled job. Alternatively, you can set job options by using the Get-ScheduledJobOption cmdlet to get the job options of an existing scheduled job or by using a hash table value to represent the job options.
</maml:para>
<maml:para>Without parameters, New-ScheduledJobOption generates an object that contains the default values for all of the options. Because all of the properties except for the JobDefinition property can be edited, you can use the resulting object as a template, and create standard option objects for your enterprise.
</maml:para>
<maml:para>When creating scheduled jobs and setting scheduled job options, review the default values of all scheduled job options. Scheduled jobs run only when all conditions set for their execution are satisfied. New-ScheduledJobOption is one of a collection of job scheduling cmdlets in the PSScheduledJob module that is included in Windows PowerShell.
</maml:para>
<maml:para>For more information about Scheduled Jobs, see the About topics in the PSScheduledJob module. Import the PSScheduledJob module and then type: `Get-Help about_Scheduled*` or see about_Scheduled_Jobs.
</maml:para>
<maml:para>This cmdlet was introduced in Windows PowerShell 3.0.
</maml:para>
</maml:description>
<command:syntax><command:syntaxItem><maml:name>New-ScheduledJobOption</maml:name>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>ContinueIfGoingOnBattery</maml:name>
<maml:Description><maml:para>Do not stop the scheduled job if the computer switches to battery power (disconnects from AC power) while the job is running. By default, scheduled jobs stop when the computer disconnects from AC power.
</maml:para>
<maml:para>The ContinueIfGoingOnBattery parameter sets the value of the StopIfGoingOnBatteries property of scheduled jobs to $True.
</maml:para>
</maml:Description>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>DoNotAllowDemandStart</maml:name>
<maml:Description><maml:para>Start the job only when it is triggered. Users cannot start the job manually, such as by using the Run feature in Task Scheduler.
</maml:para>
<maml:para>This parameter only affects Task Scheduler. It does not prevents users from using the Start-Job cmdlet to start the job.
</maml:para>
<maml:para>The DoNotAllowDemandStart parameter sets the value of the DoNotAllowDemandStart property of scheduled jobs to $True.
</maml:para>
</maml:Description>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>HideInTaskScheduler</maml:name>
<maml:Description><maml:para>Do not display the job in Task Scheduler. This value affects only the computer on which the job runs. By default, scheduled tasks appear in Task Scheduler.
</maml:para>
<maml:para>Even if a task is hidden, users can display the task by selecting the Show hidden tasks view option in Task Scheduler.
</maml:para>
<maml:para>The HideInTaskScheduler parameter sets the value of the ShowInTaskScheduler property of scheduled jobs to $False.
</maml:para>
</maml:Description>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>IdleDuration</maml:name>
<maml:Description><maml:para>Specifies how long the computer must be idle before the job starts. The default value is 10 minutes. If the computer is not idle for the specified duration before the value of IdleTimeout expires, the scheduled job does not run until the next scheduled time, if any.
</maml:para>
<maml:para>Enter a TimeSpan object, such as one generated by the New-TimeSpan cmdlet, or enter a value in &lt;hours&gt;:&lt;minutes&gt;:&lt;seconds&gt; format  that is automatically converted to a TimeSpan object.
</maml:para>
<maml:para>To enable this value, use the StartIfIdle parameter. By default, the StartIfNotIdle property of scheduled jobs is set to $True and Windows PowerShell ignores the IdleDuration and IdleTimeout values.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">TimeSpan</command:parameterValue>
<dev:type><maml:name>TimeSpan</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>IdleTimeout</maml:name>
<maml:Description><maml:para>Specifies how long the scheduled job waits for the computer to be idle. If this timeout expires before the computer remains idle for the time period that is specified by the IdleDuration parameter, the job does not run until the next scheduled time, if any. The default value is one hour.
</maml:para>
<maml:para>Enter a TimeSpan object, such as one generated by the New-TimeSpan cmdlet, or enter a value in &lt;hours&gt;:&lt;minutes&gt;:&lt;seconds&gt; format that is automatically converted to a TimeSpan object.
</maml:para>
<maml:para>To enable this value, use the StartIfIdle parameter. By default, the StartIfNotIdle property of scheduled jobs is set to $True and Windows PowerShell ignores the IdleDuration and IdleTimeout values.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">TimeSpan</command:parameterValue>
<dev:type><maml:name>TimeSpan</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>MultipleInstancePolicy</maml:name>
<maml:Description><maml:para>Determines how the system responds to a request to start an instance of a scheduled job while another instance of the job is running. The default value is IgnoreNew. The acceptable values for this parameter are:
</maml:para>
<maml:para>- IgnoreNew. The new job instance is ignored.  - Parallel. The new job instance starts immediately. - Queue. The new job instance starts as soon as the current instance completes. - StopExisting. The current instance of the job stops and the new instance starts.
</maml:para>
<maml:para>To run the job, all conditions for the job schedule must be met. For example, if the conditions that are set by the RequireNetwork , IdleDuration , and IdleTimeout parameters are not satisfied, the job instance is not started, regardless of the value of this parameter.
</maml:para>
</maml:Description>
<command:parameterValueGroup><command:parameterValue required="false" variableLength="false">None</command:parameterValue>
<command:parameterValue required="false" variableLength="false">IgnoreNew</command:parameterValue>
<command:parameterValue required="false" variableLength="false">Parallel</command:parameterValue>
<command:parameterValue required="false" variableLength="false">Queue</command:parameterValue>
<command:parameterValue required="false" variableLength="false">StopExisting</command:parameterValue>
</command:parameterValueGroup>
<command:parameterValue required="true" variableLength="false">TaskMultipleInstancePolicy</command:parameterValue>
<dev:type><maml:name>TaskMultipleInstancePolicy</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>RequireNetwork</maml:name>
<maml:Description><maml:para>Runs the scheduled job only when network connections are available.
</maml:para>
<maml:para>If you specify this parameter and the network is not available at the scheduled start time, the job does not run until the next scheduled start time, if any.
</maml:para>
<maml:para>The RequireNetwork parameter sets the value of the RunWithoutNetwork property of scheduled jobs to $False.
</maml:para>
</maml:Description>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>RestartOnIdleResume</maml:name>
<maml:Description><maml:para>Restarts a scheduled job when the computer becomes idle. This parameter works with the StopIfGoingOffIdle parameter, which suspends a running scheduled job if the computer becomes active (leaves the idle state).
</maml:para>
<maml:para>The RestartOnIdleResume parameter sets the value of the RestartOnIdleResume property of scheduled jobs to $True.
</maml:para>
</maml:Description>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>RunElevated</maml:name>
<maml:Description><maml:para>Runs the scheduled job with the permissions of a member of the Administrators group on the computer on which the job runs.
</maml:para>
<maml:para>To enable a scheduled job to run with Administrator permissions, use the Credential parameter of Register-ScheduledJob to provide explicit credential for the job.
</maml:para>
<maml:para>The RunElevated parameter sets the value of the RunElevated property of scheduled jobs to $True.
</maml:para>
</maml:Description>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>StartIfIdle</maml:name>
<maml:Description><maml:para>Starts the scheduled job if the computer has been idle for the time specified by the IdleDuration parameter before the time specified by the IdleTimeout parameter expires.
</maml:para>
<maml:para>By default, the IdleDuration and IdleTimeout parameters are ignored and the job starts at the scheduled start time even if the computer is busy.
</maml:para>
<maml:para>If you specify this parameter and the computer is busy (not idle) at the scheduled start time, the job does not run until the next scheduled start time, if any.
</maml:para>
<maml:para>The StartIfIdle parameter sets the value of the StartIfNotIdle property of scheduled jobs to $False.
</maml:para>
</maml:Description>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>StartIfOnBattery</maml:name>
<maml:Description><maml:para>Starts the scheduled job even if the computer is running on batteries at the scheduled start time. The default value is $False.
</maml:para>
<maml:para>The StartIfOnBattery parameter sets the value of the StartIfOnBatteries property of scheduled jobs to $True.
</maml:para>
</maml:Description>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>StopIfGoingOffIdle</maml:name>
<maml:Description><maml:para>Suspends a running scheduled job if the computer becomes active (not idle) while the job is running.
</maml:para>
<maml:para>By default, a scheduled job that is suspended when the computer becomes active resumes when the computer becomes idle again. To change this default behavior, use the RestartOnIdleResume parameter.
</maml:para>
<maml:para>The StopIfGoingOffIdle parameter sets the value of the StopIfGoingOffIdle property of scheduled jobs to $True.
</maml:para>
</maml:Description>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>WakeToRun</maml:name>
<maml:Description><maml:para>Wakes the computer from a Hibernate or Sleep state at the scheduled start time so it can run the job. By default, if the computer is in a Hibernate or Sleep state at the scheduled start time, the job does not run.
</maml:para>
<maml:para>The WakeToRun parameter sets the value of the WakeToRun property of scheduled jobs to $True.
</maml:para>
</maml:Description>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
</command:syntaxItem>
</command:syntax>
<command:parameters><command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>ContinueIfGoingOnBattery</maml:name>
<maml:Description><maml:para>Do not stop the scheduled job if the computer switches to battery power (disconnects from AC power) while the job is running. By default, scheduled jobs stop when the computer disconnects from AC power.
</maml:para>
<maml:para>The ContinueIfGoingOnBattery parameter sets the value of the StopIfGoingOnBatteries property of scheduled jobs to $True.
</maml:para>
</maml:Description>
<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>DoNotAllowDemandStart</maml:name>
<maml:Description><maml:para>Start the job only when it is triggered. Users cannot start the job manually, such as by using the Run feature in Task Scheduler.
</maml:para>
<maml:para>This parameter only affects Task Scheduler. It does not prevents users from using the Start-Job cmdlet to start the job.
</maml:para>
<maml:para>The DoNotAllowDemandStart parameter sets the value of the DoNotAllowDemandStart property of scheduled jobs to $True.
</maml:para>
</maml:Description>
<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>HideInTaskScheduler</maml:name>
<maml:Description><maml:para>Do not display the job in Task Scheduler. This value affects only the computer on which the job runs. By default, scheduled tasks appear in Task Scheduler.
</maml:para>
<maml:para>Even if a task is hidden, users can display the task by selecting the Show hidden tasks view option in Task Scheduler.
</maml:para>
<maml:para>The HideInTaskScheduler parameter sets the value of the ShowInTaskScheduler property of scheduled jobs to $False.
</maml:para>
</maml:Description>
<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>IdleDuration</maml:name>
<maml:Description><maml:para>Specifies how long the computer must be idle before the job starts. The default value is 10 minutes. If the computer is not idle for the specified duration before the value of IdleTimeout expires, the scheduled job does not run until the next scheduled time, if any.
</maml:para>
<maml:para>Enter a TimeSpan object, such as one generated by the New-TimeSpan cmdlet, or enter a value in &lt;hours&gt;:&lt;minutes&gt;:&lt;seconds&gt; format  that is automatically converted to a TimeSpan object.
</maml:para>
<maml:para>To enable this value, use the StartIfIdle parameter. By default, the StartIfNotIdle property of scheduled jobs is set to $True and Windows PowerShell ignores the IdleDuration and IdleTimeout values.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">TimeSpan</command:parameterValue>
<dev:type><maml:name>TimeSpan</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>IdleTimeout</maml:name>
<maml:Description><maml:para>Specifies how long the scheduled job waits for the computer to be idle. If this timeout expires before the computer remains idle for the time period that is specified by the IdleDuration parameter, the job does not run until the next scheduled time, if any. The default value is one hour.
</maml:para>
<maml:para>Enter a TimeSpan object, such as one generated by the New-TimeSpan cmdlet, or enter a value in &lt;hours&gt;:&lt;minutes&gt;:&lt;seconds&gt; format that is automatically converted to a TimeSpan object.
</maml:para>
<maml:para>To enable this value, use the StartIfIdle parameter. By default, the StartIfNotIdle property of scheduled jobs is set to $True and Windows PowerShell ignores the IdleDuration and IdleTimeout values.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">TimeSpan</command:parameterValue>
<dev:type><maml:name>TimeSpan</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>MultipleInstancePolicy</maml:name>
<maml:Description><maml:para>Determines how the system responds to a request to start an instance of a scheduled job while another instance of the job is running. The default value is IgnoreNew. The acceptable values for this parameter are:
</maml:para>
<maml:para>- IgnoreNew. The new job instance is ignored.  - Parallel. The new job instance starts immediately. - Queue. The new job instance starts as soon as the current instance completes. - StopExisting. The current instance of the job stops and the new instance starts.
</maml:para>
<maml:para>To run the job, all conditions for the job schedule must be met. For example, if the conditions that are set by the RequireNetwork , IdleDuration , and IdleTimeout parameters are not satisfied, the job instance is not started, regardless of the value of this parameter.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">TaskMultipleInstancePolicy</command:parameterValue>
<dev:type><maml:name>TaskMultipleInstancePolicy</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>RequireNetwork</maml:name>
<maml:Description><maml:para>Runs the scheduled job only when network connections are available.
</maml:para>
<maml:para>If you specify this parameter and the network is not available at the scheduled start time, the job does not run until the next scheduled start time, if any.
</maml:para>
<maml:para>The RequireNetwork parameter sets the value of the RunWithoutNetwork property of scheduled jobs to $False.
</maml:para>
</maml:Description>
<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>RestartOnIdleResume</maml:name>
<maml:Description><maml:para>Restarts a scheduled job when the computer becomes idle. This parameter works with the StopIfGoingOffIdle parameter, which suspends a running scheduled job if the computer becomes active (leaves the idle state).
</maml:para>
<maml:para>The RestartOnIdleResume parameter sets the value of the RestartOnIdleResume property of scheduled jobs to $True.
</maml:para>
</maml:Description>
<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>RunElevated</maml:name>
<maml:Description><maml:para>Runs the scheduled job with the permissions of a member of the Administrators group on the computer on which the job runs.
</maml:para>
<maml:para>To enable a scheduled job to run with Administrator permissions, use the Credential parameter of Register-ScheduledJob to provide explicit credential for the job.
</maml:para>
<maml:para>The RunElevated parameter sets the value of the RunElevated property of scheduled jobs to $True.
</maml:para>
</maml:Description>
<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>StartIfIdle</maml:name>
<maml:Description><maml:para>Starts the scheduled job if the computer has been idle for the time specified by the IdleDuration parameter before the time specified by the IdleTimeout parameter expires.
</maml:para>
<maml:para>By default, the IdleDuration and IdleTimeout parameters are ignored and the job starts at the scheduled start time even if the computer is busy.
</maml:para>
<maml:para>If you specify this parameter and the computer is busy (not idle) at the scheduled start time, the job does not run until the next scheduled start time, if any.
</maml:para>
<maml:para>The StartIfIdle parameter sets the value of the StartIfNotIdle property of scheduled jobs to $False.
</maml:para>
</maml:Description>
<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>StartIfOnBattery</maml:name>
<maml:Description><maml:para>Starts the scheduled job even if the computer is running on batteries at the scheduled start time. The default value is $False.
</maml:para>
<maml:para>The StartIfOnBattery parameter sets the value of the StartIfOnBatteries property of scheduled jobs to $True.
</maml:para>
</maml:Description>
<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>StopIfGoingOffIdle</maml:name>
<maml:Description><maml:para>Suspends a running scheduled job if the computer becomes active (not idle) while the job is running.
</maml:para>
<maml:para>By default, a scheduled job that is suspended when the computer becomes active resumes when the computer becomes idle again. To change this default behavior, use the RestartOnIdleResume parameter.
</maml:para>
<maml:para>The StopIfGoingOffIdle parameter sets the value of the StopIfGoingOffIdle property of scheduled jobs to $True.
</maml:para>
</maml:Description>
<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>WakeToRun</maml:name>
<maml:Description><maml:para>Wakes the computer from a Hibernate or Sleep state at the scheduled start time so it can run the job. By default, if the computer is in a Hibernate or Sleep state at the scheduled start time, the job does not run.
</maml:para>
<maml:para>The WakeToRun parameter sets the value of the WakeToRun property of scheduled jobs to $True.
</maml:para>
</maml:Description>
<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
</command:parameters>
<command:inputTypes><command:inputType><dev:type><maml:name>None</maml:name>
</dev:type>
<maml:description><maml:para>You cannot pipe input to this cmdlet.
</maml:para>
</maml:description>
</command:inputType>
</command:inputTypes>
<command:returnValues><command:returnValue><dev:type><maml:name>Microsoft.PowerShell.ScheduledJob.ScheduledJobOptions</maml:name>
</dev:type>
<maml:description><maml:para>
</maml:para>
</maml:description>
</command:returnValue>
</command:returnValues>
<maml:alertSet><maml:alert><maml:para>You can use the ScheduledJobOptions object that New-ScheduledJobOption creates as the value of the ScheduledJobOption parameter of the Register-ScheduledJob cmdlet. However, the ScheduledJobOption parameter can also take a hash table value that specifies the properties of the ScheduledJobOptions * object and their values, such as:
</maml:para>
<maml:para>  `@{ShowInTaskScheduler=$False; RunElevated=$True; IdleDuration="00:05"}`
</maml:para>
</maml:alert>
</maml:alertSet>
<command:examples><command:example><maml:title>Example 1: Create a scheduled job option object with default values</maml:title>
<dev:code>PS C:\&gt;New-ScheduledJobOption
StartIfOnBatteries     : False
StopIfGoingOnBatteries : True
WakeToRun              : False
StartIfNotIdle         : True
StopIfGoingOffIdle     : False
RestartOnIdleResume    : False
IdleDuration           : 00:10:00
IdleTimeout            : 01:00:00
ShowInTaskScheduler    : True
RunElevated            : False
RunWithoutNetwork      : True
DoNotAllowDemandStart  : False
MultipleInstancePolicy : Ignore
NewJobDefinition       :</dev:code>
<dev:remarks><maml:para>This command creates a scheduled job option object that has all of the default values.
</maml:para>
</dev:remarks>
</command:example>
<command:example><maml:title>Example 2: Create a scheduled job option object with custom values</maml:title>
<dev:code>PS C:\&gt;New-ScheduledJobOption -RequireNetwork -StartIfOnBattery
StartIfOnBatteries     : True
StopIfGoingOnBatteries : True
WakeToRun              : False
StartIfNotIdle         : True
StopIfGoingOffIdle     : False
RestartOnIdleResume    : False
IdleDuration           : 00:10:00
IdleTimeout            : 01:00:00
ShowInTaskScheduler    : True
RunElevated            : False
RunWithoutNetwork      : False
DoNotAllowDemandStart  : False
MultipleInstancePolicy : Ignore
NewJobDefinition       :</dev:code>
<dev:remarks><maml:para>The following command creates a scheduled job object that requires the network and runs the scheduled job even if the computer is not connected to AC power.
</maml:para>
<maml:para>The output shows that the RequireNetwork parameter changed the value of the RunWithoutNetwork property to $False and the StartIfOnBattery parameter changed the value of the StartIfOnBatteries property to $True.
</maml:para>
</dev:remarks>
</command:example>
<command:example><maml:title>Example 3: Set options for a new scheduled job</maml:title>
<dev:code>The first command creates a **ScheduledJobOptions** object with the *RunElevated* parameter. It saves the object in the $RunAsAdmin variable. 
PS C:\&gt;$RunAsAdmin = New-ScheduledJobOption -RunElevated

The second command uses the Register-ScheduledJob cmdlet to create a new scheduled job. The value of the *ScheduledJobOption* parameter is the option object in the value of the $RunAsAdmin variable.
PS C:\&gt;Register-ScheduledJob -Name Backup -FilePath D:\Scripts\Backup.ps1 -Trigger $Mondays -ScheduledJobOption $RunAsAdmin

The third command uses the Get-ScheduledJobOption cmdlet to get the job options of the Backup scheduled job.The cmdlet output shows that the RunElevated property is set to $True and the JobDefinition property of the job option object is now populated with the scheduled job object for the Backup scheduled job.
PS C:\&gt;Get-ScheduledJobOption -Name Backup
StartIfOnBatteries     : False
StopIfGoingOnBatteries : True
WakeToRun              : False
StartIfNotIdle         : True
StopIfGoingOffIdle     : False
RestartOnIdleResume    : False
IdleDuration           : 00:10:00
IdleTimeout            : 01:00:00
ShowInTaskScheduler    : True
RunElevated            : True
RunWithoutNetwork      : True
DoNotAllowDemandStart  : False
MultipleInstancePolicy : IgnoreNew
JobDefinition          : Microsoft.PowerShell.ScheduledJob.ScheduledJobDefinition</dev:code>
<dev:remarks><maml:para>This example shows how to use the ScheduledJobOptions object that New-ScheduledJobOption returns to set the options for a new scheduled job.
</maml:para>
</dev:remarks>
</command:example>
<command:example><maml:title>Example 4: Sort the properties of a scheduled job option object</maml:title>
<dev:code>PS C:\&gt;$Options = New-ScheduledJobOption -WakeToRun
PS C:\&gt; $Options.PSObject.Properties | Sort-Object -Property Name | Format-Table -Property Name, Value -Autosize
Name                       Value
----                       -----
DoNotAllowDemandStart      False
IdleDuration            00:10:00
IdleTimeout             01:00:00
JobDefinition                   
MultipleInstancePolicy IgnoreNew
RestartOnIdleResume        False
RunElevated                False
RunWithoutNetwork           True
ShowInTaskScheduler         True
StartIfNotIdle              True
StartIfOnBatteries         False
StopIfGoingOffIdle         False
StopIfGoingOnBatteries      True
WakeToRun                   True</dev:code>
<dev:remarks><maml:para>This example shows how to sort the properties of a ScheduledJobOptions object in alphabetical order for easy reading.
</maml:para>
<maml:para>The first command uses the New-ScheduledJobOption cmdlet to create a ScheduledJobOptions object. The command uses the WakeToRun parameter and saves the resulting object in the $Options variable.
</maml:para>
<maml:para>To get the properties of $Options as objects, the second command uses the PSObject property of all Windows PowerShell objects and its Properties property. The command then pipes the property objects to the Sort-Object cmdlet, which sorts the properties in alphabetical order by name, and then to the Format-Table cmdlet, which displays the names and values of the properties in a table.
</maml:para>
<maml:para>This format makes it much easier to find the WakeToRun property of the ScheduledJobOptions object in $Options and to verify that its value was changed from $False to $True.
</maml:para>
</dev:remarks>
</command:example>
</command:examples>
<command:relatedLinks><maml:navigationLink><maml:linkText>Online Version:</maml:linkText>
<maml:uri>http://go.microsoft.com/fwlink/?LinkId=821689</maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Add-JobTrigger</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Disable-JobTrigger</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Disable-ScheduledJob</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Enable-JobTrigger</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Enable-ScheduledJob</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Get-JobTrigger</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Get-ScheduledJob</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Get-ScheduledJobOption</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>New-JobTrigger</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>New-ScheduledJobOption</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Register-ScheduledJob</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Remove-JobTrigger</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Set-JobTrigger</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Set-ScheduledJob</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Set-ScheduledJobOption</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Unregister-ScheduledJob</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
</command:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
<command:details><command:name>Register-ScheduledJob</command:name>
<command:verb>Register</command:verb>
<command:noun>ScheduledJob</command:noun>
<maml:description><maml:para>Creates a scheduled job.
</maml:para>
</maml:description>
</command:details>
<maml:description><maml:para>The Register-ScheduledJob cmdlet creates scheduled jobs on the local computer.
</maml:para>
<maml:para>A scheduled job is a Windows PowerShell background job that can be started automatically on a one-time or recurring schedule. Scheduled jobs are stored on disk and registered in Task Scheduler, so they can be managed in Task Scheduler or by using the Scheduled Job cmdlets in Windows PowerShell.
</maml:para>
<maml:para>When a scheduled job starts, it creates an instance of the scheduled job. Scheduled job instances are identical to Windows PowerShell background jobs, except that the results are saved on disk. Use the Job cmdlets, such as Start-Job, Get-Job, and Receive-Job to start, view, and get the results of the job instances.
</maml:para>
<maml:para>Use Register-ScheduledJob to create a new scheduled job. To specify the commands that the scheduled job runs, use the ScriptBlock parameter; to specify a script that the job runs, use the FilePath parameter.
</maml:para>
<maml:para>Windows PowerShell-scheduled jobs use the same job triggers and job options that Task Scheduler uses for scheduled tasks.
</maml:para>
<maml:para>The Trigger parameter of Register-ScheduledJob adds one or more job triggers that start the job. The Trigger parameter is optional, so you can add triggers when you create the scheduled job, add job triggers later, add the RunNow parameter to start the job immediately, use the Start-Job cmdlet to start the job immediately at any time, or save the untriggered scheduled job as a template for other jobs.
</maml:para>
<maml:para>The Options parameter lets you customize the options settings for the scheduled job. The Options parameter is also optional, so you can set job options when you create the scheduled job or change them at any time. Because job option settings can prevent the scheduled job from running, review the job options and set them carefully. Register-ScheduledJob is one of a collection of job scheduling cmdlets in the PSScheduledJob module that is included in Windows PowerShell.
</maml:para>
<maml:para>For more information about Scheduled Jobs, see the About topics in the PSScheduledJob module. Import the PSScheduledJob module and then type: `Get-Help about_Scheduled*` or see about_Scheduled_Jobs.
</maml:para>
<maml:para>This cmdlet was introduced in Windows PowerShell 3.0.
</maml:para>
</maml:description>
<command:syntax><command:syntaxItem><maml:name>Register-ScheduledJob</maml:name>
<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="0" aliases="none"><maml:name>Name</maml:name>
<maml:Description><maml:para>Specifies a name for the scheduled job. The name is also used for all started instances of the scheduled job. The name must be unique on the computer. This parameter is required.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
<dev:type><maml:name>String</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="1" aliases="none"><maml:name>FilePath</maml:name>
<maml:Description><maml:para>Specifies a script that the scheduled job runs. Enter the path to a .ps1 file on the local computer. To specify default values for the script parameters, use the ArgumentList parameter. Every Register-ScheduledJob command must use either the ScriptBlock or FilePath parameters.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
<dev:type><maml:name>String</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>ArgumentList</maml:name>
<maml:Description><maml:para>Specifies values for the parameters of the script that is specified by the FilePath parameter or for the command that is specified by the ScriptBlock parameter.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">Object[]</command:parameterValue>
<dev:type><maml:name>Object[]</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>Authentication</maml:name>
<maml:Description><maml:para>Specifies the mechanism that is used to authenticate the user's credentials. The acceptable values for this parameter are:
</maml:para>
<maml:para>- Default
</maml:para>
<maml:para>- Basic
</maml:para>
<maml:para>- Credssp
</maml:para>
<maml:para>- Digest
</maml:para>
<maml:para>- Kerberos
</maml:para>
<maml:para>- Negotiate
</maml:para>
<maml:para>- NegotiateWithImplicitCredential
</maml:para>
<maml:para>
</maml:para>
<maml:para>The default value is Default. For information about the values of this parameter, see AuthenticationMechanism Enumerationhttps://msdn.microsoft.com/en-us/library/system.management.automation.runspaces.authenticationmechanism(v=vs.85).aspx in MSDN.
</maml:para>
<maml:para>Caution: Credential Security Service Provider (CredSSP) authentication, in which the user's credentials are passed to a remote computer to be authenticated, is designed for commands that require authentication on more than one resource, such as accessing a remote network share. This mechanism increases the security risk of the remote operation. If the remote computer is compromised, the credentials that are passed to it can be used to control the network session.
</maml:para>
</maml:Description>
<command:parameterValueGroup><command:parameterValue required="false" variableLength="false">Default</command:parameterValue>
<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
<command:parameterValue required="false" variableLength="false">NegotiateWithImplicitCredential</command:parameterValue>
<command:parameterValue required="false" variableLength="false">Credssp</command:parameterValue>
<command:parameterValue required="false" variableLength="false">Digest</command:parameterValue>
<command:parameterValue required="false" variableLength="false">Kerberos</command:parameterValue>
</command:parameterValueGroup>
<command:parameterValue required="true" variableLength="false">AuthenticationMechanism</command:parameterValue>
<dev:type><maml:name>AuthenticationMechanism</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="cf"><maml:name>Confirm</maml:name>
<maml:Description><maml:para>Prompts you for confirmation before running the cmdlet.
</maml:para>
</maml:Description>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>Credential</maml:name>
<maml:Description><maml:para>Specifies a user account that has permission to run the scheduled job. The default is the current user.
</maml:para>
<maml:para>Type a user name, such as User01 or Domain01\User01, or enter a PSCredential object, such as one from the Get-Credential cmdlet. If you enter only a user name, you are prompted for a password.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
<dev:type><maml:name>PSCredential</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>InitializationScript</maml:name>
<maml:Description><maml:para>Specifies the fully qualified path to a Windows PowerShell script (.ps1). The initialization script runs in the session that is created for the background job before the commands that are specified by the ScriptBlock parameter or the script that is specified by the FilePath parameter. You can use the initialization script to configure the session, such as adding files, functions, or aliases, creating directories, or checking for prerequisites.
</maml:para>
<maml:para>To specify a script that runs the primary job commands, use the FilePath parameter.
</maml:para>
<maml:para>If the initialization script generates an error (even a non-terminating error), the current instance of the scheduled job does not run and its status is Failed.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">ScriptBlock</command:parameterValue>
<dev:type><maml:name>ScriptBlock</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>MaxResultCount</maml:name>
<maml:Description><maml:para>Specifies how many job result entries are maintained for the scheduled job. The default value is 32.
</maml:para>
<maml:para>Windows PowerShell saves the execution history and results of each triggered instance of the scheduled job on disk. The value of this parameter determines the number of job instance results that are saved for this scheduled job. When the number of job instance results exceeds this value, Windows PowerShell deletes the results of the oldest job instance to make room for the results of the newest job instance.
</maml:para>
<maml:para>The job execution history and job results are saved in the $home\AppData\Local\Microsoft\Windows\PowerShell\ScheduledJobs\&lt;JobName&gt;\Output\&lt;Timestamp&gt; directories on the computer on which the job is created. To see the execution history, use the Get-Job cmdlet. To get the job results, use the Receive-Job cmdlet.
</maml:para>
<maml:para>The MaxResultCount parameter sets the value of the ExecutionHistoryLength property of the scheduled job.
</maml:para>
<maml:para>To delete the current execution history and job results, use the ClearExecutionHistory parameter of the Set-ScheduledJob cmdlet.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
<dev:type><maml:name>Int32</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>RunAs32</maml:name>
<maml:Description><maml:para>Runs the scheduled job in a 32-bit process.
</maml:para>
</maml:Description>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>RunEvery</maml:name>
<maml:Description><maml:para>@{Text=}
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">TimeSpan</command:parameterValue>
<dev:type><maml:name>TimeSpan</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>RunNow</maml:name>
<maml:Description><maml:para>Starts a job immediately, as soon as the Register-ScheduledJob cmdlet is run. This parameter eliminates the need to trigger Task Scheduler to run a Windows PowerShell script immediately after registration, and does not require users to create a trigger that specifies a starting date and time.
</maml:para>
</maml:Description>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>ScheduledJobOption</maml:name>
<maml:Description><maml:para>Sets options for the scheduled job. Enter a ScheduledJobOptions object, such as one that you create by using the New-ScheduledJobOption cmdlet, or a hash table value.
</maml:para>
<maml:para>You can set options for a scheduled job when you register the schedule job or use the Set-ScheduledJobOption or Set-ScheduledJob cmdlets to change the options.
</maml:para>
<maml:para>Many of the options and their default values determine whether and when a scheduled job runs. Be sure to review these options before scheduling a job. For a description of the scheduled job options, including the default values, see New-ScheduledJobOption.
</maml:para>
<maml:para>To submit a hash table, use the following keys. In the following hash table, the keys are shown with their default values.
</maml:para>
<maml:para>`@{StartIfOnBattery=$False; StopIfGoingOnBattery=$True; WakeToRun=$False; StartIfNotIdle=$False; IdleDuration="00:10:00"; IdleTimeout="01:00:00"; StopIfGoingOffIdle=$True; RestartOnIdleResume=$False; ShowInTaskScheduler=$True; RunElevated=$False; RunWithoutNetwork=$False; DoNotAllowDemandStart=$False; MultipleInstancePolicy=IgnoreNew}`
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">ScheduledJobOptions</command:parameterValue>
<dev:type><maml:name>ScheduledJobOptions</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>Trigger</maml:name>
<maml:Description><maml:para>Specifies the triggers for the scheduled job. Enter one or more ScheduledJobTrigger objects, such as the objects that the New-JobTrigger cmdlet returns, or a hash table of job trigger keys and values.
</maml:para>
<maml:para>A job trigger starts the schedule job. The trigger can specify a one-time or recurring scheduled or an event, such as when a user logs on or Windows starts.
</maml:para>
<maml:para>The Trigger parameter is optional. You can add a trigger when you create the scheduled job, use the Add-JobTrigger, Set-JobTrigger, or Set-ScheduledJob cmdlets to add or change job triggers later, or use the Start-Job cmdlet to start the scheduled job immediately. You can also create and maintain a scheduled job without a trigger that is used as a template.
</maml:para>
<maml:para>To submit a hash table, use the following keys: 
</maml:para>
<maml:para>`@{Frequency="Once"` (or Daily, Weekly, AtStartup, AtLogon); `At="3am"` (or any valid time string);  `DaysOfWeek="Monday", "Wednesday"` (or any combination of day names);  `Interval=2` (or any valid frequency interval);  `RandomDelay="30minutes"` (or any valid timespan string);  `User="Domain1\User01"` (or any valid user; used only with the AtLogon frequency value) }
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">ScheduledJobTrigger[]</command:parameterValue>
<dev:type><maml:name>ScheduledJobTrigger[]</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="wi"><maml:name>WhatIf</maml:name>
<maml:Description><maml:para>Shows what would happen if the cmdlet runs. The cmdlet is not run.
</maml:para>
</maml:Description>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
</command:syntaxItem>
<command:syntaxItem><maml:name>Register-ScheduledJob</maml:name>
<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="0" aliases="none"><maml:name>Name</maml:name>
<maml:Description><maml:para>Specifies a name for the scheduled job. The name is also used for all started instances of the scheduled job. The name must be unique on the computer. This parameter is required.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
<dev:type><maml:name>String</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="1" aliases="none"><maml:name>ScriptBlock</maml:name>
<maml:Description><maml:para>Specifies the commands that the scheduled job runs. Enclose the commands in braces ( { } ) to create a script block. To specify default values for command parameters, use the ArgumentList parameter.
</maml:para>
<maml:para>Every Register-ScheduledJob command must use either the ScriptBlock or FilePath parameters.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">ScriptBlock</command:parameterValue>
<dev:type><maml:name>ScriptBlock</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>ArgumentList</maml:name>
<maml:Description><maml:para>Specifies values for the parameters of the script that is specified by the FilePath parameter or for the command that is specified by the ScriptBlock parameter.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">Object[]</command:parameterValue>
<dev:type><maml:name>Object[]</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>Authentication</maml:name>
<maml:Description><maml:para>Specifies the mechanism that is used to authenticate the user's credentials. The acceptable values for this parameter are:
</maml:para>
<maml:para>- Default
</maml:para>
<maml:para>- Basic
</maml:para>
<maml:para>- Credssp
</maml:para>
<maml:para>- Digest
</maml:para>
<maml:para>- Kerberos
</maml:para>
<maml:para>- Negotiate
</maml:para>
<maml:para>- NegotiateWithImplicitCredential
</maml:para>
<maml:para>
</maml:para>
<maml:para>The default value is Default. For information about the values of this parameter, see AuthenticationMechanism Enumerationhttps://msdn.microsoft.com/en-us/library/system.management.automation.runspaces.authenticationmechanism(v=vs.85).aspx in MSDN.
</maml:para>
<maml:para>Caution: Credential Security Service Provider (CredSSP) authentication, in which the user's credentials are passed to a remote computer to be authenticated, is designed for commands that require authentication on more than one resource, such as accessing a remote network share. This mechanism increases the security risk of the remote operation. If the remote computer is compromised, the credentials that are passed to it can be used to control the network session.
</maml:para>
</maml:Description>
<command:parameterValueGroup><command:parameterValue required="false" variableLength="false">Default</command:parameterValue>
<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
<command:parameterValue required="false" variableLength="false">NegotiateWithImplicitCredential</command:parameterValue>
<command:parameterValue required="false" variableLength="false">Credssp</command:parameterValue>
<command:parameterValue required="false" variableLength="false">Digest</command:parameterValue>
<command:parameterValue required="false" variableLength="false">Kerberos</command:parameterValue>
</command:parameterValueGroup>
<command:parameterValue required="true" variableLength="false">AuthenticationMechanism</command:parameterValue>
<dev:type><maml:name>AuthenticationMechanism</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="cf"><maml:name>Confirm</maml:name>
<maml:Description><maml:para>Prompts you for confirmation before running the cmdlet.
</maml:para>
</maml:Description>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>Credential</maml:name>
<maml:Description><maml:para>Specifies a user account that has permission to run the scheduled job. The default is the current user.
</maml:para>
<maml:para>Type a user name, such as User01 or Domain01\User01, or enter a PSCredential object, such as one from the Get-Credential cmdlet. If you enter only a user name, you are prompted for a password.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
<dev:type><maml:name>PSCredential</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>InitializationScript</maml:name>
<maml:Description><maml:para>Specifies the fully qualified path to a Windows PowerShell script (.ps1). The initialization script runs in the session that is created for the background job before the commands that are specified by the ScriptBlock parameter or the script that is specified by the FilePath parameter. You can use the initialization script to configure the session, such as adding files, functions, or aliases, creating directories, or checking for prerequisites.
</maml:para>
<maml:para>To specify a script that runs the primary job commands, use the FilePath parameter.
</maml:para>
<maml:para>If the initialization script generates an error (even a non-terminating error), the current instance of the scheduled job does not run and its status is Failed.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">ScriptBlock</command:parameterValue>
<dev:type><maml:name>ScriptBlock</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>MaxResultCount</maml:name>
<maml:Description><maml:para>Specifies how many job result entries are maintained for the scheduled job. The default value is 32.
</maml:para>
<maml:para>Windows PowerShell saves the execution history and results of each triggered instance of the scheduled job on disk. The value of this parameter determines the number of job instance results that are saved for this scheduled job. When the number of job instance results exceeds this value, Windows PowerShell deletes the results of the oldest job instance to make room for the results of the newest job instance.
</maml:para>
<maml:para>The job execution history and job results are saved in the $home\AppData\Local\Microsoft\Windows\PowerShell\ScheduledJobs\&lt;JobName&gt;\Output\&lt;Timestamp&gt; directories on the computer on which the job is created. To see the execution history, use the Get-Job cmdlet. To get the job results, use the Receive-Job cmdlet.
</maml:para>
<maml:para>The MaxResultCount parameter sets the value of the ExecutionHistoryLength property of the scheduled job.
</maml:para>
<maml:para>To delete the current execution history and job results, use the ClearExecutionHistory parameter of the Set-ScheduledJob cmdlet.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
<dev:type><maml:name>Int32</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>RunAs32</maml:name>
<maml:Description><maml:para>Runs the scheduled job in a 32-bit process.
</maml:para>
</maml:Description>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>RunEvery</maml:name>
<maml:Description><maml:para>@{Text=}
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">TimeSpan</command:parameterValue>
<dev:type><maml:name>TimeSpan</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>RunNow</maml:name>
<maml:Description><maml:para>Starts a job immediately, as soon as the Register-ScheduledJob cmdlet is run. This parameter eliminates the need to trigger Task Scheduler to run a Windows PowerShell script immediately after registration, and does not require users to create a trigger that specifies a starting date and time.
</maml:para>
</maml:Description>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>ScheduledJobOption</maml:name>
<maml:Description><maml:para>Sets options for the scheduled job. Enter a ScheduledJobOptions object, such as one that you create by using the New-ScheduledJobOption cmdlet, or a hash table value.
</maml:para>
<maml:para>You can set options for a scheduled job when you register the schedule job or use the Set-ScheduledJobOption or Set-ScheduledJob cmdlets to change the options.
</maml:para>
<maml:para>Many of the options and their default values determine whether and when a scheduled job runs. Be sure to review these options before scheduling a job. For a description of the scheduled job options, including the default values, see New-ScheduledJobOption.
</maml:para>
<maml:para>To submit a hash table, use the following keys. In the following hash table, the keys are shown with their default values.
</maml:para>
<maml:para>`@{StartIfOnBattery=$False; StopIfGoingOnBattery=$True; WakeToRun=$False; StartIfNotIdle=$False; IdleDuration="00:10:00"; IdleTimeout="01:00:00"; StopIfGoingOffIdle=$True; RestartOnIdleResume=$False; ShowInTaskScheduler=$True; RunElevated=$False; RunWithoutNetwork=$False; DoNotAllowDemandStart=$False; MultipleInstancePolicy=IgnoreNew}`
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">ScheduledJobOptions</command:parameterValue>
<dev:type><maml:name>ScheduledJobOptions</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>Trigger</maml:name>
<maml:Description><maml:para>Specifies the triggers for the scheduled job. Enter one or more ScheduledJobTrigger objects, such as the objects that the New-JobTrigger cmdlet returns, or a hash table of job trigger keys and values.
</maml:para>
<maml:para>A job trigger starts the schedule job. The trigger can specify a one-time or recurring scheduled or an event, such as when a user logs on or Windows starts.
</maml:para>
<maml:para>The Trigger parameter is optional. You can add a trigger when you create the scheduled job, use the Add-JobTrigger, Set-JobTrigger, or Set-ScheduledJob cmdlets to add or change job triggers later, or use the Start-Job cmdlet to start the scheduled job immediately. You can also create and maintain a scheduled job without a trigger that is used as a template.
</maml:para>
<maml:para>To submit a hash table, use the following keys: 
</maml:para>
<maml:para>`@{Frequency="Once"` (or Daily, Weekly, AtStartup, AtLogon); `At="3am"` (or any valid time string);  `DaysOfWeek="Monday", "Wednesday"` (or any combination of day names);  `Interval=2` (or any valid frequency interval);  `RandomDelay="30minutes"` (or any valid timespan string);  `User="Domain1\User01"` (or any valid user; used only with the AtLogon frequency value) }
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">ScheduledJobTrigger[]</command:parameterValue>
<dev:type><maml:name>ScheduledJobTrigger[]</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="wi"><maml:name>WhatIf</maml:name>
<maml:Description><maml:para>Shows what would happen if the cmdlet runs. The cmdlet is not run.
</maml:para>
</maml:Description>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
</command:syntaxItem>
</command:syntax>
<command:parameters><command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>ArgumentList</maml:name>
<maml:Description><maml:para>Specifies values for the parameters of the script that is specified by the FilePath parameter or for the command that is specified by the ScriptBlock parameter.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">Object[]</command:parameterValue>
<dev:type><maml:name>Object[]</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>Authentication</maml:name>
<maml:Description><maml:para>Specifies the mechanism that is used to authenticate the user's credentials. The acceptable values for this parameter are:
</maml:para>
<maml:para>- Default
</maml:para>
<maml:para>- Basic
</maml:para>
<maml:para>- Credssp
</maml:para>
<maml:para>- Digest
</maml:para>
<maml:para>- Kerberos
</maml:para>
<maml:para>- Negotiate
</maml:para>
<maml:para>- NegotiateWithImplicitCredential
</maml:para>
<maml:para>
</maml:para>
<maml:para>The default value is Default. For information about the values of this parameter, see AuthenticationMechanism Enumerationhttps://msdn.microsoft.com/en-us/library/system.management.automation.runspaces.authenticationmechanism(v=vs.85).aspx in MSDN.
</maml:para>
<maml:para>Caution: Credential Security Service Provider (CredSSP) authentication, in which the user's credentials are passed to a remote computer to be authenticated, is designed for commands that require authentication on more than one resource, such as accessing a remote network share. This mechanism increases the security risk of the remote operation. If the remote computer is compromised, the credentials that are passed to it can be used to control the network session.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">AuthenticationMechanism</command:parameterValue>
<dev:type><maml:name>AuthenticationMechanism</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="cf"><maml:name>Confirm</maml:name>
<maml:Description><maml:para>Prompts you for confirmation before running the cmdlet.
</maml:para>
</maml:Description>
<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>Credential</maml:name>
<maml:Description><maml:para>Specifies a user account that has permission to run the scheduled job. The default is the current user.
</maml:para>
<maml:para>Type a user name, such as User01 or Domain01\User01, or enter a PSCredential object, such as one from the Get-Credential cmdlet. If you enter only a user name, you are prompted for a password.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
<dev:type><maml:name>PSCredential</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="1" aliases="none"><maml:name>FilePath</maml:name>
<maml:Description><maml:para>Specifies a script that the scheduled job runs. Enter the path to a .ps1 file on the local computer. To specify default values for the script parameters, use the ArgumentList parameter. Every Register-ScheduledJob command must use either the ScriptBlock or FilePath parameters.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
<dev:type><maml:name>String</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>InitializationScript</maml:name>
<maml:Description><maml:para>Specifies the fully qualified path to a Windows PowerShell script (.ps1). The initialization script runs in the session that is created for the background job before the commands that are specified by the ScriptBlock parameter or the script that is specified by the FilePath parameter. You can use the initialization script to configure the session, such as adding files, functions, or aliases, creating directories, or checking for prerequisites.
</maml:para>
<maml:para>To specify a script that runs the primary job commands, use the FilePath parameter.
</maml:para>
<maml:para>If the initialization script generates an error (even a non-terminating error), the current instance of the scheduled job does not run and its status is Failed.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">ScriptBlock</command:parameterValue>
<dev:type><maml:name>ScriptBlock</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>MaxResultCount</maml:name>
<maml:Description><maml:para>Specifies how many job result entries are maintained for the scheduled job. The default value is 32.
</maml:para>
<maml:para>Windows PowerShell saves the execution history and results of each triggered instance of the scheduled job on disk. The value of this parameter determines the number of job instance results that are saved for this scheduled job. When the number of job instance results exceeds this value, Windows PowerShell deletes the results of the oldest job instance to make room for the results of the newest job instance.
</maml:para>
<maml:para>The job execution history and job results are saved in the $home\AppData\Local\Microsoft\Windows\PowerShell\ScheduledJobs\&lt;JobName&gt;\Output\&lt;Timestamp&gt; directories on the computer on which the job is created. To see the execution history, use the Get-Job cmdlet. To get the job results, use the Receive-Job cmdlet.
</maml:para>
<maml:para>The MaxResultCount parameter sets the value of the ExecutionHistoryLength property of the scheduled job.
</maml:para>
<maml:para>To delete the current execution history and job results, use the ClearExecutionHistory parameter of the Set-ScheduledJob cmdlet.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
<dev:type><maml:name>Int32</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="0" aliases="none"><maml:name>Name</maml:name>
<maml:Description><maml:para>Specifies a name for the scheduled job. The name is also used for all started instances of the scheduled job. The name must be unique on the computer. This parameter is required.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
<dev:type><maml:name>String</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>RunAs32</maml:name>
<maml:Description><maml:para>Runs the scheduled job in a 32-bit process.
</maml:para>
</maml:Description>
<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>RunEvery</maml:name>
<maml:Description><maml:para>@{Text=}
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">TimeSpan</command:parameterValue>
<dev:type><maml:name>TimeSpan</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>RunNow</maml:name>
<maml:Description><maml:para>Starts a job immediately, as soon as the Register-ScheduledJob cmdlet is run. This parameter eliminates the need to trigger Task Scheduler to run a Windows PowerShell script immediately after registration, and does not require users to create a trigger that specifies a starting date and time.
</maml:para>
</maml:Description>
<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>ScheduledJobOption</maml:name>
<maml:Description><maml:para>Sets options for the scheduled job. Enter a ScheduledJobOptions object, such as one that you create by using the New-ScheduledJobOption cmdlet, or a hash table value.
</maml:para>
<maml:para>You can set options for a scheduled job when you register the schedule job or use the Set-ScheduledJobOption or Set-ScheduledJob cmdlets to change the options.
</maml:para>
<maml:para>Many of the options and their default values determine whether and when a scheduled job runs. Be sure to review these options before scheduling a job. For a description of the scheduled job options, including the default values, see New-ScheduledJobOption.
</maml:para>
<maml:para>To submit a hash table, use the following keys. In the following hash table, the keys are shown with their default values.
</maml:para>
<maml:para>`@{StartIfOnBattery=$False; StopIfGoingOnBattery=$True; WakeToRun=$False; StartIfNotIdle=$False; IdleDuration="00:10:00"; IdleTimeout="01:00:00"; StopIfGoingOffIdle=$True; RestartOnIdleResume=$False; ShowInTaskScheduler=$True; RunElevated=$False; RunWithoutNetwork=$False; DoNotAllowDemandStart=$False; MultipleInstancePolicy=IgnoreNew}`
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">ScheduledJobOptions</command:parameterValue>
<dev:type><maml:name>ScheduledJobOptions</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="1" aliases="none"><maml:name>ScriptBlock</maml:name>
<maml:Description><maml:para>Specifies the commands that the scheduled job runs. Enclose the commands in braces ( { } ) to create a script block. To specify default values for command parameters, use the ArgumentList parameter.
</maml:para>
<maml:para>Every Register-ScheduledJob command must use either the ScriptBlock or FilePath parameters.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">ScriptBlock</command:parameterValue>
<dev:type><maml:name>ScriptBlock</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>Trigger</maml:name>
<maml:Description><maml:para>Specifies the triggers for the scheduled job. Enter one or more ScheduledJobTrigger objects, such as the objects that the New-JobTrigger cmdlet returns, or a hash table of job trigger keys and values.
</maml:para>
<maml:para>A job trigger starts the schedule job. The trigger can specify a one-time or recurring scheduled or an event, such as when a user logs on or Windows starts.
</maml:para>
<maml:para>The Trigger parameter is optional. You can add a trigger when you create the scheduled job, use the Add-JobTrigger, Set-JobTrigger, or Set-ScheduledJob cmdlets to add or change job triggers later, or use the Start-Job cmdlet to start the scheduled job immediately. You can also create and maintain a scheduled job without a trigger that is used as a template.
</maml:para>
<maml:para>To submit a hash table, use the following keys: 
</maml:para>
<maml:para>`@{Frequency="Once"` (or Daily, Weekly, AtStartup, AtLogon); `At="3am"` (or any valid time string);  `DaysOfWeek="Monday", "Wednesday"` (or any combination of day names);  `Interval=2` (or any valid frequency interval);  `RandomDelay="30minutes"` (or any valid timespan string);  `User="Domain1\User01"` (or any valid user; used only with the AtLogon frequency value) }
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">ScheduledJobTrigger[]</command:parameterValue>
<dev:type><maml:name>ScheduledJobTrigger[]</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="wi"><maml:name>WhatIf</maml:name>
<maml:Description><maml:para>Shows what would happen if the cmdlet runs. The cmdlet is not run.
</maml:para>
</maml:Description>
<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
</command:parameters>
<command:inputTypes><command:inputType><dev:type><maml:name>None</maml:name>
</dev:type>
<maml:description><maml:para>You cannot pipe input to this cmdlet.
</maml:para>
</maml:description>
</command:inputType>
</command:inputTypes>
<command:returnValues><command:returnValue><dev:type><maml:name>Microsoft.PowerShell.ScheduledJob.ScheduledJobDefinition</maml:name>
</dev:type>
<maml:description><maml:para>
</maml:para>
</maml:description>
</command:returnValue>
</command:returnValues>
<maml:alertSet><maml:alert><maml:para>* Each scheduled job is saved in a subdirectory of the $home\AppData\Local\Microsoft\Windows\PowerShell\ScheduledJobs directory on the local computer. The subdirectory is named for the scheduled job and contains an XML file for the scheduled job and records of its execution history. For more information about scheduled jobs on disk, see about_Scheduled_Jobs_Advanced.
</maml:para>
<maml:para>* Scheduled jobs that you create in Windows PowerShell appear in Task Scheduler in the Task Scheduler Library\Microsoft\Windows\PowerShell\ScheduledJobs folder. You can use Task Scheduler to view and edit the scheduled job.
</maml:para>
<maml:para>* You can use Task Scheduler, the SchTasks.exe command-line tool, and the Task Scheduler cmdlets to manage scheduled jobs that you create with the Scheduled Job cmdlets. However, you cannot use the Scheduled Job cmdlets to manage tasks that you create in Task Scheduler.
</maml:para>
<maml:para>* If a scheduled job command fails, Windows PowerShell returns an error message. However, if the job fails when Task Scheduler tries to run it, the error is not available to Windows PowerShell.
</maml:para>
<maml:para>
</maml:para>
<maml:para>  If a scheduled job does not run, use the following methods to find the reason.
</maml:para>
<maml:para>- Verify that the job trigger is set properly.  -- Verify that the conditions set in the job options are satisfied. - Verify that the user account under which the job runs has permission to run the commands or scripts in the job. 
</maml:para>
<maml:para>- Check the Task Scheduler history for errors
</maml:para>
<maml:para>- Check the Task Scheduler event log for errors.
</maml:para>
<maml:para>
</maml:para>
<maml:para>For more information, see about_Scheduled_Jobs_Troubleshooting.
</maml:para>
</maml:alert>
</maml:alertSet>
<command:examples><command:example><maml:title>Example 1: Create a scheduled job</maml:title>
<dev:code>PS C:\&gt;Register-ScheduledJob -Name "Archive-Scripts" -ScriptBlock { dir $home\*.ps1 -Recurse | Copy-Item -Destination "\\Server\Share\PSScriptArchive" }</dev:code>
<dev:remarks><maml:para>This command creates the Archive-Scripts scheduled job. The ScriptBlock parameter value contains a command that searches the $home directory recursively for .ps1 files and copies them to a directory in a file share.
</maml:para>
<maml:para>Because the scheduled job does not contain a trigger, it is not started automatically. You can use add job triggers later, use the Start-Job cmdlet to start the job on demand, or use the scheduled job as a template for other scheduled jobs.
</maml:para>
</dev:remarks>
</command:example>
<command:example><maml:title>Example 2: Create a scheduled job with triggers and custom options</maml:title>
<dev:code>The first command uses the New-ScheduledJobOption cmdlet to create a job option object, which it saves in the $O parameter. The options start the scheduled job even if the computer is not idle, wake the computer to run the job, if necessary, and allows multiple instances of the job to run in a series.
PS C:\&gt;$O = New-ScheduledJobOption -WakeToRun -StartIfNotIdle -MultipleInstancesPolicy Queue


The second command uses the New-JobTrigger cmdlet to create job trigger that starts a job every other Monday at 9:00 PM.
PS C:\&gt;$T = New-JobTrigger -Weekly -At "9:00 PM" -DaysOfWeek Monday -WeeksInterval 2

This command creates the UpdateVersion scheduled job, which runs the UpdateVersion.ps1 script every Monday at 9:00 p.m. The command uses the *FilePath* parameter to specify the script that the job runs. It uses the *Trigger* parameter to specify the job triggers in the $T variable and the *ScheduledJobOption* parameter to specify the option object in the $O variable.
PS C:\&gt;Register-ScheduledJob -Name "UpdateVersion" -FilePath "\\Srv01\Scripts\UpdateVersion.ps1" -Trigger $T -ScheduledJobOption $O</dev:code>
<dev:remarks><maml:para>This example shows how to create a scheduled job that has a job trigger and custom job options.
</maml:para>
</dev:remarks>
</command:example>
<command:example><maml:title>Example 3: Use hash tables to specify a trigger and job options</maml:title>
<dev:code>PS C:\&gt;Register-ScheduledJob -FilePath "\\Srv01\Scripts\Update-Version.ps1" -Trigger @{Frequency=Weekly; At="9:00PM"; DaysOfWeek="Monday"; Interval=2} -ScheduledJobOption @{WakeToRun; StartIfNotIdle; MultipleInstancesPolicy="Queue"}</dev:code>
<dev:remarks><maml:para>This command is has the same effect as the command in Example 2. It creates a scheduled job, but it uses hash tables to specify the values of the Trigger and ScheduledJobOption parameters.
</maml:para>
</dev:remarks>
</command:example>
<command:example><maml:title>Example 4: Create scheduled jobs on remote computers</maml:title>
<dev:code>PS C:\&gt;Invoke-Command -ComputerName (Get-Content Servers.txt) -ScriptBlock {Register-ScheduledJob -Name "Get-EnergyData" -FilePath "\\Srv01\Scripts\Get-EnergyData.ps1" -ScheduledJobOption $O -Trigger $T } -Credential $Cred</dev:code>
<dev:remarks><maml:para>This command creates the EnergyData scheduled job on multiple remote computers. The scheduled job runs a script that gathers raw data and saves it in a running log. The scheduled jobs are created on the remote computer, run on the remote computer, and store their results on the remote computer.
</maml:para>
<maml:para>The command uses the Invoke-Command cmdlet to run a Register-ScheduledJob command on the computers in the Servers.txt file. The Invoke-Command command uses the Credential parameter to provide the credentials of a user that has permission to create scheduled jobs on the computers in the Servers.txt file.
</maml:para>
<maml:para>The Register-ScheduledJob command creates a scheduled job on the remote computer that runs the EnergyData.ps1 script on the scheduled specified by the job trigger in the $T variable. The script is located on a file server that is available to all participating computers.
</maml:para>
</dev:remarks>
</command:example>
<command:example><maml:title>Example 5: Create a scheduled job that runs a script on remote computers</maml:title>
<dev:code>PS C:\&gt;Register-ScheduledJob -Name "CollectEnergyData -Trigger $T -MaxResultCount 99 -ScriptBlock { Invoke-Command -AsJob -ComputerName (Servers.txt) -FilePath "\\Srv01\Scripts\Get-EnergyData.ps1" -Credential $Admin -Authentication CredSSP }</dev:code>
<dev:remarks><maml:para>This command uses the Register-ScheduledJob cmdlet to create the CollectEnergyData scheduled job on the local computer. The command uses the Trigger parameter to specify the job schedule and the MaxResultCount parameter to increase the number of saved results to 99.
</maml:para>
<maml:para>The CollectEnergyData job uses the Invoke-Command cmdlet to run the EnergyData.ps1 script as a background on the computers listed in the Servers.txt file. The Invoke-Command command uses the AsJob parameter to create the background job object on the local computer, even though the Energydata.ps1 script runs on the remote computers. The command uses the Credential parameter to specify a user account that has permission to run scripts on the remote computers and the Authentication parameter with a value of CredSSP to allow delegated credentials.
</maml:para>
</dev:remarks>
</command:example>
</command:examples>
<command:relatedLinks><maml:navigationLink><maml:linkText>Online Version:</maml:linkText>
<maml:uri>http://go.microsoft.com/fwlink/?LinkId=821702</maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Add-JobTrigger</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Disable-JobTrigger</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Disable-ScheduledJob</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Enable-JobTrigger</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Enable-ScheduledJob</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Get-JobTrigger</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Get-ScheduledJob</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Get-ScheduledJobOption</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>New-JobTrigger</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>New-ScheduledJobOption</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Register-ScheduledJob</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Remove-JobTrigger</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Set-JobTrigger</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Set-ScheduledJob</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Set-ScheduledJobOption</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Unregister-ScheduledJob</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
</command:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
<command:details><command:name>Remove-JobTrigger</command:name>
<command:verb>Remove</command:verb>
<command:noun>JobTrigger</command:noun>
<maml:description><maml:para>Delete job triggers from scheduled jobs.
</maml:para>
</maml:description>
</command:details>
<maml:description><maml:para>The Remove-JobTrigger cmdlet deletes job triggers from scheduled jobs.
</maml:para>
<maml:para>A job trigger defines a recurring schedule or conditions for starting a scheduled job. To manage job triggers, use the New-JobTrigger, Add-JobTrigger, Set-JobTrigger, and Set-ScheduledJob cmdlets.
</maml:para>
<maml:para>Use the Name , ID , or InputObject parameters of Remove-JobTrigger to identify the scheduled jobs from which the triggers are removed. Use the TriggerID parameter to identify the job triggers to delete. By default, Remove-JobTrigger deletes all job triggers of a scheduled job. Remove-JobTrigger is one of a collection of job scheduling cmdlets in the PSScheduledJob module that is included in Windows PowerShell.
</maml:para>
<maml:para>For more information about Scheduled Jobs, see the About topics in the PSScheduledJob module. Import the PSScheduledJob module and then type: `Get-Help about_Scheduled*` or see about_Scheduled_Jobs.
</maml:para>
<maml:para>This cmdlet was introduced in Windows PowerShell 3.0.
</maml:para>
</maml:description>
<command:syntax><command:syntaxItem><maml:name>Remove-JobTrigger</maml:name>
<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="0" aliases="none"><maml:name>Id</maml:name>
<maml:Description><maml:para>Specifies the identification numbers of the scheduled jobs. Remove-JobTrigger deletes job triggers from the specified scheduled jobs.
</maml:para>
<maml:para>To get the identification number of scheduled jobs on the local computer or a remote computer, use the Get-ScheduledJob cmdlet.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">Int32[]</command:parameterValue>
<dev:type><maml:name>Int32[]</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>TriggerId</maml:name>
<maml:Description><maml:para>Deletes only the specified job triggers. By default, Remove-JobTrigger deletes all triggers from the scheduled jobs. Use this parameter when the scheduled jobs have multiple job triggers.
</maml:para>
<maml:para>Enter the trigger IDs of one or more job triggers of a scheduled job. If you specify multiple scheduled jobs, Remove-JobTrigger deletes the job trigger with the specified ID from all scheduled jobs.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">Int32[]</command:parameterValue>
<dev:type><maml:name>Int32[]</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
</command:syntaxItem>
<command:syntaxItem><maml:name>Remove-JobTrigger</maml:name>
<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByValue)" position="0" aliases="none"><maml:name>InputObject</maml:name>
<maml:Description><maml:para>Specifies the scheduled jobs. Enter a variable that contains ScheduledJob objects or type a command or expression that gets ScheduledJob objects, such as a Get-ScheduledJob command. You can also pipe ScheduledJob objects to Remove-JobTrigger .
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">ScheduledJobDefinition[]</command:parameterValue>
<dev:type><maml:name>ScheduledJobDefinition[]</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>TriggerId</maml:name>
<maml:Description><maml:para>Deletes only the specified job triggers. By default, Remove-JobTrigger deletes all triggers from the scheduled jobs. Use this parameter when the scheduled jobs have multiple job triggers.
</maml:para>
<maml:para>Enter the trigger IDs of one or more job triggers of a scheduled job. If you specify multiple scheduled jobs, Remove-JobTrigger deletes the job trigger with the specified ID from all scheduled jobs.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">Int32[]</command:parameterValue>
<dev:type><maml:name>Int32[]</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
</command:syntaxItem>
<command:syntaxItem><maml:name>Remove-JobTrigger</maml:name>
<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="0" aliases="none"><maml:name>Name</maml:name>
<maml:Description><maml:para>Specifies the names of the scheduled jobs. Remove-JobTrigger deletes the job triggers from the specified scheduled jobs. Wildcards are supported.
</maml:para>
<maml:para>To get the names of scheduled jobs on the local computer or a remote computer, use the Get-ScheduledJob cmdlet.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
<dev:type><maml:name>String[]</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>TriggerId</maml:name>
<maml:Description><maml:para>Deletes only the specified job triggers. By default, Remove-JobTrigger deletes all triggers from the scheduled jobs. Use this parameter when the scheduled jobs have multiple job triggers.
</maml:para>
<maml:para>Enter the trigger IDs of one or more job triggers of a scheduled job. If you specify multiple scheduled jobs, Remove-JobTrigger deletes the job trigger with the specified ID from all scheduled jobs.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">Int32[]</command:parameterValue>
<dev:type><maml:name>Int32[]</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
</command:syntaxItem>
</command:syntax>
<command:parameters><command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="0" aliases="none"><maml:name>Id</maml:name>
<maml:Description><maml:para>Specifies the identification numbers of the scheduled jobs. Remove-JobTrigger deletes job triggers from the specified scheduled jobs.
</maml:para>
<maml:para>To get the identification number of scheduled jobs on the local computer or a remote computer, use the Get-ScheduledJob cmdlet.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">Int32[]</command:parameterValue>
<dev:type><maml:name>Int32[]</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByValue)" position="0" aliases="none"><maml:name>InputObject</maml:name>
<maml:Description><maml:para>Specifies the scheduled jobs. Enter a variable that contains ScheduledJob objects or type a command or expression that gets ScheduledJob objects, such as a Get-ScheduledJob command. You can also pipe ScheduledJob objects to Remove-JobTrigger .
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">ScheduledJobDefinition[]</command:parameterValue>
<dev:type><maml:name>ScheduledJobDefinition[]</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="0" aliases="none"><maml:name>Name</maml:name>
<maml:Description><maml:para>Specifies the names of the scheduled jobs. Remove-JobTrigger deletes the job triggers from the specified scheduled jobs. Wildcards are supported.
</maml:para>
<maml:para>To get the names of scheduled jobs on the local computer or a remote computer, use the Get-ScheduledJob cmdlet.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
<dev:type><maml:name>String[]</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>TriggerId</maml:name>
<maml:Description><maml:para>Deletes only the specified job triggers. By default, Remove-JobTrigger deletes all triggers from the scheduled jobs. Use this parameter when the scheduled jobs have multiple job triggers.
</maml:para>
<maml:para>Enter the trigger IDs of one or more job triggers of a scheduled job. If you specify multiple scheduled jobs, Remove-JobTrigger deletes the job trigger with the specified ID from all scheduled jobs.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">Int32[]</command:parameterValue>
<dev:type><maml:name>Int32[]</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
</command:parameters>
<command:inputTypes><command:inputType><dev:type><maml:name>Microsoft.PowerShell.ScheduledJob.ScheduledJobDefinition</maml:name>
</dev:type>
<maml:description><maml:para>You can pipe scheduled jobs to the Remove-JobTrigger cmdlet.
</maml:para>
</maml:description>
</command:inputType>
</command:inputTypes>
<command:returnValues><command:returnValue><dev:type><maml:name>None</maml:name>
</dev:type>
<maml:description><maml:para>The cmdlet does not generate any output.
</maml:para>
</maml:description>
</command:returnValue>
</command:returnValues>
<maml:alertSet><maml:alert><maml:para>
</maml:para>
</maml:alert>
</maml:alertSet>
<command:examples><command:example><maml:title>Example 1: Delete all job triggers</maml:title>
<dev:code>PS C:\&gt;Remove-JobTrigger -Name "Test*"</dev:code>
<dev:remarks><maml:para>This command deletes all job triggers from scheduled job that have names that begin with Test.
</maml:para>
</dev:remarks>
</command:example>
<command:example><maml:title>Example 2: Delete selected job triggers</maml:title>
<dev:code>PS C:\&gt;Remove-JobTrigger -Name "BackupArchive" -TriggerID 3</dev:code>
<dev:remarks><maml:para>This command deletes only the third trigger (ID = 3) from the BackupArchive scheduled job.
</maml:para>
</dev:remarks>
</command:example>
<command:example><maml:title>Example 3: Delete AtStartup job triggers from all scheduled jobs</maml:title>
<dev:code>PS C:\&gt;function Delete-AtStartup
{
    Get-ScheduledJob | Get-JobTrigger | Where-Object {$_.Frequency -eq "AtStartup"} | ForEach-Object { Remove-JobTrigger -InputObject $_.JobDefinition -TriggerID $_.ID}
}</dev:code>
<dev:remarks><maml:para>This function deletes all AtStartup job triggers from all jobs on the local computer. To use the function, run the function in your session and then type `Delete-AtStartup`.
</maml:para>
<maml:para>The Delete-AtStartup function contains a single command. The command uses the Get-ScheduledJob cmdlet to get the scheduled jobs on the local computer. A pipeline operator (|) sends the scheduled jobs to the Get-JobTrigger cmdlet, which gets all of the job triggers from each of the scheduled jobs. A pipeline operator sends the job triggers to the Where-Object cmdlet, which selects job triggers where the value of the Frequency property of the job trigger equals AtStartup. JobTrigger objects have a JobDefinition property that contains the scheduled job that they trigger. The remainder of the command uses that valuable feature.
</maml:para>
<maml:para>A pipeline operator sends the AtStartup job triggers to the ForEach-Object cmdlet, which runs a Remove-JobTrigger command on each AtStartup trigger. The value of the InputObject parameter of Remove-JobTrigger is the scheduled job in the JobDefinition property of the job trigger. The value of the TriggerID parameter is the identifier in the ID property of the job trigger.
</maml:para>
</dev:remarks>
</command:example>
<command:example><maml:title>Example 4: Delete a job trigger from a remote scheduled job</maml:title>
<dev:code>PS C:\&gt;Invoke-Command -ComputerName "Server01" { Remove-JobTrigger -ID 38 -TriggerID 1 }</dev:code>
<dev:remarks><maml:para>This command deletes the first job trigger from the Inventory job on the Server01 computer.
</maml:para>
<maml:para>The command uses the Invoke-Command cmdlet to run the Remove-JobTrigger cmdlet on the Server01 computer. The Remove-JobTrigger cmdlet uses the ID parameter to identify the Inventory scheduled job and the TriggerID parameter to specify the first trigger. The ID parameter is especially useful when multiple scheduled jobs have the same or similar names.
</maml:para>
</dev:remarks>
</command:example>
</command:examples>
<command:relatedLinks><maml:navigationLink><maml:linkText>Online Version:</maml:linkText>
<maml:uri>http://go.microsoft.com/fwlink/?LinkId=821703</maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Add-JobTrigger</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Disable-JobTrigger</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Disable-ScheduledJob</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Enable-JobTrigger</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Enable-ScheduledJob</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Get-JobTrigger</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Get-ScheduledJob</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Get-ScheduledJobOption</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>New-JobTrigger</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>New-ScheduledJobOption</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Register-ScheduledJob</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Remove-JobTrigger</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Set-JobTrigger</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Set-ScheduledJob</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Set-ScheduledJobOption</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Unregister-ScheduledJob</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
</command:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
<command:details><command:name>Set-JobTrigger</command:name>
<command:verb>Set</command:verb>
<command:noun>JobTrigger</command:noun>
<maml:description><maml:para>Changes the job trigger of a scheduled job.
</maml:para>
</maml:description>
</command:details>
<maml:description><maml:para>The Set-JobTrigger cmdlet changes the properties of the job triggers of scheduled jobs. You can use it to change the time or frequency at which the jobs start or to change from a time-based schedules to schedules that are triggered by a logon or startup.
</maml:para>
<maml:para>A job trigger defines a recurring schedule or conditions for starting a scheduled job. Although job triggers are not saved to disk, you can change the job triggers of scheduled jobs, which are saved to disk.
</maml:para>
<maml:para>To change a job trigger of a scheduled job, begin by using the Get-JobTrigger cmdlet to get the job trigger of a scheduled job. Then, pipe the trigger to Set-JobTrigger or save the trigger in a variable and use the InputObject parameter of Set-JobTrigger cmdlet to identify the trigger. Use the remaining parameters of Set-JobTrigger to change the job trigger.
</maml:para>
<maml:para>When you change the type of a job trigger, such as changing a job trigger from a daily or weekly trigger to an AtLogon trigger, the original trigger properties are deleted. However, if you change the values of the trigger, but not its type, such as changing the days in a weekly trigger, only the properties that you specify are changed. All other properties of the original job trigger are retained. Set-JobTrigger is one of a collection of job scheduling cmdlets in the PSScheduledJob module that is included in Windows PowerShell.
</maml:para>
<maml:para>For more information about Scheduled Jobs, see the About topics in the PSScheduledJob module. Import the PSScheduledJob module and then type: `Get-Help about_Scheduled*`  or see about_Scheduled_Jobs.
</maml:para>
<maml:para>This cmdlet was introduced in Windows PowerShell 3.0.
</maml:para>
</maml:description>
<command:syntax><command:syntaxItem><maml:name>Set-JobTrigger</maml:name>
<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByValue)" position="0" aliases="none"><maml:name>InputObject</maml:name>
<maml:Description><maml:para>Specifies the job triggers. Enter a variable that contains ScheduledJobTrigger objects or type a command or expression that gets ScheduledJobTrigger objects, such as a Get-JobTrigger command. You can also pipe a ScheduledJobTrigger object to Set-JobTrigger .
</maml:para>
<maml:para>If you specify multiple job triggers, Set-JobTrigger makes the same changes to all job triggers.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">ScheduledJobTrigger[]</command:parameterValue>
<dev:type><maml:name>ScheduledJobTrigger[]</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>At</maml:name>
<maml:Description><maml:para>Starts the job at the specified date and time. Enter a DateTime object, such as one that the Get-Date cmdlet returns, or a string that can be converted to a time, such as "April 19, 2012 15:00", "12/31/2013 9:00 PM", or "3am".
</maml:para>
<maml:para>If you don't specify an element of the DateTime object, such as seconds, that element of the job trigger is not changed. If the original job trigger didn't include a DateTime object and you omit an element, the job trigger is created with the corresponding element from the current date and time.
</maml:para>
<maml:para>When using the Once parameter, set the value of the At parameter to a particular date and time. Because the default date in a DateTime object is the current date, setting a time before the current time without an explicit date results in a job trigger for a time in the past. DateTime objects, and strings that are converted to DateTime objects, are automatically adjusted to be compatible with the date and time formats selected for the local computer in Region and Language in Control Panel.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">DateTime</command:parameterValue>
<dev:type><maml:name>DateTime</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>AtLogOn</maml:name>
<maml:Description><maml:para>Starts the scheduled job when the specified users log on to the computer. To specify a user, use the User parameter.
</maml:para>
</maml:Description>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>AtStartup</maml:name>
<maml:Description><maml:para>Starts the scheduled job when Windows starts.
</maml:para>
</maml:Description>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>Daily</maml:name>
<maml:Description><maml:para>Specifies a recurring daily job schedule. Use the other parameters in the Daily parameter set to specify the schedule details.
</maml:para>
</maml:Description>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>DaysInterval</maml:name>
<maml:Description><maml:para>Specifies the number of days between occurrences on a daily schedule. For example, a value of 3 starts the scheduled job on days 1, 4, 7 and so on. The default value is 1.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
<dev:type><maml:name>Int32</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>DaysOfWeek</maml:name>
<maml:Description><maml:para>Specifies the days of the week on which a weekly scheduled job runs. Enter day names, such as Monday, Thursday, integers 0-6, where 0 represents Sunday, or an asterisk (*) to represent every day. This parameter is required in the Weekly parameter set.
</maml:para>
<maml:para>Day names are converted to their integer values in the job trigger. When you enclose day names in quotation marks in a command, enclose each day name in separate quotation marks, such as "Monday", "Tuesday". If you enclose multiple day names in a single quotation mark pair, the corresponding integer values are summed. For example, "Monday, Tuesday" (1, 2) results in a value of "Wednesday" (3).
</maml:para>
</maml:Description>
<command:parameterValueGroup><command:parameterValue required="false" variableLength="false">Sunday</command:parameterValue>
<command:parameterValue required="false" variableLength="false">Monday</command:parameterValue>
<command:parameterValue required="false" variableLength="false">Tuesday</command:parameterValue>
<command:parameterValue required="false" variableLength="false">Wednesday</command:parameterValue>
<command:parameterValue required="false" variableLength="false">Thursday</command:parameterValue>
<command:parameterValue required="false" variableLength="false">Friday</command:parameterValue>
<command:parameterValue required="false" variableLength="false">Saturday</command:parameterValue>
</command:parameterValueGroup>
<command:parameterValue required="true" variableLength="false">DayOfWeek[]</command:parameterValue>
<dev:type><maml:name>DayOfWeek[]</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>Once</maml:name>
<maml:Description><maml:para>Specifies a non-recurring (one time) schedule.
</maml:para>
</maml:Description>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>PassThru</maml:name>
<maml:Description><maml:para>Returns the job triggers that changed. By default, this cmdlet does not generate any output.
</maml:para>
</maml:Description>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>RandomDelay</maml:name>
<maml:Description><maml:para>Enables a random delay that begins at the scheduled start time, and sets the maximum delay value. The length of the delay is set pseudo-randomly for each start and varies from no delay to the time specified by the value of this parameter. The default value, zero (00:00:00), disables the random delay.
</maml:para>
<maml:para>Enter a timespan object, such as one returned by the New-TimeSpan cmdlet, or enter a value in &lt;hours&gt;:&lt;minutes&gt;:&lt;seconds&gt; format, which is automatically converted to a timespan object.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">TimeSpan</command:parameterValue>
<dev:type><maml:name>TimeSpan</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>RepeatIndefinitely</maml:name>
<maml:Description><maml:para>This parameter, available starting in Windows PowerShell 4.0, eliminates the necessity of specifying a TimeSpan.MaxValue value for the RepetitionDuration parameter to run a scheduled job repeatedly, for an indefinite period.
</maml:para>
</maml:Description>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>RepetitionDuration</maml:name>
<maml:Description><maml:para>Repeats the job until the specified time expires. The repetition frequency is determined by the value of the RepetitionInterval parameter. For example, if the value of RepetitionInterval is 5 minutes and the value of RepetitionDuration is 2 hours, the job is triggered every five minutes for two hours.
</maml:para>
<maml:para>Enter a timespan object, such as one that the New-TimeSpan cmdlet returns or a string that can be converted to a timespan object, such as "1:05:30".
</maml:para>
<maml:para>To run a job indefinitely, add the RepeatIndefinitely parameter instead.
</maml:para>
<maml:para>To stop a job before the job trigger repetition duration expires, set the RepetitionDuration value to zero (0).
</maml:para>
<maml:para>To change the repetition duration or repetition interval of a Once job trigger, the command must include both the RepetitionInterval and RepetitionDuration parameters. To change the repetition duration or repetition intervals of other types of job triggers, the command must include the Once , At , RepetitionInterval and RepetitionDuration parameters.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">TimeSpan</command:parameterValue>
<dev:type><maml:name>TimeSpan</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>RepetitionInterval</maml:name>
<maml:Description><maml:para>Repeats the job at the specified time interval. For example, if the value of this parameter is 2 hours, the job is triggered every two hours. The default value, 0, does not repeat the job.
</maml:para>
<maml:para>Enter a timespan object, such as one that the New-TimeSpan cmdlet returns or a string that can be converted to a timespan object, such as "1:05:30".
</maml:para>
<maml:para>To change the repetition duration or repetition interval of a Once job trigger, the command must include both the RepetitionInterval and RepetitionDuration parameters. To change the repetition duration or repetition intervals of other types of job triggers, the command must include the Once , At , RepetitionInterval and RepetitionDuration parameters.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">TimeSpan</command:parameterValue>
<dev:type><maml:name>TimeSpan</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>User</maml:name>
<maml:Description><maml:para>Specifies the users who trigger an AtLogon start of a scheduled job. Enter the name of a user in &lt;UserName&gt; or &lt;Domain\Username&gt; format or enter an asterisk (*) to represent all users. The default value is all users.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
<dev:type><maml:name>String</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>Weekly</maml:name>
<maml:Description><maml:para>Specifies a recurring weekly job schedule. Use the other parameters in the Weekly parameter set to specify the schedule details.
</maml:para>
</maml:Description>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>WeeksInterval</maml:name>
<maml:Description><maml:para>Specifies the number of weeks between occurrences on a weekly job schedule. For example, a value of 3 starts the scheduled job on weeks 1, 4, 7 and so on. The default value is 1.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
<dev:type><maml:name>Int32</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
</command:syntaxItem>
</command:syntax>
<command:parameters><command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>At</maml:name>
<maml:Description><maml:para>Starts the job at the specified date and time. Enter a DateTime object, such as one that the Get-Date cmdlet returns, or a string that can be converted to a time, such as "April 19, 2012 15:00", "12/31/2013 9:00 PM", or "3am".
</maml:para>
<maml:para>If you don't specify an element of the DateTime object, such as seconds, that element of the job trigger is not changed. If the original job trigger didn't include a DateTime object and you omit an element, the job trigger is created with the corresponding element from the current date and time.
</maml:para>
<maml:para>When using the Once parameter, set the value of the At parameter to a particular date and time. Because the default date in a DateTime object is the current date, setting a time before the current time without an explicit date results in a job trigger for a time in the past. DateTime objects, and strings that are converted to DateTime objects, are automatically adjusted to be compatible with the date and time formats selected for the local computer in Region and Language in Control Panel.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">DateTime</command:parameterValue>
<dev:type><maml:name>DateTime</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>AtLogOn</maml:name>
<maml:Description><maml:para>Starts the scheduled job when the specified users log on to the computer. To specify a user, use the User parameter.
</maml:para>
</maml:Description>
<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>AtStartup</maml:name>
<maml:Description><maml:para>Starts the scheduled job when Windows starts.
</maml:para>
</maml:Description>
<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>Daily</maml:name>
<maml:Description><maml:para>Specifies a recurring daily job schedule. Use the other parameters in the Daily parameter set to specify the schedule details.
</maml:para>
</maml:Description>
<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>DaysInterval</maml:name>
<maml:Description><maml:para>Specifies the number of days between occurrences on a daily schedule. For example, a value of 3 starts the scheduled job on days 1, 4, 7 and so on. The default value is 1.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
<dev:type><maml:name>Int32</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>DaysOfWeek</maml:name>
<maml:Description><maml:para>Specifies the days of the week on which a weekly scheduled job runs. Enter day names, such as Monday, Thursday, integers 0-6, where 0 represents Sunday, or an asterisk (*) to represent every day. This parameter is required in the Weekly parameter set.
</maml:para>
<maml:para>Day names are converted to their integer values in the job trigger. When you enclose day names in quotation marks in a command, enclose each day name in separate quotation marks, such as "Monday", "Tuesday". If you enclose multiple day names in a single quotation mark pair, the corresponding integer values are summed. For example, "Monday, Tuesday" (1, 2) results in a value of "Wednesday" (3).
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">DayOfWeek[]</command:parameterValue>
<dev:type><maml:name>DayOfWeek[]</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByValue)" position="0" aliases="none"><maml:name>InputObject</maml:name>
<maml:Description><maml:para>Specifies the job triggers. Enter a variable that contains ScheduledJobTrigger objects or type a command or expression that gets ScheduledJobTrigger objects, such as a Get-JobTrigger command. You can also pipe a ScheduledJobTrigger object to Set-JobTrigger .
</maml:para>
<maml:para>If you specify multiple job triggers, Set-JobTrigger makes the same changes to all job triggers.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">ScheduledJobTrigger[]</command:parameterValue>
<dev:type><maml:name>ScheduledJobTrigger[]</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>Once</maml:name>
<maml:Description><maml:para>Specifies a non-recurring (one time) schedule.
</maml:para>
</maml:Description>
<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>PassThru</maml:name>
<maml:Description><maml:para>Returns the job triggers that changed. By default, this cmdlet does not generate any output.
</maml:para>
</maml:Description>
<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>RandomDelay</maml:name>
<maml:Description><maml:para>Enables a random delay that begins at the scheduled start time, and sets the maximum delay value. The length of the delay is set pseudo-randomly for each start and varies from no delay to the time specified by the value of this parameter. The default value, zero (00:00:00), disables the random delay.
</maml:para>
<maml:para>Enter a timespan object, such as one returned by the New-TimeSpan cmdlet, or enter a value in &lt;hours&gt;:&lt;minutes&gt;:&lt;seconds&gt; format, which is automatically converted to a timespan object.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">TimeSpan</command:parameterValue>
<dev:type><maml:name>TimeSpan</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>RepeatIndefinitely</maml:name>
<maml:Description><maml:para>This parameter, available starting in Windows PowerShell 4.0, eliminates the necessity of specifying a TimeSpan.MaxValue value for the RepetitionDuration parameter to run a scheduled job repeatedly, for an indefinite period.
</maml:para>
</maml:Description>
<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>RepetitionDuration</maml:name>
<maml:Description><maml:para>Repeats the job until the specified time expires. The repetition frequency is determined by the value of the RepetitionInterval parameter. For example, if the value of RepetitionInterval is 5 minutes and the value of RepetitionDuration is 2 hours, the job is triggered every five minutes for two hours.
</maml:para>
<maml:para>Enter a timespan object, such as one that the New-TimeSpan cmdlet returns or a string that can be converted to a timespan object, such as "1:05:30".
</maml:para>
<maml:para>To run a job indefinitely, add the RepeatIndefinitely parameter instead.
</maml:para>
<maml:para>To stop a job before the job trigger repetition duration expires, set the RepetitionDuration value to zero (0).
</maml:para>
<maml:para>To change the repetition duration or repetition interval of a Once job trigger, the command must include both the RepetitionInterval and RepetitionDuration parameters. To change the repetition duration or repetition intervals of other types of job triggers, the command must include the Once , At , RepetitionInterval and RepetitionDuration parameters.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">TimeSpan</command:parameterValue>
<dev:type><maml:name>TimeSpan</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>RepetitionInterval</maml:name>
<maml:Description><maml:para>Repeats the job at the specified time interval. For example, if the value of this parameter is 2 hours, the job is triggered every two hours. The default value, 0, does not repeat the job.
</maml:para>
<maml:para>Enter a timespan object, such as one that the New-TimeSpan cmdlet returns or a string that can be converted to a timespan object, such as "1:05:30".
</maml:para>
<maml:para>To change the repetition duration or repetition interval of a Once job trigger, the command must include both the RepetitionInterval and RepetitionDuration parameters. To change the repetition duration or repetition intervals of other types of job triggers, the command must include the Once , At , RepetitionInterval and RepetitionDuration parameters.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">TimeSpan</command:parameterValue>
<dev:type><maml:name>TimeSpan</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>User</maml:name>
<maml:Description><maml:para>Specifies the users who trigger an AtLogon start of a scheduled job. Enter the name of a user in &lt;UserName&gt; or &lt;Domain\Username&gt; format or enter an asterisk (*) to represent all users. The default value is all users.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
<dev:type><maml:name>String</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>Weekly</maml:name>
<maml:Description><maml:para>Specifies a recurring weekly job schedule. Use the other parameters in the Weekly parameter set to specify the schedule details.
</maml:para>
</maml:Description>
<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>WeeksInterval</maml:name>
<maml:Description><maml:para>Specifies the number of weeks between occurrences on a weekly job schedule. For example, a value of 3 starts the scheduled job on weeks 1, 4, 7 and so on. The default value is 1.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
<dev:type><maml:name>Int32</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
</command:parameters>
<command:inputTypes><command:inputType><dev:type><maml:name>Microsoft.PowerShell.ScheduledJob.ScheduledJobTrigger</maml:name>
</dev:type>
<maml:description><maml:para>You can pipe multiple job triggers to Set-JobTrigger .
</maml:para>
</maml:description>
</command:inputType>
</command:inputTypes>
<command:returnValues><command:returnValue><dev:type><maml:name>None or Microsoft.PowerShell.ScheduledJob.ScheduledJobTrigger</maml:name>
</dev:type>
<maml:description><maml:para>When you use the Passthru parameter, Set-JobTrigger returns the job triggers that were changed. Otherwise, this cmdlet does not generate any output.
</maml:para>
</maml:description>
</command:returnValue>
</command:returnValues>
<maml:alertSet><maml:alert><maml:para>* Job triggers have a JobDefintion property that associates them with the scheduled job. When you change the job trigger of a scheduled job, the job is changed. You do not need to use a Set-ScheduledJob command to apply the changed trigger to the scheduled job.
</maml:para>
</maml:alert>
</maml:alertSet>
<command:examples><command:example><maml:title>Example 1: Change the days in a job trigger</maml:title>
<dev:code>PS C:\&gt;Get-JobTrigger -Name "DeployPackage"
Id         Frequency       Time                   DaysOfWeek              Enabled
--         ---------       ----                   ----------              -------
1          Weekly          9/29/2011 12:00:00 AM  {Wednesday, Saturday}   True

The second command uses the Get-JobTrigger cmdlet to get the job trigger of the DeployPackage scheduled job. A pipeline operator (|) sends the trigger to the **Set-JobTrigger** cmdlet, which changes the job trigger so that it starts the DeployPackage job on Wednesdays and Sundays. The command uses the *Passthru* parameter to return the trigger after the change.
PS C:\&gt;Get-JobTrigger -Name "DeployPackage" | Set-JobTrigger -DaysOfWeek "Wednesday", "Sunday" -Passthru
Id         Frequency       Time                   DaysOfWeek              Enabled
--         ---------       ----                   ----------              -------
1          Weekly          9/29/2011 12:00:00 AM  {Wednesday, Sunday}     True</dev:code>
<dev:remarks><maml:para>This example shows how to change the days in a weekly job trigger.
</maml:para>
<maml:para>The first command uses the Get-JobTrigger cmdlet to get the job trigger of the DeployPackage scheduled job. The output shows that the trigger starts the job at midnight on Wednesdays and Saturdays.
</maml:para>
<maml:para>This command is not required; it is included only to show the effect of the trigger change.
</maml:para>
</dev:remarks>
</command:example>
<command:example><maml:title>Example 2: Change the job trigger type</maml:title>
<dev:code>PS C:\&gt;Get-JobTrigger -Name "Inventory"
Id         Frequency       Time                   DaysOfWeek              Enabled
--         ---------       ----                   ----------              -------
1          Daily           9/27/2011 11:00:00 PM                          True
2          AtStartup                                                      True

The second command uses the **Get-JobTrigger** cmdlet to get the *AtStartup* job trigger of the Inventory job. The command uses the *TriggerID* parameter to identify the job trigger. A pipeline operator (|) sends the job trigger to the **Set-JobTrigger** cmdlet, which changes it to a weekly job trigger that runs every four weeks on Monday at midnight. The command uses the *Passthru* parameter to return the trigger after the change.
PS C:\&gt;Get-JobTrigger -Name "Inventory" -TriggerID 2 | Set-JobTrigger -Weekly -WeeksInterval 4 -DaysOfWeek Monday -At "12:00 AM"
Id         Frequency       Time                   DaysOfWeek              Enabled
--         ---------       ----                   ----------              -------
1          Daily           9/27/2011 11:00:00 PM                          True
2          Weekly          10/31/2011 12:00:00 AM {Monday}                True</dev:code>
<dev:remarks><maml:para>This example shows how to change the type of job trigger that starts a job. The commands in this example replace an AtStartup job trigger with a weekly trigger.
</maml:para>
<maml:para>The first command uses the Get-JobTrigger cmdlet to get the job trigger of the Inventory scheduled job. The output shows that the job has two triggers a daily trigger and an AtStartup trigger.
</maml:para>
<maml:para>This command is not required; it is included only to show the effect of the trigger change.
</maml:para>
</dev:remarks>
</command:example>
<command:example><maml:title>Example 3: Change the user on a remote job trigger</maml:title>
<dev:code>PS C:\&gt;Invoke-Command -ComputerName "Server01" -ScriptBlock {Get-ScheduledJob | Get-JobTrigger | Where-Object {$_.User} | Set-JobTrigger -User "Domain01/Admin02"}</dev:code>
<dev:remarks><maml:para>This command changes the user in all AtLogon job triggers of scheduled jobs on the Server01 computer.
</maml:para>
<maml:para>The command uses the Invoke-Command cmdlet to run a command on the Server01 computer.
</maml:para>
<maml:para>The remote command begins with a Get-ScheduledJob command that gets all scheduled jobs on the computer. The scheduled jobs are piped to the Get-JobTrigger cmdlet, which gets the job triggers of the scheduled jobs. Each job trigger contains a JobDefinition property that contains the scheduled job, so the trigger remains associated with the scheduled job even when it is changed.
</maml:para>
<maml:para>The job triggers are piped to the Where-Object cmdlet, which gets job triggers that have the User property. The selected job triggers are piped to the Set-JobTrigger cmdlet, which changes the user to Domain01\Admin02.
</maml:para>
</dev:remarks>
</command:example>
<command:example><maml:title>Example 4: Change one of many job triggers</maml:title>
<dev:code>PS C:\&gt;Get-JobTrigger -Name "SecurityCheck"
Id         Frequency       Time                   DaysOfWeek              Enabled
--         ---------       ----                   ----------              -------
1          Daily           4/24/2013 3:00:00 AM                           True
2          Weekly          4/24/2013 4:00:00 PM   {Sunday}                True
3          Once            4/24/2013 4:00:00 PM                           True

The second command uses the **TriggerID** parameter of the **Get-JobTrigger** cmdlet to get the *Once* trigger of the SecurityCheck scheduled job. The command pipes the trigger to the Format-List cmdlet, which displays all of the properties of the *Once* job trigger.The output shows that the trigger starts the job once every hour (RepetitionInterval = 1 hour) for one day (RepetitionDuration = 1 day).
PS C:\&gt;Get-JobTrigger -Name "SecurityCheck" -TriggerID 3 | Format-List -Property *
At                 : 4/24/2012 4:00:00 PM
DaysOfWeek         :
Interval           : 1
Frequency          : Once
RandomDelay        : 00:00:00
RepetitionInterval : 01:00:00
RepetitionDuration : 1.00:00:00
User               :
Id                 : 3
Enabled            : True
JobDefinition      : Microsoft.PowerShell.ScheduledJob.ScheduledJobDefinition

The third command changes the repetition interval of the job trigger from one hour to 90 minutes. The command does not return any output.
PS C:\&gt;Get-JobTrigger -Name "SecurityCheck" -TriggerId 3 | Set-JobTrigger -RepetitionInterval (New-TimeSpan -Minutes 90)

The fourth command displays the effect of the change.The output shows that the trigger starts the job once every 90 minutes (RepetitionInterval = 1 hour, 30 minutes) for one day (RepetitionDuration = 1 day).
PS C:\&gt;Get-JobTrigger -Name "SecurityCheck" -TriggerID 3 | Format-List -Property *
At                 : 4/24/2012 4:00:00 PM
DaysOfWeek         :
Interval           : 1
Frequency          : Once
RandomDelay        : 00:00:00
RepetitionInterval : 01:30:00
RepetitionDuration : 1.00:00:00
User               :
Id                 : 3
Enabled            : True
JobDefinition      : Microsoft.PowerShell.ScheduledJob.ScheduledJobDefinition</dev:code>
<dev:remarks><maml:para>The commands in this example changes the repetition interval of the Once job trigger of SecurityCheck scheduled job from every 60 minutes to every 90 minutes. The SecurityCheck scheduled job has three job triggers, so the commands use the TriggerId parameter of the Get-JobTrigger cmdlet to identify the job trigger that is being changed.
</maml:para>
<maml:para>The first command uses the Get-JobTrigger cmdlet to get all job triggers of the SecurityCheck scheduled job. The output, which displays the IDs of the job triggers, reveals that the Once job trigger has an ID of 3.
</maml:para>
</dev:remarks>
</command:example>
</command:examples>
<command:relatedLinks><maml:navigationLink><maml:linkText>Online Version:</maml:linkText>
<maml:uri>http://go.microsoft.com/fwlink/?LinkId=821704</maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Add-JobTrigger</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Disable-JobTrigger</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Disable-ScheduledJob</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Enable-JobTrigger</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Enable-ScheduledJob</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Get-JobTrigger</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Get-ScheduledJob</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Get-ScheduledJobOption</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>New-JobTrigger</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>New-ScheduledJobOption</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Register-ScheduledJob</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Remove-JobTrigger</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Set-JobTrigger</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Set-ScheduledJob</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Set-ScheduledJobOption</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Unregister-ScheduledJob</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
</command:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
<command:details><command:name>Set-ScheduledJob</command:name>
<command:verb>Set</command:verb>
<command:noun>ScheduledJob</command:noun>
<maml:description><maml:para>Changes scheduled jobs.
</maml:para>
</maml:description>
</command:details>
<maml:description><maml:para>The Set-ScheduledJob cmdlet changes the properties of scheduled jobs, such as the commands that the jobs run or the credentials required to run the job. You can also use it to clear the execution history of the scheduled job.
</maml:para>
<maml:para>To use this cmdlet, begin by using the Get-ScheduledJob cmdlet to get the scheduled job. Then, pipe the scheduled job to Set-ScheduledJob or save the job in a variable and use the InputObject parameter to identify the job. Use the remaining parameters of Set-ScheduledJob to change the job properties or clear the execution history.
</maml:para>
<maml:para>Although you can use Set-ScheduledJob to change the triggers and options of a scheduled job, the Add-JobTrigger, Set-JobTrigger, and Set-ScheduledJobOption cmdlets provide much easier ways to accomplish those tasks. To create a new scheduled job, use the Register-ScheduledJob cmdlet.
</maml:para>
<maml:para>The Trigger parameter of Set-ScheduledJob adds one or more job triggers that start the job. The Trigger parameter is optional, so you can add triggers when you create the scheduled job, add job triggers later, add the RunNow parameter to start the job immediately, use the Start-Job cmdlet to start the job immediately at any time, or save the untriggered scheduled job as a template for other jobs. Set-ScheduledJob is one of a collection of job scheduling cmdlets in the PSScheduledJob module that is included in Windows PowerShell.
</maml:para>
<maml:para>For more information about Scheduled Jobs, see the About topics in the PSScheduledJob module. Import the PSScheduledJob module and then type: `Get-Help about_Scheduled*` or see about_Scheduled_Jobs.
</maml:para>
<maml:para>This cmdlet was introduced in Windows PowerShell 3.0.
</maml:para>
</maml:description>
<command:syntax><command:syntaxItem><maml:name>Set-ScheduledJob</maml:name>
<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByValue)" position="0" aliases="none"><maml:name>InputObject</maml:name>
<maml:Description><maml:para>Specifies the scheduled job to be changed. Enter a variable that contains ScheduledJobDefinition objects or type a command or expression that gets ScheduledJobDefinition objects, such as a Get-ScheduledJob command. You can also pipe a ScheduledJobDefinition object to Set-ScheduledJob .
</maml:para>
<maml:para>If you specify multiple scheduled jobs, Set-ScheduledJob makes the same changes to all jobs.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">ScheduledJobDefinition</command:parameterValue>
<dev:type><maml:name>ScheduledJobDefinition</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>ArgumentList</maml:name>
<maml:Description><maml:para>Specifies values for the parameters of the script that is specified by the FilePath parameter or for the command that is specified by the ScriptBlock parameter.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">Object[]</command:parameterValue>
<dev:type><maml:name>Object[]</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>Authentication</maml:name>
<maml:Description><maml:para>Specifies the mechanism that is used to authenticate the user's credentials. The acceptable values for this parameter are:
</maml:para>
<maml:para>- Default
</maml:para>
<maml:para>- Basic
</maml:para>
<maml:para>- Credssp
</maml:para>
<maml:para>- Digest
</maml:para>
<maml:para>- Kerberos
</maml:para>
<maml:para>- Negotiate
</maml:para>
<maml:para>- NegotiateWithImplicitCredential
</maml:para>
<maml:para>
</maml:para>
<maml:para>The default value is Default. For information about the values of this parameter, see AuthenticationMechanism Enumerationhttps://msdn.microsoft.com/en-us/library/system.management.automation.runspaces.authenticationmechanism(v=vs.85).aspx in MSDN.
</maml:para>
<maml:para>Caution: Credential Security Support Provider (CredSSP) authentication, in which the user's credentials are passed to a remote computer to be authenticated, is designed for commands that require authentication on more than one resource, such as accessing a remote network share. This mechanism increases the security risk of the remote operation. If the remote computer is compromised, the credentials that are passed to it can be used to control the network session.
</maml:para>
</maml:Description>
<command:parameterValueGroup><command:parameterValue required="false" variableLength="false">Default</command:parameterValue>
<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
<command:parameterValue required="false" variableLength="false">NegotiateWithImplicitCredential</command:parameterValue>
<command:parameterValue required="false" variableLength="false">Credssp</command:parameterValue>
<command:parameterValue required="false" variableLength="false">Digest</command:parameterValue>
<command:parameterValue required="false" variableLength="false">Kerberos</command:parameterValue>
</command:parameterValueGroup>
<command:parameterValue required="true" variableLength="false">AuthenticationMechanism</command:parameterValue>
<dev:type><maml:name>AuthenticationMechanism</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>Credential</maml:name>
<maml:Description><maml:para>Specifies a user account that has permission to run the scheduled job. The default is the current user.
</maml:para>
<maml:para>Type a user name, such as User01 or Domain01\User01, or enter a PSCredential object, such as one from the Get-Credential cmdlet. If you enter only a user name, you will be prompted for a password.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
<dev:type><maml:name>PSCredential</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>InitializationScript</maml:name>
<maml:Description><maml:para>Specifies the fully qualified path to a Windows PowerShell script (.ps1). The initialization script runs in the session that is created for the background job before the commands that are specified by the ScriptBlock parameter or the script that is specified by the FilePath parameter. You can use the initialization script to configure the session, such as adding files, functions, or aliases, creating directories, or checking for prerequisites.
</maml:para>
<maml:para>To specify a script that runs the primary job commands, use the FilePath parameter.
</maml:para>
<maml:para>If the initialization script generates an error, including a non-terminating error, the current instance of the scheduled job does not run and its status is Failed.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">ScriptBlock</command:parameterValue>
<dev:type><maml:name>ScriptBlock</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>MaxResultCount</maml:name>
<maml:Description><maml:para>Specifies how many job result entries are maintained for the scheduled job. The default value is 32.
</maml:para>
<maml:para>Windows PowerShell saves the execution history and results of each triggered instance of the scheduled job on disk. The value of this parameter determines the number of job instance results that are saved for this scheduled job. When the number of job instance results exceeds this value, Windows PowerShell deletes the results of the oldest job instance to make room for the results of the newest job instance.
</maml:para>
<maml:para>The job execution history and job results are saved in the $home\AppData\Local\Microsoft\Windows\PowerShell\ScheduledJobs\&lt;JobName&gt;\Output\&lt;Timestamp&gt; directories on the computer on which the job is created. To see the execution history, use the Get-Job cmdlet. To get the job results, use the Receive-Job cmdlet.
</maml:para>
<maml:para>The MaxResultCount parameter sets the value of the ExecutionHistoryLength property of the scheduled job.
</maml:para>
<maml:para>To delete the current execution history and job results, use the ClearExecutionHistory parameter.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
<dev:type><maml:name>Int32</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>Name</maml:name>
<maml:Description><maml:para>Specifies a new name for the scheduled job and instances of the scheduled job. The name must be unique on the local computer.
</maml:para>
<maml:para>To identify the scheduled job to be changed, use the InputObject parameter or pipe a scheduled job from Get-ScheduledJob to Set-ScheduledJob .
</maml:para>
<maml:para>This parameter does not change the names of job instances on disk. It affects only job instances that are started after this command completes.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
<dev:type><maml:name>String</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>PassThru</maml:name>
<maml:Description><maml:para>Returns an object representing the item with which you are working. By default, this cmdlet does not generate any output.
</maml:para>
</maml:Description>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>RunAs32</maml:name>
<maml:Description><maml:para>Runs the scheduled job in a 32-bit process.
</maml:para>
</maml:Description>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>RunEvery</maml:name>
<maml:Description><maml:para>@{Text=}
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">TimeSpan</command:parameterValue>
<dev:type><maml:name>TimeSpan</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>RunNow</maml:name>
<maml:Description><maml:para>Starts a job immediately, as soon as the Set-ScheduledJob cmdlet is run. This parameter eliminates the need to trigger Task Scheduler to run a Windows PowerShell script immediately after registration, and does not require users to create a trigger that specifies a starting date and time.
</maml:para>
</maml:Description>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>ScheduledJobOption</maml:name>
<maml:Description><maml:para>Sets options for the scheduled job. Enter a ScheduledJobOptions object, such as one that you create by using the New-ScheduledJobOption cmdlet, or a hash table value.
</maml:para>
<maml:para>You can set options for a scheduled job when you register the scheduled job or use the Set-ScheduledJobOption or Set-ScheduledJob cmdlets to set or change options.
</maml:para>
<maml:para>Many of the options and their default values determine whether and when a scheduled job runs. Be sure to review these options before scheduling a job. For a description of the scheduled job options, including the default values, see New-ScheduledJobOption.
</maml:para>
<maml:para>To submit a hash table, use the following keys. In the following hash table, the keys are shown with their default values.
</maml:para>
<maml:para>`@{# Power SettingsStartIfOnBattery=$False;StopIfGoingOnBattery=$True; WakeToRun=$False; # Idle SettingsStartIfNotIdle=$False; IdleDuration="00:10:00"; IdleTimeout="01:00:00"; StopIfGoingOffIdle=$True; RestartOnIdleResume=$False;# Security settingsShowInTaskScheduler=$TrueRunElevated=$False;# MiscRunWithoutNetwork=$False;DoNotAllowDemandStart=$False;MultipleInstancePolicy=IgnoreNew# Can be IgnoreNew, Parallel, Queue, StopExisting}`
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">ScheduledJobOptions</command:parameterValue>
<dev:type><maml:name>ScheduledJobOptions</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>ScriptBlock</maml:name>
<maml:Description><maml:para>Specifies the commands that the scheduled job runs. Enclose the commands in braces ( { } ) to create a script block. To specify default values for command parameters, use the ArgumentList parameter.
</maml:para>
<maml:para>Every Register-ScheduledJob command must use either the ScriptBlock or FilePath parameters.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">ScriptBlock</command:parameterValue>
<dev:type><maml:name>ScriptBlock</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>Trigger</maml:name>
<maml:Description><maml:para>Specifies the triggers for the scheduled job. Enter one or more ScheduledJobTrigger objects, such as the objects that the New-JobTrigger cmdlet returns, or a hash table of job trigger keys and values.
</maml:para>
<maml:para>A job trigger starts a scheduled job automatically on a one-time or recurring scheduled or when an event occurs.
</maml:para>
<maml:para>Job triggers are optional. You can add a trigger when you create the scheduled job, use the Add-JobTrigger or Set-ScheduledJob cmdlets to add triggers later, or use the Start-Job cmdlet to start the scheduled job immediately. You can also create and maintain a scheduled job that has no job triggers.
</maml:para>
<maml:para>To submit a hash table, use the following keys.
</maml:para>
<maml:para>`@{Frequency="Once" (or Daily, Weekly, AtStartup, AtLogon);At="3am"` (or any valid time string);  `DaysOfWeek="Monday", "Wednesday"` (or any combination of day names);  `Interval=2` (or any valid frequency interval);  `RandomDelay="30minutes"` (or any valid timespan string);  `User="Domain1\User01"` (or any valid user; used only with the AtLogon frequency value) 
</maml:para>
<maml:para>}
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">ScheduledJobTrigger[]</command:parameterValue>
<dev:type><maml:name>ScheduledJobTrigger[]</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
</command:syntaxItem>
<command:syntaxItem><maml:name>Set-ScheduledJob</maml:name>
<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByValue)" position="0" aliases="none"><maml:name>InputObject</maml:name>
<maml:Description><maml:para>Specifies the scheduled job to be changed. Enter a variable that contains ScheduledJobDefinition objects or type a command or expression that gets ScheduledJobDefinition objects, such as a Get-ScheduledJob command. You can also pipe a ScheduledJobDefinition object to Set-ScheduledJob .
</maml:para>
<maml:para>If you specify multiple scheduled jobs, Set-ScheduledJob makes the same changes to all jobs.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">ScheduledJobDefinition</command:parameterValue>
<dev:type><maml:name>ScheduledJobDefinition</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>ArgumentList</maml:name>
<maml:Description><maml:para>Specifies values for the parameters of the script that is specified by the FilePath parameter or for the command that is specified by the ScriptBlock parameter.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">Object[]</command:parameterValue>
<dev:type><maml:name>Object[]</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>Authentication</maml:name>
<maml:Description><maml:para>Specifies the mechanism that is used to authenticate the user's credentials. The acceptable values for this parameter are:
</maml:para>
<maml:para>- Default
</maml:para>
<maml:para>- Basic
</maml:para>
<maml:para>- Credssp
</maml:para>
<maml:para>- Digest
</maml:para>
<maml:para>- Kerberos
</maml:para>
<maml:para>- Negotiate
</maml:para>
<maml:para>- NegotiateWithImplicitCredential
</maml:para>
<maml:para>
</maml:para>
<maml:para>The default value is Default. For information about the values of this parameter, see AuthenticationMechanism Enumerationhttps://msdn.microsoft.com/en-us/library/system.management.automation.runspaces.authenticationmechanism(v=vs.85).aspx in MSDN.
</maml:para>
<maml:para>Caution: Credential Security Support Provider (CredSSP) authentication, in which the user's credentials are passed to a remote computer to be authenticated, is designed for commands that require authentication on more than one resource, such as accessing a remote network share. This mechanism increases the security risk of the remote operation. If the remote computer is compromised, the credentials that are passed to it can be used to control the network session.
</maml:para>
</maml:Description>
<command:parameterValueGroup><command:parameterValue required="false" variableLength="false">Default</command:parameterValue>
<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
<command:parameterValue required="false" variableLength="false">NegotiateWithImplicitCredential</command:parameterValue>
<command:parameterValue required="false" variableLength="false">Credssp</command:parameterValue>
<command:parameterValue required="false" variableLength="false">Digest</command:parameterValue>
<command:parameterValue required="false" variableLength="false">Kerberos</command:parameterValue>
</command:parameterValueGroup>
<command:parameterValue required="true" variableLength="false">AuthenticationMechanism</command:parameterValue>
<dev:type><maml:name>AuthenticationMechanism</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>Credential</maml:name>
<maml:Description><maml:para>Specifies a user account that has permission to run the scheduled job. The default is the current user.
</maml:para>
<maml:para>Type a user name, such as User01 or Domain01\User01, or enter a PSCredential object, such as one from the Get-Credential cmdlet. If you enter only a user name, you will be prompted for a password.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
<dev:type><maml:name>PSCredential</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>FilePath</maml:name>
<maml:Description><maml:para>Specifies a script that the scheduled job runs. Enter the path to a .ps1 file on the local computer. To specify default values for the script parameters, use the ArgumentList parameter. Every scheduled job must have either a ScriptBlock or FilePath value.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
<dev:type><maml:name>String</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>InitializationScript</maml:name>
<maml:Description><maml:para>Specifies the fully qualified path to a Windows PowerShell script (.ps1). The initialization script runs in the session that is created for the background job before the commands that are specified by the ScriptBlock parameter or the script that is specified by the FilePath parameter. You can use the initialization script to configure the session, such as adding files, functions, or aliases, creating directories, or checking for prerequisites.
</maml:para>
<maml:para>To specify a script that runs the primary job commands, use the FilePath parameter.
</maml:para>
<maml:para>If the initialization script generates an error, including a non-terminating error, the current instance of the scheduled job does not run and its status is Failed.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">ScriptBlock</command:parameterValue>
<dev:type><maml:name>ScriptBlock</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>MaxResultCount</maml:name>
<maml:Description><maml:para>Specifies how many job result entries are maintained for the scheduled job. The default value is 32.
</maml:para>
<maml:para>Windows PowerShell saves the execution history and results of each triggered instance of the scheduled job on disk. The value of this parameter determines the number of job instance results that are saved for this scheduled job. When the number of job instance results exceeds this value, Windows PowerShell deletes the results of the oldest job instance to make room for the results of the newest job instance.
</maml:para>
<maml:para>The job execution history and job results are saved in the $home\AppData\Local\Microsoft\Windows\PowerShell\ScheduledJobs\&lt;JobName&gt;\Output\&lt;Timestamp&gt; directories on the computer on which the job is created. To see the execution history, use the Get-Job cmdlet. To get the job results, use the Receive-Job cmdlet.
</maml:para>
<maml:para>The MaxResultCount parameter sets the value of the ExecutionHistoryLength property of the scheduled job.
</maml:para>
<maml:para>To delete the current execution history and job results, use the ClearExecutionHistory parameter.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
<dev:type><maml:name>Int32</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>Name</maml:name>
<maml:Description><maml:para>Specifies a new name for the scheduled job and instances of the scheduled job. The name must be unique on the local computer.
</maml:para>
<maml:para>To identify the scheduled job to be changed, use the InputObject parameter or pipe a scheduled job from Get-ScheduledJob to Set-ScheduledJob .
</maml:para>
<maml:para>This parameter does not change the names of job instances on disk. It affects only job instances that are started after this command completes.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
<dev:type><maml:name>String</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>PassThru</maml:name>
<maml:Description><maml:para>Returns an object representing the item with which you are working. By default, this cmdlet does not generate any output.
</maml:para>
</maml:Description>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>RunAs32</maml:name>
<maml:Description><maml:para>Runs the scheduled job in a 32-bit process.
</maml:para>
</maml:Description>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>RunEvery</maml:name>
<maml:Description><maml:para>@{Text=}
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">TimeSpan</command:parameterValue>
<dev:type><maml:name>TimeSpan</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>RunNow</maml:name>
<maml:Description><maml:para>Starts a job immediately, as soon as the Set-ScheduledJob cmdlet is run. This parameter eliminates the need to trigger Task Scheduler to run a Windows PowerShell script immediately after registration, and does not require users to create a trigger that specifies a starting date and time.
</maml:para>
</maml:Description>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>ScheduledJobOption</maml:name>
<maml:Description><maml:para>Sets options for the scheduled job. Enter a ScheduledJobOptions object, such as one that you create by using the New-ScheduledJobOption cmdlet, or a hash table value.
</maml:para>
<maml:para>You can set options for a scheduled job when you register the scheduled job or use the Set-ScheduledJobOption or Set-ScheduledJob cmdlets to set or change options.
</maml:para>
<maml:para>Many of the options and their default values determine whether and when a scheduled job runs. Be sure to review these options before scheduling a job. For a description of the scheduled job options, including the default values, see New-ScheduledJobOption.
</maml:para>
<maml:para>To submit a hash table, use the following keys. In the following hash table, the keys are shown with their default values.
</maml:para>
<maml:para>`@{# Power SettingsStartIfOnBattery=$False;StopIfGoingOnBattery=$True; WakeToRun=$False; # Idle SettingsStartIfNotIdle=$False; IdleDuration="00:10:00"; IdleTimeout="01:00:00"; StopIfGoingOffIdle=$True; RestartOnIdleResume=$False;# Security settingsShowInTaskScheduler=$TrueRunElevated=$False;# MiscRunWithoutNetwork=$False;DoNotAllowDemandStart=$False;MultipleInstancePolicy=IgnoreNew# Can be IgnoreNew, Parallel, Queue, StopExisting}`
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">ScheduledJobOptions</command:parameterValue>
<dev:type><maml:name>ScheduledJobOptions</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>Trigger</maml:name>
<maml:Description><maml:para>Specifies the triggers for the scheduled job. Enter one or more ScheduledJobTrigger objects, such as the objects that the New-JobTrigger cmdlet returns, or a hash table of job trigger keys and values.
</maml:para>
<maml:para>A job trigger starts a scheduled job automatically on a one-time or recurring scheduled or when an event occurs.
</maml:para>
<maml:para>Job triggers are optional. You can add a trigger when you create the scheduled job, use the Add-JobTrigger or Set-ScheduledJob cmdlets to add triggers later, or use the Start-Job cmdlet to start the scheduled job immediately. You can also create and maintain a scheduled job that has no job triggers.
</maml:para>
<maml:para>To submit a hash table, use the following keys.
</maml:para>
<maml:para>`@{Frequency="Once" (or Daily, Weekly, AtStartup, AtLogon);At="3am"` (or any valid time string);  `DaysOfWeek="Monday", "Wednesday"` (or any combination of day names);  `Interval=2` (or any valid frequency interval);  `RandomDelay="30minutes"` (or any valid timespan string);  `User="Domain1\User01"` (or any valid user; used only with the AtLogon frequency value) 
</maml:para>
<maml:para>}
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">ScheduledJobTrigger[]</command:parameterValue>
<dev:type><maml:name>ScheduledJobTrigger[]</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
</command:syntaxItem>
<command:syntaxItem><maml:name>Set-ScheduledJob</maml:name>
<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByValue)" position="0" aliases="none"><maml:name>InputObject</maml:name>
<maml:Description><maml:para>Specifies the scheduled job to be changed. Enter a variable that contains ScheduledJobDefinition objects or type a command or expression that gets ScheduledJobDefinition objects, such as a Get-ScheduledJob command. You can also pipe a ScheduledJobDefinition object to Set-ScheduledJob .
</maml:para>
<maml:para>If you specify multiple scheduled jobs, Set-ScheduledJob makes the same changes to all jobs.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">ScheduledJobDefinition</command:parameterValue>
<dev:type><maml:name>ScheduledJobDefinition</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>ClearExecutionHistory</maml:name>
<maml:Description><maml:para>Deletes the current execution history and the saved results of the scheduled job.
</maml:para>
<maml:para>The job execution history and job results are saved with the scheduled job in the $home\AppData\Local\Microsoft\Windows\PowerShell\ScheduledJobs directory on the computer on which the job is created. To see the execution history, use the Get-Job cmdlet. To get the job results, use the Receive-Job cmdlet.
</maml:para>
<maml:para>This parameter does not affect the events that Task Scheduler writes to the Windows event logs and it does not stop Windows PowerShell from saving job results. To manage the number of job results that are saved, use the MaxResultCount parameter.
</maml:para>
</maml:Description>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>PassThru</maml:name>
<maml:Description><maml:para>Returns an object representing the item with which you are working. By default, this cmdlet does not generate any output.
</maml:para>
</maml:Description>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
</command:syntaxItem>
</command:syntax>
<command:parameters><command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>ArgumentList</maml:name>
<maml:Description><maml:para>Specifies values for the parameters of the script that is specified by the FilePath parameter or for the command that is specified by the ScriptBlock parameter.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">Object[]</command:parameterValue>
<dev:type><maml:name>Object[]</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>Authentication</maml:name>
<maml:Description><maml:para>Specifies the mechanism that is used to authenticate the user's credentials. The acceptable values for this parameter are:
</maml:para>
<maml:para>- Default
</maml:para>
<maml:para>- Basic
</maml:para>
<maml:para>- Credssp
</maml:para>
<maml:para>- Digest
</maml:para>
<maml:para>- Kerberos
</maml:para>
<maml:para>- Negotiate
</maml:para>
<maml:para>- NegotiateWithImplicitCredential
</maml:para>
<maml:para>
</maml:para>
<maml:para>The default value is Default. For information about the values of this parameter, see AuthenticationMechanism Enumerationhttps://msdn.microsoft.com/en-us/library/system.management.automation.runspaces.authenticationmechanism(v=vs.85).aspx in MSDN.
</maml:para>
<maml:para>Caution: Credential Security Support Provider (CredSSP) authentication, in which the user's credentials are passed to a remote computer to be authenticated, is designed for commands that require authentication on more than one resource, such as accessing a remote network share. This mechanism increases the security risk of the remote operation. If the remote computer is compromised, the credentials that are passed to it can be used to control the network session.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">AuthenticationMechanism</command:parameterValue>
<dev:type><maml:name>AuthenticationMechanism</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>ClearExecutionHistory</maml:name>
<maml:Description><maml:para>Deletes the current execution history and the saved results of the scheduled job.
</maml:para>
<maml:para>The job execution history and job results are saved with the scheduled job in the $home\AppData\Local\Microsoft\Windows\PowerShell\ScheduledJobs directory on the computer on which the job is created. To see the execution history, use the Get-Job cmdlet. To get the job results, use the Receive-Job cmdlet.
</maml:para>
<maml:para>This parameter does not affect the events that Task Scheduler writes to the Windows event logs and it does not stop Windows PowerShell from saving job results. To manage the number of job results that are saved, use the MaxResultCount parameter.
</maml:para>
</maml:Description>
<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>Credential</maml:name>
<maml:Description><maml:para>Specifies a user account that has permission to run the scheduled job. The default is the current user.
</maml:para>
<maml:para>Type a user name, such as User01 or Domain01\User01, or enter a PSCredential object, such as one from the Get-Credential cmdlet. If you enter only a user name, you will be prompted for a password.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
<dev:type><maml:name>PSCredential</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>FilePath</maml:name>
<maml:Description><maml:para>Specifies a script that the scheduled job runs. Enter the path to a .ps1 file on the local computer. To specify default values for the script parameters, use the ArgumentList parameter. Every scheduled job must have either a ScriptBlock or FilePath value.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
<dev:type><maml:name>String</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>InitializationScript</maml:name>
<maml:Description><maml:para>Specifies the fully qualified path to a Windows PowerShell script (.ps1). The initialization script runs in the session that is created for the background job before the commands that are specified by the ScriptBlock parameter or the script that is specified by the FilePath parameter. You can use the initialization script to configure the session, such as adding files, functions, or aliases, creating directories, or checking for prerequisites.
</maml:para>
<maml:para>To specify a script that runs the primary job commands, use the FilePath parameter.
</maml:para>
<maml:para>If the initialization script generates an error, including a non-terminating error, the current instance of the scheduled job does not run and its status is Failed.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">ScriptBlock</command:parameterValue>
<dev:type><maml:name>ScriptBlock</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByValue)" position="0" aliases="none"><maml:name>InputObject</maml:name>
<maml:Description><maml:para>Specifies the scheduled job to be changed. Enter a variable that contains ScheduledJobDefinition objects or type a command or expression that gets ScheduledJobDefinition objects, such as a Get-ScheduledJob command. You can also pipe a ScheduledJobDefinition object to Set-ScheduledJob .
</maml:para>
<maml:para>If you specify multiple scheduled jobs, Set-ScheduledJob makes the same changes to all jobs.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">ScheduledJobDefinition</command:parameterValue>
<dev:type><maml:name>ScheduledJobDefinition</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>MaxResultCount</maml:name>
<maml:Description><maml:para>Specifies how many job result entries are maintained for the scheduled job. The default value is 32.
</maml:para>
<maml:para>Windows PowerShell saves the execution history and results of each triggered instance of the scheduled job on disk. The value of this parameter determines the number of job instance results that are saved for this scheduled job. When the number of job instance results exceeds this value, Windows PowerShell deletes the results of the oldest job instance to make room for the results of the newest job instance.
</maml:para>
<maml:para>The job execution history and job results are saved in the $home\AppData\Local\Microsoft\Windows\PowerShell\ScheduledJobs\&lt;JobName&gt;\Output\&lt;Timestamp&gt; directories on the computer on which the job is created. To see the execution history, use the Get-Job cmdlet. To get the job results, use the Receive-Job cmdlet.
</maml:para>
<maml:para>The MaxResultCount parameter sets the value of the ExecutionHistoryLength property of the scheduled job.
</maml:para>
<maml:para>To delete the current execution history and job results, use the ClearExecutionHistory parameter.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
<dev:type><maml:name>Int32</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>Name</maml:name>
<maml:Description><maml:para>Specifies a new name for the scheduled job and instances of the scheduled job. The name must be unique on the local computer.
</maml:para>
<maml:para>To identify the scheduled job to be changed, use the InputObject parameter or pipe a scheduled job from Get-ScheduledJob to Set-ScheduledJob .
</maml:para>
<maml:para>This parameter does not change the names of job instances on disk. It affects only job instances that are started after this command completes.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
<dev:type><maml:name>String</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>PassThru</maml:name>
<maml:Description><maml:para>Returns an object representing the item with which you are working. By default, this cmdlet does not generate any output.
</maml:para>
</maml:Description>
<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>RunAs32</maml:name>
<maml:Description><maml:para>Runs the scheduled job in a 32-bit process.
</maml:para>
</maml:Description>
<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>RunEvery</maml:name>
<maml:Description><maml:para>@{Text=}
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">TimeSpan</command:parameterValue>
<dev:type><maml:name>TimeSpan</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>RunNow</maml:name>
<maml:Description><maml:para>Starts a job immediately, as soon as the Set-ScheduledJob cmdlet is run. This parameter eliminates the need to trigger Task Scheduler to run a Windows PowerShell script immediately after registration, and does not require users to create a trigger that specifies a starting date and time.
</maml:para>
</maml:Description>
<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>ScheduledJobOption</maml:name>
<maml:Description><maml:para>Sets options for the scheduled job. Enter a ScheduledJobOptions object, such as one that you create by using the New-ScheduledJobOption cmdlet, or a hash table value.
</maml:para>
<maml:para>You can set options for a scheduled job when you register the scheduled job or use the Set-ScheduledJobOption or Set-ScheduledJob cmdlets to set or change options.
</maml:para>
<maml:para>Many of the options and their default values determine whether and when a scheduled job runs. Be sure to review these options before scheduling a job. For a description of the scheduled job options, including the default values, see New-ScheduledJobOption.
</maml:para>
<maml:para>To submit a hash table, use the following keys. In the following hash table, the keys are shown with their default values.
</maml:para>
<maml:para>`@{# Power SettingsStartIfOnBattery=$False;StopIfGoingOnBattery=$True; WakeToRun=$False; # Idle SettingsStartIfNotIdle=$False; IdleDuration="00:10:00"; IdleTimeout="01:00:00"; StopIfGoingOffIdle=$True; RestartOnIdleResume=$False;# Security settingsShowInTaskScheduler=$TrueRunElevated=$False;# MiscRunWithoutNetwork=$False;DoNotAllowDemandStart=$False;MultipleInstancePolicy=IgnoreNew# Can be IgnoreNew, Parallel, Queue, StopExisting}`
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">ScheduledJobOptions</command:parameterValue>
<dev:type><maml:name>ScheduledJobOptions</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>ScriptBlock</maml:name>
<maml:Description><maml:para>Specifies the commands that the scheduled job runs. Enclose the commands in braces ( { } ) to create a script block. To specify default values for command parameters, use the ArgumentList parameter.
</maml:para>
<maml:para>Every Register-ScheduledJob command must use either the ScriptBlock or FilePath parameters.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">ScriptBlock</command:parameterValue>
<dev:type><maml:name>ScriptBlock</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>Trigger</maml:name>
<maml:Description><maml:para>Specifies the triggers for the scheduled job. Enter one or more ScheduledJobTrigger objects, such as the objects that the New-JobTrigger cmdlet returns, or a hash table of job trigger keys and values.
</maml:para>
<maml:para>A job trigger starts a scheduled job automatically on a one-time or recurring scheduled or when an event occurs.
</maml:para>
<maml:para>Job triggers are optional. You can add a trigger when you create the scheduled job, use the Add-JobTrigger or Set-ScheduledJob cmdlets to add triggers later, or use the Start-Job cmdlet to start the scheduled job immediately. You can also create and maintain a scheduled job that has no job triggers.
</maml:para>
<maml:para>To submit a hash table, use the following keys.
</maml:para>
<maml:para>`@{Frequency="Once" (or Daily, Weekly, AtStartup, AtLogon);At="3am"` (or any valid time string);  `DaysOfWeek="Monday", "Wednesday"` (or any combination of day names);  `Interval=2` (or any valid frequency interval);  `RandomDelay="30minutes"` (or any valid timespan string);  `User="Domain1\User01"` (or any valid user; used only with the AtLogon frequency value) 
</maml:para>
<maml:para>}
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">ScheduledJobTrigger[]</command:parameterValue>
<dev:type><maml:name>ScheduledJobTrigger[]</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
</command:parameters>
<command:inputTypes><command:inputType><dev:type><maml:name>Microsoft.PowerShell.ScheduledJob.ScheduledJobDefinition</maml:name>
</dev:type>
<maml:description><maml:para>You can pipe scheduled jobs to Set-ScheduledJob .
</maml:para>
</maml:description>
</command:inputType>
</command:inputTypes>
<command:returnValues><command:returnValue><dev:type><maml:name>None or Microsoft.PowerShell.ScheduledJob.ScheduledJobDefinition</maml:name>
</dev:type>
<maml:description><maml:para>If you use the Passthru parameter, Set-ScheduledJob returns the scheduled job that was changed. Otherwise, this cmdlet does not generate any output.
</maml:para>
</maml:description>
</command:returnValue>
</command:returnValues>
<maml:alertSet><maml:alert><maml:para>
</maml:para>
</maml:alert>
</maml:alertSet>
<command:examples><command:example><maml:title>Example 1: Change the script that a job runs</maml:title>
<dev:code>PS C:\&gt;Get-ScheduledJob -Name "Inventory"
Id         Name            Triggers        Command                                  Enabled
--         ----            --------        -------                                  -------
1          Inventory       {1}             C:\Scripts\Get-Inventory.ps1             True

The second command uses the Get-ScheduledJob cmdlet to get the Inventory scheduled job. A pipeline operator (|) sends the scheduled job to the **Set-ScheduledJob** cmdlet. The **Set-ScheduledJob** cmdlet uses the *Script* parameter to specify a new script, Get-FullInventory.ps1. The command uses the *Passthru* parameter to return the scheduled job after the change.
PS C:\&gt;Get-ScheduledJob -Name "Inventory" | Set-ScheduledJob -FilePath "C:\Scripts\Get-FullInventory.ps1" -Passthru
Id         Name            Triggers        Command                                  Enabled
--         ----            --------        -------                                  -------
1          Inventory       {1}             C:\Scripts\Get-FullInventory.ps1         True</dev:code>
<dev:remarks><maml:para>This example shows how to change the script that is run in a scheduled job.
</maml:para>
<maml:para>The first command uses the Get-ScheduledJob cmdlet to get the Inventory scheduled job. The output shows that the job runs the Get-Inventory.ps1 script.
</maml:para>
<maml:para>This command is not required; it is included only to show the effect of the script change.
</maml:para>
</dev:remarks>
</command:example>
<command:example><maml:title>Example 2: Delete the execution history of a scheduled job</maml:title>
<dev:code>PS C:\&gt;Get-ScheduledJob BackupArchive | Set-ScheduledJob -ClearExecutionHistory</dev:code>
<dev:remarks><maml:para>This command deletes the current execution history and saved job results for the BackupArchive scheduled job.
</maml:para>
<maml:para>The command uses the Get-ScheduledJob cmdlet to get the BackupArchive scheduled job. A pipeline operator (|) sends the job to the Set-ScheduledJob cmdlet to change it. The Set-ScheduledJob cmdlet uses the ClearExecutionHistory parameter to delete the execution history and saved results.
</maml:para>
<maml:para>For more information about the execution history and saved job results of scheduled jobs, see about_Scheduled_Jobs.
</maml:para>
</dev:remarks>
</command:example>
<command:example><maml:title>Example 3: Change scheduled jobs on a remote computer</maml:title>
<dev:code>PS C:\&gt;Invoke-Command -Computer "Server01, Server02" -ScriptBlock {Get-ScheduledJob | Set-ScheduledJob -InitializationScript \\SrvA\Scripts\SetForRun.ps1}</dev:code>
<dev:remarks><maml:para>This command changes the initialization script in all scheduled jobs on the Server01 and Server02 computers.
</maml:para>
<maml:para>The command uses the Invoke-Command cmdlet to run a command on the Server01 and Server02 computers.
</maml:para>
<maml:para>The remote command begins with a Get-ScheduledJob command that gets all scheduled jobs on the computer. The scheduled jobs are piped to the Set-ScheduledJob cmdlet, which changes the initialization script to SetForRun.ps1.
</maml:para>
</dev:remarks>
</command:example>
</command:examples>
<command:relatedLinks><maml:navigationLink><maml:linkText>Online Version:</maml:linkText>
<maml:uri>http://go.microsoft.com/fwlink/?LinkId=821705</maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Add-JobTrigger</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Disable-JobTrigger</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Disable-ScheduledJob</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Enable-JobTrigger</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Enable-ScheduledJob</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Get-JobTrigger</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Get-ScheduledJob</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Get-ScheduledJobOption</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>New-JobTrigger</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>New-ScheduledJobOption</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Register-ScheduledJob</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Remove-JobTrigger</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Set-JobTrigger</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Set-ScheduledJob</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Set-ScheduledJobOption</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Unregister-ScheduledJob</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
</command:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
<command:details><command:name>Set-ScheduledJobOption</command:name>
<command:verb>Set</command:verb>
<command:noun>ScheduledJobOption</command:noun>
<maml:description><maml:para>Changes the job options of a scheduled job.
</maml:para>
</maml:description>
</command:details>
<maml:description><maml:para>The Set-ScheduledJobOptions cmdlet changes the job options of scheduled jobs.
</maml:para>
<maml:para>To change the options of a scheduled job, begin by using the Get-ScheduledJobOption cmdlet to get the job options of a scheduled job. Then, pipe the options to Set-ScheduledJobOption or save the options in a variable and use the InputObject parameter of Set-ScheduledJobOption cmdlet to identify the options. Use the remaining parameters of Set-ScheduledJobOption to change the job options.
</maml:para>
<maml:para>To turn on a job option, use the parameter that sets that option. To turn off an option, type the parameter name, a colon (:), and $False. For example, to turn off the RunElevated option, type `-RunElevated:$False`.
</maml:para>
<maml:para>Each job options object includes a JobDefinition property that contains the scheduled job, so the association with the scheduled job is retained when the job options are changed.
</maml:para>
<maml:para>The scheduled job options determine how the job runs when it is started by Task Scheduler. These options to not apply when you use the Start-Job cmdlet to start a scheduled job. Set-ScheduledJobOption is one of a collection of job scheduling cmdlets in the PSScheduledJob module that is included in Windows PowerShell.
</maml:para>
<maml:para>For more information about Scheduled Jobs, see the About topics in the PSScheduledJob module. Import the PSScheduledJob module and then type: `Get-Help about_Scheduled*` or see about_Scheduled_Jobs.
</maml:para>
<maml:para>This cmdlet was introduced in Windows PowerShell 3.0.
</maml:para>
</maml:description>
<command:syntax><command:syntaxItem><maml:name>Set-ScheduledJobOption</maml:name>
<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByValue)" position="0" aliases="none"><maml:name>InputObject</maml:name>
<maml:Description><maml:para>Specifies the job options. Enter a variable that contains ScheduledJobOptions objects or type a command or expression that gets ScheduledJobOptions objects, such as a Get-ScheduledJobOption command. You can also pipe a ScheduledJobOptions object to Set-ScheduledJobOption .
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">ScheduledJobOptions</command:parameterValue>
<dev:type><maml:name>ScheduledJobOptions</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>ContinueIfGoingOnBattery</maml:name>
<maml:Description><maml:para>Do not stop the scheduled job if the computer switches to battery power (disconnects from AC power) while the job is running. By default, scheduled jobs stop when the computer disconnects from AC power.
</maml:para>
<maml:para>The ContinueIfGoingOnBattery parameter sets the value of the StopIfGoingOnBatteries property of scheduled jobs to $True.
</maml:para>
</maml:Description>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>DoNotAllowDemandStart</maml:name>
<maml:Description><maml:para>Start the job only when it is triggered. Users cannot start the job manually, such as by using the Run feature in Task Scheduler.
</maml:para>
<maml:para>This parameter only affects Task Scheduler. It does not prevents users from using the Start-Job cmdlet to start the job.
</maml:para>
<maml:para>The DoNotAllowDemandStart parameter sets the value of the DoNotAllowDemandStart property of scheduled jobs to $True.
</maml:para>
</maml:Description>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>HideInTaskScheduler</maml:name>
<maml:Description><maml:para>Do not display the job in Task Scheduler. This value affects only the computer on which the job runs. By default, scheduled tasks appear in Task Scheduler.
</maml:para>
<maml:para>Even if a task is hidden, users can display the task by selecting the Show hidden tasks view option in Task Scheduler.
</maml:para>
<maml:para>The HideInTaskScheduler parameter sets the value of the ShowInTaskScheduler property of scheduled jobs to $False.
</maml:para>
</maml:Description>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>IdleDuration</maml:name>
<maml:Description><maml:para>Specifies how long the computer must be idle before the job starts. The default value is 10 minutes. If the computer is not idle for the specified duration before the value of IdleTimeout expires, the scheduled job does not run until the next scheduled time, if any.
</maml:para>
<maml:para>Enter a timespan object, such as one generated by the New-TimeSpan cmdlet, or enter a value in &lt;hours&gt;:&lt;minutes&gt;:&lt;seconds&gt; format that is automatically converted to a TimeSpan object.
</maml:para>
<maml:para>To enable this value, use the StartIfIdle parameter. By default, the StartIfNotIdle property of scheduled jobs is set to $True and Windows PowerShell ignores the IdleDuration and IdleTimeout values.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">TimeSpan</command:parameterValue>
<dev:type><maml:name>TimeSpan</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>IdleTimeout</maml:name>
<maml:Description><maml:para>Specifies how long the computer must be idle before the job starts. The default value is 10 minutes. If the computer is not idle for the specified duration before the value of IdleTimeout expires, the scheduled job does not run until the next scheduled time, if any.
</maml:para>
<maml:para>Enter a timespan object, such as one generated by the New-TimeSpan cmdlet, or enter a value in &lt;hours&gt;:&lt;minutes&gt;:&lt;seconds&gt; format that is automatically converted to a TimeSpan object.
</maml:para>
<maml:para>To enable this value, use the StartIfIdle parameter. By default, the StartIfNotIdle property of scheduled jobs is set to $True and Windows PowerShell ignores the IdleDuration and IdleTimeout values.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">TimeSpan</command:parameterValue>
<dev:type><maml:name>TimeSpan</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>MultipleInstancePolicy</maml:name>
<maml:Description><maml:para>Determines how the system responds to a request to start an instance of a scheduled job while another instance of the job is running. The acceptable values for this parameter are:
</maml:para>
<maml:para>- IgnoreNew. The new job instance is ignored. This is the default value.  - Parallel. The new job instance starts immediately. - Queue. The new job instance starts as soon as the current instance completes. - StopExisting. The current instance of the job stop and the new instance starts.
</maml:para>
<maml:para>To run the job, all conditions for the job schedule must be met. For example, if the conditions that are set by the RequireNetwork , IdleDuration , and IdleTimeout parameters are not satisfied, the job instance is not started, regardless of the value of this parameter.
</maml:para>
</maml:Description>
<command:parameterValueGroup><command:parameterValue required="false" variableLength="false">None</command:parameterValue>
<command:parameterValue required="false" variableLength="false">IgnoreNew</command:parameterValue>
<command:parameterValue required="false" variableLength="false">Parallel</command:parameterValue>
<command:parameterValue required="false" variableLength="false">Queue</command:parameterValue>
<command:parameterValue required="false" variableLength="false">StopExisting</command:parameterValue>
</command:parameterValueGroup>
<command:parameterValue required="true" variableLength="false">TaskMultipleInstancePolicy</command:parameterValue>
<dev:type><maml:name>TaskMultipleInstancePolicy</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>PassThru</maml:name>
<maml:Description><maml:para>Returns an object representing the item with which you are working. By default, this cmdlet does not generate any output.
</maml:para>
</maml:Description>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>RequireNetwork</maml:name>
<maml:Description><maml:para>Runs the scheduled job only when network connections are available.
</maml:para>
<maml:para>If you specify this parameter and the network is not available at the scheduled start time, the job does not run until the next scheduled start time, if any.
</maml:para>
<maml:para>The RequireNetwork parameter sets the value of the RunWithoutNetwork property of scheduled jobs to $False.
</maml:para>
</maml:Description>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>RestartOnIdleResume</maml:name>
<maml:Description><maml:para>Restarts a scheduled job when the computer becomes idle. This parameter works with the StopIfGoingOffIdle parameter, which suspends a running scheduled job if the computer becomes active (leaves the idle state).
</maml:para>
<maml:para>The RestartOnIdleResume parameter sets the value of the RestartOnIdleResume property of scheduled jobs to $True.
</maml:para>
</maml:Description>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>RunElevated</maml:name>
<maml:Description><maml:para>Runs the scheduled job with the permissions of a member of the Administrators group on the computer on which the job runs.
</maml:para>
<maml:para>To enable a scheduled job to run with Administrator permissions, use the Credential parameter of Register-ScheduledJob to provide explicit credential for the job.
</maml:para>
<maml:para>The RunElevated parameter sets the value of the RunElevated property of scheduled jobs to True.
</maml:para>
</maml:Description>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>StartIfIdle</maml:name>
<maml:Description><maml:para>Starts the scheduled job if the computer has been idle for the time specified by the IdleDuration parameter before the time specified by the IdleTimeout parameter expires.
</maml:para>
<maml:para>By default, the IdleDuration and IdleTimeout parameters are ignored and the job starts at the scheduled start time even if the computer is busy.
</maml:para>
<maml:para>If you specify this parameter and the computer is busy (not idle) at the scheduled start time, the job does not run until the next scheduled start time, if any.
</maml:para>
<maml:para>The StartIfIdle parameter sets the value of the StartIfNotIdle property of scheduled jobs to False.
</maml:para>
</maml:Description>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>StartIfOnBattery</maml:name>
<maml:Description><maml:para>Starts the scheduled job even if the computer is running on batteries at the scheduled start time. The default value is False.
</maml:para>
<maml:para>The StartIfOnBattery parameter sets the value of the StartIfOnBatteries property of scheduled jobs to $True.
</maml:para>
</maml:Description>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>StopIfGoingOffIdle</maml:name>
<maml:Description><maml:para>Suspends a running scheduled job if the computer becomes active (not idle) while the job is running.
</maml:para>
<maml:para>By default, a scheduled job that is suspended when the computer becomes active resumes when the computer becomes idle again. To change this default behavior, use the RestartOnIdleResume parameter.
</maml:para>
<maml:para>The StopIfGoingOffIdle parameter sets the value of the StopIfGoingOffIdle property of scheduled jobs to $True.
</maml:para>
</maml:Description>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>WakeToRun</maml:name>
<maml:Description><maml:para>Wakes the computer from a Hibernate or Sleep state at the scheduled start time so it can run the job. By default, if the computer is in a Hibernate or Sleep state at the scheduled start time, the job does not run.
</maml:para>
<maml:para>The WakeToRun parameter sets the value of the WakeToRun property of scheduled jobs to $True.
</maml:para>
</maml:Description>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
</command:syntaxItem>
</command:syntax>
<command:parameters><command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>ContinueIfGoingOnBattery</maml:name>
<maml:Description><maml:para>Do not stop the scheduled job if the computer switches to battery power (disconnects from AC power) while the job is running. By default, scheduled jobs stop when the computer disconnects from AC power.
</maml:para>
<maml:para>The ContinueIfGoingOnBattery parameter sets the value of the StopIfGoingOnBatteries property of scheduled jobs to $True.
</maml:para>
</maml:Description>
<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>DoNotAllowDemandStart</maml:name>
<maml:Description><maml:para>Start the job only when it is triggered. Users cannot start the job manually, such as by using the Run feature in Task Scheduler.
</maml:para>
<maml:para>This parameter only affects Task Scheduler. It does not prevents users from using the Start-Job cmdlet to start the job.
</maml:para>
<maml:para>The DoNotAllowDemandStart parameter sets the value of the DoNotAllowDemandStart property of scheduled jobs to $True.
</maml:para>
</maml:Description>
<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>HideInTaskScheduler</maml:name>
<maml:Description><maml:para>Do not display the job in Task Scheduler. This value affects only the computer on which the job runs. By default, scheduled tasks appear in Task Scheduler.
</maml:para>
<maml:para>Even if a task is hidden, users can display the task by selecting the Show hidden tasks view option in Task Scheduler.
</maml:para>
<maml:para>The HideInTaskScheduler parameter sets the value of the ShowInTaskScheduler property of scheduled jobs to $False.
</maml:para>
</maml:Description>
<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>IdleDuration</maml:name>
<maml:Description><maml:para>Specifies how long the computer must be idle before the job starts. The default value is 10 minutes. If the computer is not idle for the specified duration before the value of IdleTimeout expires, the scheduled job does not run until the next scheduled time, if any.
</maml:para>
<maml:para>Enter a timespan object, such as one generated by the New-TimeSpan cmdlet, or enter a value in &lt;hours&gt;:&lt;minutes&gt;:&lt;seconds&gt; format that is automatically converted to a TimeSpan object.
</maml:para>
<maml:para>To enable this value, use the StartIfIdle parameter. By default, the StartIfNotIdle property of scheduled jobs is set to $True and Windows PowerShell ignores the IdleDuration and IdleTimeout values.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">TimeSpan</command:parameterValue>
<dev:type><maml:name>TimeSpan</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>IdleTimeout</maml:name>
<maml:Description><maml:para>Specifies how long the computer must be idle before the job starts. The default value is 10 minutes. If the computer is not idle for the specified duration before the value of IdleTimeout expires, the scheduled job does not run until the next scheduled time, if any.
</maml:para>
<maml:para>Enter a timespan object, such as one generated by the New-TimeSpan cmdlet, or enter a value in &lt;hours&gt;:&lt;minutes&gt;:&lt;seconds&gt; format that is automatically converted to a TimeSpan object.
</maml:para>
<maml:para>To enable this value, use the StartIfIdle parameter. By default, the StartIfNotIdle property of scheduled jobs is set to $True and Windows PowerShell ignores the IdleDuration and IdleTimeout values.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">TimeSpan</command:parameterValue>
<dev:type><maml:name>TimeSpan</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByValue)" position="0" aliases="none"><maml:name>InputObject</maml:name>
<maml:Description><maml:para>Specifies the job options. Enter a variable that contains ScheduledJobOptions objects or type a command or expression that gets ScheduledJobOptions objects, such as a Get-ScheduledJobOption command. You can also pipe a ScheduledJobOptions object to Set-ScheduledJobOption .
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">ScheduledJobOptions</command:parameterValue>
<dev:type><maml:name>ScheduledJobOptions</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>MultipleInstancePolicy</maml:name>
<maml:Description><maml:para>Determines how the system responds to a request to start an instance of a scheduled job while another instance of the job is running. The acceptable values for this parameter are:
</maml:para>
<maml:para>- IgnoreNew. The new job instance is ignored. This is the default value.  - Parallel. The new job instance starts immediately. - Queue. The new job instance starts as soon as the current instance completes. - StopExisting. The current instance of the job stop and the new instance starts.
</maml:para>
<maml:para>To run the job, all conditions for the job schedule must be met. For example, if the conditions that are set by the RequireNetwork , IdleDuration , and IdleTimeout parameters are not satisfied, the job instance is not started, regardless of the value of this parameter.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">TaskMultipleInstancePolicy</command:parameterValue>
<dev:type><maml:name>TaskMultipleInstancePolicy</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>PassThru</maml:name>
<maml:Description><maml:para>Returns an object representing the item with which you are working. By default, this cmdlet does not generate any output.
</maml:para>
</maml:Description>
<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>RequireNetwork</maml:name>
<maml:Description><maml:para>Runs the scheduled job only when network connections are available.
</maml:para>
<maml:para>If you specify this parameter and the network is not available at the scheduled start time, the job does not run until the next scheduled start time, if any.
</maml:para>
<maml:para>The RequireNetwork parameter sets the value of the RunWithoutNetwork property of scheduled jobs to $False.
</maml:para>
</maml:Description>
<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>RestartOnIdleResume</maml:name>
<maml:Description><maml:para>Restarts a scheduled job when the computer becomes idle. This parameter works with the StopIfGoingOffIdle parameter, which suspends a running scheduled job if the computer becomes active (leaves the idle state).
</maml:para>
<maml:para>The RestartOnIdleResume parameter sets the value of the RestartOnIdleResume property of scheduled jobs to $True.
</maml:para>
</maml:Description>
<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>RunElevated</maml:name>
<maml:Description><maml:para>Runs the scheduled job with the permissions of a member of the Administrators group on the computer on which the job runs.
</maml:para>
<maml:para>To enable a scheduled job to run with Administrator permissions, use the Credential parameter of Register-ScheduledJob to provide explicit credential for the job.
</maml:para>
<maml:para>The RunElevated parameter sets the value of the RunElevated property of scheduled jobs to True.
</maml:para>
</maml:Description>
<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>StartIfIdle</maml:name>
<maml:Description><maml:para>Starts the scheduled job if the computer has been idle for the time specified by the IdleDuration parameter before the time specified by the IdleTimeout parameter expires.
</maml:para>
<maml:para>By default, the IdleDuration and IdleTimeout parameters are ignored and the job starts at the scheduled start time even if the computer is busy.
</maml:para>
<maml:para>If you specify this parameter and the computer is busy (not idle) at the scheduled start time, the job does not run until the next scheduled start time, if any.
</maml:para>
<maml:para>The StartIfIdle parameter sets the value of the StartIfNotIdle property of scheduled jobs to False.
</maml:para>
</maml:Description>
<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>StartIfOnBattery</maml:name>
<maml:Description><maml:para>Starts the scheduled job even if the computer is running on batteries at the scheduled start time. The default value is False.
</maml:para>
<maml:para>The StartIfOnBattery parameter sets the value of the StartIfOnBatteries property of scheduled jobs to $True.
</maml:para>
</maml:Description>
<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>StopIfGoingOffIdle</maml:name>
<maml:Description><maml:para>Suspends a running scheduled job if the computer becomes active (not idle) while the job is running.
</maml:para>
<maml:para>By default, a scheduled job that is suspended when the computer becomes active resumes when the computer becomes idle again. To change this default behavior, use the RestartOnIdleResume parameter.
</maml:para>
<maml:para>The StopIfGoingOffIdle parameter sets the value of the StopIfGoingOffIdle property of scheduled jobs to $True.
</maml:para>
</maml:Description>
<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>WakeToRun</maml:name>
<maml:Description><maml:para>Wakes the computer from a Hibernate or Sleep state at the scheduled start time so it can run the job. By default, if the computer is in a Hibernate or Sleep state at the scheduled start time, the job does not run.
</maml:para>
<maml:para>The WakeToRun parameter sets the value of the WakeToRun property of scheduled jobs to $True.
</maml:para>
</maml:Description>
<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
</command:parameters>
<command:inputTypes><command:inputType><dev:type><maml:name>Microsoft.PowerShell.ScheduledJob.ScheduledJobOptions</maml:name>
</dev:type>
<maml:description><maml:para>You can pipe a scheduled job options object to Set-ScheduledJobOption .
</maml:para>
</maml:description>
</command:inputType>
</command:inputTypes>
<command:returnValues><command:returnValue><dev:type><maml:name>None or Microsoft.PowerShell.ScheduledJob.ScheduledJobOptions</maml:name>
</dev:type>
<maml:description><maml:para>When you use the Passthru parameter, Set-ScheduledJobOption returns the job options that were changed. Otherwise, this cmdlet does not generate any output.
</maml:para>
</maml:description>
</command:returnValue>
</command:returnValues>
<maml:alertSet><maml:alert><maml:para>
</maml:para>
</maml:alert>
</maml:alertSet>
<command:examples><command:example><maml:title>Example 1: Change job options</maml:title>
<dev:code>PS C:\&gt;Get-ScheduledJobOption -Name "DeployPackage"
StartIfOnBatteries     : False
StopIfGoingOnBatteries : True
WakeToRun              : False
StartIfNotIdle         : True
StopIfGoingOffIdle     : False
RestartOnIdleResume    : False
IdleDuration           : 00:10:00
IdleTimeout            : 01:00:00
ShowInTaskScheduler    : True
RunElevated            : False
RunWithoutNetwork      : False
DoNotAllowDemandStart  : False
MultipleInstancePolicy : IgnoreNew
JobDefinition          :

The second command uses the **Set-ScheduledJobOpton** cmdlet to change the job options so the values of the WakeToRun and RunWithoutNetwork properties are $True. The command uses the *Passthru* parameter to return the trigger after the change.
PS C:\&gt;Get-ScheduledJobOption -Name "DeployPackage" | Set-ScheduledJobOption -WakeToRun -RequireNetwork:$False -Passthru
StartIfOnBatteries     : False
StopIfGoingOnBatteries : True
WakeToRun              : True
StartIfNotIdle         : True
StopIfGoingOffIdle     : False
RestartOnIdleResume    : False
IdleDuration           : 00:10:00
IdleTimeout            : 01:00:00
ShowInTaskScheduler    : True
RunElevated            : False
RunWithoutNetwork      : True
DoNotAllowDemandStart  : False
MultipleInstancePolicy : IgnoreNewJobDefinition          :</dev:code>
<dev:remarks><maml:para>This example shows how to change the options of a scheduled job on the local computer.
</maml:para>
<maml:para>The first command uses the Get-ScheduledJobOption cmdlet to get the job options of the DeployPackage scheduled job. The output shows that the WakeToRun and RunElevated properties are set to $False.
</maml:para>
<maml:para>This command is not required; it is included only to show the effect of the option change.
</maml:para>
</dev:remarks>
</command:example>
<command:example><maml:title>Example 2: Change an option on all remote scheduled jobs</maml:title>
<dev:code>PS C:\&gt;Invoke-Command -Computer "Server01" -ScriptBlock {Get-ScheduledJob | Get-ScheduledJobOption | Set-ScheduledJobOption -IdleTimeout 2:00:00}</dev:code>
<dev:remarks><maml:para>This command changes the value of the IdleTimeout from one hour (the default value) to two hours on all scheduled jobs on the Server01 computer.
</maml:para>
<maml:para>The command uses the Invoke-Command cmdlet to run a command on the Server01 computer.
</maml:para>
<maml:para>The remote command begins with a Get-ScheduledJob command that gets all scheduled jobs on the computer. The scheduled jobs are piped to the Get-ScheduledJobOption cmdlet, which gets the job options of the scheduled jobs. Each job options object contains a JobDefinition property that contains the scheduled job, so the options object remains associated with the scheduled job even when it is changed.
</maml:para>
<maml:para>The job triggers are piped to the Set-ScheduledJobOption cmdlet, which changes the value of the IdleTimeout option to two hours (2:00:00).
</maml:para>
</dev:remarks>
</command:example>
</command:examples>
<command:relatedLinks><maml:navigationLink><maml:linkText>Online Version:</maml:linkText>
<maml:uri>http://go.microsoft.com/fwlink/?LinkId=821706</maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Add-JobTrigger</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Disable-JobTrigger</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Disable-ScheduledJob</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Enable-JobTrigger</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Enable-ScheduledJob</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Get-JobTrigger</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Get-ScheduledJob</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Get-ScheduledJobOption</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>New-JobTrigger</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>New-ScheduledJobOption</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Register-ScheduledJob</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Remove-JobTrigger</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Set-JobTrigger</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Set-ScheduledJob</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Set-ScheduledJobOption</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Unregister-ScheduledJob</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
</command:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
<command:details><command:name>Unregister-ScheduledJob</command:name>
<command:verb>Unregister</command:verb>
<command:noun>ScheduledJob</command:noun>
<maml:description><maml:para>Deletes scheduled jobs on the local computer.
</maml:para>
</maml:description>
</command:details>
<maml:description><maml:para>The Unregister-ScheduledJob cmdlet deletes scheduled jobs from the local computer.
</maml:para>
<maml:para>When it deletes or unregisters a scheduled job, Unregister-ScheduledJob deletes the directory for the scheduled job (in the $home\AppData\Local\Microsoft\Windows\PowerShell\ScheduledJobs directory), which contains the XML file that defines the scheduled job, the job execution history, and all job results. This action also deletes the job from Task Scheduler. Unregister-ScheduledJob deletes only the scheduled jobs that are created by using the Register-ScheduledJob cmdlet. It does not delete scheduled jobs that are created in Task Scheduler.
</maml:para>
<maml:para>You can use the parameters of Unregister-ScheduledJob to delete scheduled jobs by ID or name, or pipe scheduled jobs from Get-ScheduledJob to Unregister-ScheduledJob . Unregister-ScheduledJob is one of a collection of job scheduling cmdlets in the PSScheduledJob module that is included in Windows PowerShell.
</maml:para>
<maml:para>For more information about Scheduled Jobs, see the About topics in the PSScheduledJob module. Import the PSScheduledJob module and then type: `Get-Help about_Scheduled*` or see about_Scheduled_Jobs.
</maml:para>
<maml:para>This cmdlet was introduced in Windows PowerShell 3.0.
</maml:para>
</maml:description>
<command:syntax><command:syntaxItem><maml:name>Unregister-ScheduledJob</maml:name>
<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="0" aliases="none"><maml:name>Id</maml:name>
<maml:Description><maml:para>Deletes the scheduled jobs with the specified identification numbers (ID). Enter the IDs of scheduled jobs on the computer.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">Int32[]</command:parameterValue>
<dev:type><maml:name>Int32[]</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="cf"><maml:name>Confirm</maml:name>
<maml:Description><maml:para>Prompts you for confirmation before running the cmdlet.
</maml:para>
</maml:Description>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>Force</maml:name>
<maml:Description><maml:para>Deletes the scheduled job even if an instance of the job is running. By default, Unregister-ScheduledJob does not interrupt running jobs.
</maml:para>
</maml:Description>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="wi"><maml:name>WhatIf</maml:name>
<maml:Description><maml:para>Shows what would happen if the cmdlet runs. The cmdlet is not run.
</maml:para>
</maml:Description>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
</command:syntaxItem>
<command:syntaxItem><maml:name>Unregister-ScheduledJob</maml:name>
<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByValue)" position="0" aliases="none"><maml:name>InputObject</maml:name>
<maml:Description><maml:para>Specifies a scheduled job. Enter a variable that contains ScheduledJob objects or type a command or expression that gets ScheduledJob objects, such as a Get-ScheduledJob command. You can also pipe ScheduledJob objects to Unregister-JobTrigger .
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">ScheduledJobDefinition[]</command:parameterValue>
<dev:type><maml:name>ScheduledJobDefinition[]</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="cf"><maml:name>Confirm</maml:name>
<maml:Description><maml:para>Prompts you for confirmation before running the cmdlet.
</maml:para>
</maml:Description>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>Force</maml:name>
<maml:Description><maml:para>Deletes the scheduled job even if an instance of the job is running. By default, Unregister-ScheduledJob does not interrupt running jobs.
</maml:para>
</maml:Description>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="wi"><maml:name>WhatIf</maml:name>
<maml:Description><maml:para>Shows what would happen if the cmdlet runs. The cmdlet is not run.
</maml:para>
</maml:Description>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
</command:syntaxItem>
<command:syntaxItem><maml:name>Unregister-ScheduledJob</maml:name>
<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="0" aliases="none"><maml:name>Name</maml:name>
<maml:Description><maml:para>Deletes the scheduled jobs with the specified names. Enter the names of one or more scheduled jobs on the computer. Wildcards are supported.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
<dev:type><maml:name>String[]</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="cf"><maml:name>Confirm</maml:name>
<maml:Description><maml:para>Prompts you for confirmation before running the cmdlet.
</maml:para>
</maml:Description>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>Force</maml:name>
<maml:Description><maml:para>Deletes the scheduled job even if an instance of the job is running. By default, Unregister-ScheduledJob does not interrupt running jobs.
</maml:para>
</maml:Description>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="wi"><maml:name>WhatIf</maml:name>
<maml:Description><maml:para>Shows what would happen if the cmdlet runs. The cmdlet is not run.
</maml:para>
</maml:Description>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
</command:syntaxItem>
</command:syntax>
<command:parameters><command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="cf"><maml:name>Confirm</maml:name>
<maml:Description><maml:para>Prompts you for confirmation before running the cmdlet.
</maml:para>
</maml:Description>
<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>Force</maml:name>
<maml:Description><maml:para>Deletes the scheduled job even if an instance of the job is running. By default, Unregister-ScheduledJob does not interrupt running jobs.
</maml:para>
</maml:Description>
<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="0" aliases="none"><maml:name>Id</maml:name>
<maml:Description><maml:para>Deletes the scheduled jobs with the specified identification numbers (ID). Enter the IDs of scheduled jobs on the computer.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">Int32[]</command:parameterValue>
<dev:type><maml:name>Int32[]</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByValue)" position="0" aliases="none"><maml:name>InputObject</maml:name>
<maml:Description><maml:para>Specifies a scheduled job. Enter a variable that contains ScheduledJob objects or type a command or expression that gets ScheduledJob objects, such as a Get-ScheduledJob command. You can also pipe ScheduledJob objects to Unregister-JobTrigger .
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">ScheduledJobDefinition[]</command:parameterValue>
<dev:type><maml:name>ScheduledJobDefinition[]</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="0" aliases="none"><maml:name>Name</maml:name>
<maml:Description><maml:para>Deletes the scheduled jobs with the specified names. Enter the names of one or more scheduled jobs on the computer. Wildcards are supported.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
<dev:type><maml:name>String[]</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="wi"><maml:name>WhatIf</maml:name>
<maml:Description><maml:para>Shows what would happen if the cmdlet runs. The cmdlet is not run.
</maml:para>
</maml:Description>
<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
</command:parameters>
<command:inputTypes><command:inputType><dev:type><maml:name>Microsoft.PowerShell.ScheduledJob.ScheduledJobDefinition</maml:name>
</dev:type>
<maml:description><maml:para>You can pipe scheduled jobs to Unregister-ScheduledJob
</maml:para>
</maml:description>
</command:inputType>
</command:inputTypes>
<command:returnValues><command:returnValue><dev:type><maml:name>None</maml:name>
</dev:type>
<maml:description><maml:para>This cmdlet does not generate any output.
</maml:para>
</maml:description>
</command:returnValue>
</command:returnValues>
<maml:alertSet><maml:alert><maml:para>
</maml:para>
</maml:alert>
</maml:alertSet>
<command:examples><command:example><maml:title>Example 1: Delete a scheduled job</maml:title>
<dev:code>PS C:\&gt;Unregister-ScheduledJob TestJob</dev:code>
<dev:remarks><maml:para>This command deletes the TestJob scheduled job on the local computer.
</maml:para>
</dev:remarks>
</command:example>
<command:example><maml:title>Example 2: Delete all scheduled jobs</maml:title>
<dev:code>PS C:\&gt;Get-ScheduledJob | Unregister-ScheduledJob -Force
PS C:\&gt;Unregistered-ScheduledJob -Name "*" -Force</dev:code>
<dev:remarks><maml:para>This example shows two different commands that delete all scheduled jobs on the local computer.
</maml:para>
<maml:para>The first command uses the Get-ScheduledJob cmdlet to get all scheduled jobs on the local computer. A pipeline operator (|) sends the scheduled jobs to Unregister-ScheduleJob , which deletes them.
</maml:para>
<maml:para>The second command uses the Name parameter of Unregister-ScheduledJob with a value of all (*) to delete all scheduled jobs.
</maml:para>
<maml:para>Both commands use the Force parameter, which deletes a scheduled job even if an instance of the job is running.
</maml:para>
</dev:remarks>
</command:example>
<command:example><maml:title>Example 3: Delete a scheduled job on a remote computer</maml:title>
<dev:code>PS C:\&gt;Invoke-Command -ComputerName "Server01" { Unregister-ScheduledJob -Name "Test*"}</dev:code>
<dev:remarks><maml:para>This command deletes scheduled jobs with names that begin with Test on the Server01 remote computer. The command uses the Invoke-Command cmdlet to run the Unregister-ScheduledJob command on the Server02 computer.
</maml:para>
</dev:remarks>
</command:example>
</command:examples>
<command:relatedLinks><maml:navigationLink><maml:linkText>Online Version:</maml:linkText>
<maml:uri>http://go.microsoft.com/fwlink/?LinkId=821707</maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Add-JobTrigger</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Disable-JobTrigger</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Disable-ScheduledJob</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Enable-JobTrigger</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Enable-ScheduledJob</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Get-JobTrigger</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Get-ScheduledJob</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Get-ScheduledJobOption</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>New-JobTrigger</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>New-ScheduledJobOption</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Register-ScheduledJob</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Remove-JobTrigger</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Set-JobTrigger</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Set-ScheduledJob</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Set-ScheduledJobOption</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Unregister-ScheduledJob</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
</command:relatedLinks>
</command:command>
</helpItems>
